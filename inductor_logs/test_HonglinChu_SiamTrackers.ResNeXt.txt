V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['30_forward']
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4t/c4tu2fejv23em7cilbxpbyytoyormxcahrvakbtwvcrlgmp4v3sf.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d, batch_norm, out], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_1, mul_1, mul_2, sub
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => relu
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 952576
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 3721) % 64)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3721)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 3721
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 3744*x4), tmp19, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fp/cfp57wrlhx4wombxoexs56otb26uedkjzzgntvcviw32rb5nck5a.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.max_pool2d_with_indices]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => getitem, getitem_1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem : [num_users=3] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_1 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_1 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_1', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_1(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 230400
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 30)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 30) % 30)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 900
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (61 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (62 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (63 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (122 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (123 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (124 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp10)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp12)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp1 > tmp0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 1, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full([1], 0, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp18, tmp19)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp3 > tmp2
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 2, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp21, tmp22, tmp20)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp5 > tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 3, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp25, tmp23)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp7 > tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1], 4, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp27, tmp28, tmp26)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp9 > tmp8
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 5, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp31, tmp29)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp11 > tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1], 6, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp33, tmp34, tmp32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp13 > tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full([1], 7, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp36, tmp37, tmp35)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp15 > tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1], 8, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.where(tmp39, tmp40, tmp38)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp16, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp41, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5r/c5rfeteklyp34txqqzm2moghdnhaavtjthbj6b77wxpecvzl5coj.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_3, mul_4, mul_5, sub_1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => relu_1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_2', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 57600
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 900) % 16)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/k4/ck426dhibutjvipslsudqp7rr7pxnrxo3x3hn5ugqucaogmkun5d.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, out_2, batch_norm_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_4 => mul_13, mul_14, sub_4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_7, mul_10, mul_11, sub_3
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_8
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_29), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_31), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_7, %convolution_4), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_8, %unsqueeze_33), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_37), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_3', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 115200
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 900) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr8 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 - tmp18
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.sqrt(tmp21)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp7 / tmp22
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 * tmp24
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp27, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bq/cbqd5dyh5qu54lzw5ss3uvi7hdgjdji4lxuasfchpkwiovqpwcr7.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => clone
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_4,), kwargs = {memory_format: torch.contiguous_format})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 100352
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 28)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 28) % 28)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 784
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 784) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (31 + x0 + 30*x1 + 900*x4), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp4, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cm/ccmivf2f7tbgrt67dqjms2vk7rewwdm7d4deablyfrx2hr4xl4bi.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_12, input_13], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => add_12, mul_16, mul_17, sub_5
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_13 => relu_4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_43), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_16, %unsqueeze_45), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_17, %unsqueeze_47), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_12,), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_5', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 50176
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 784) % 16)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/al/cal3iux4bw5jbmqhlmt4ksyqfclytgtqocsy6x5ygyz2sbweizhw.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_18, out_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => add_16, mul_22, mul_23, sub_7
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => add_17
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_7, %unsqueeze_57), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_59), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_22, %unsqueeze_61), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_23, %unsqueeze_63), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_16, %clone), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_6 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_6', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 100352
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 784) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zf/czfbb5gvsa47cynnxqjipshxilv5uyoqsoopub3suycfqphhcdqm.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_19], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_19 => clone_1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_8,), kwargs = {memory_format: torch.contiguous_format})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_7 = async_compile.triton('triton_poi_fused_clone_7', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 86528
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 26)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 26) % 26)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 676
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 676) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (29 + x0 + 28*x1 + 784*x4), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rs/crsx2xujmedyauvwkmyrlc7yogdn73iokr7b4hcneazm2rz75lcx.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_21, input_22], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_21 => add_21, mul_28, mul_29, sub_9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_22 => relu_7
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_8, %unsqueeze_73), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_75), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_28, %unsqueeze_77), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_29, %unsqueeze_79), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_7 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_21,), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_8', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 43264
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 676) % 16)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/py/cpyoapkqqelaql7bp56ztr7hphzdeah6rvif5fsku5sbynrn4apb.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_27, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_27 => add_25, mul_34, mul_35, sub_11
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => add_26
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_10, %unsqueeze_89), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %unsqueeze_91), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_34, %unsqueeze_93), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_25 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_35, %unsqueeze_95), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_26 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_25, %clone_1), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_9 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_9', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_9(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 86528
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 676) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/s7/cs7unsxbfjui723cq7uwdl55uy2qbwe25srfn3fkdz6lbjaalbnp.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_28], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_28 => clone_2
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_12,), kwargs = {memory_format: torch.contiguous_format})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_10 = async_compile.triton('triton_poi_fused_clone_10', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 73728
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 24)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 24) % 24)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 576
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 576) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (27 + x0 + 26*x1 + 676*x4), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ij/cijm2klo6exiriwssmm73dyzrxnqtwpatik6linvhclaznokawf4.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_30, input_31], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_30 => add_30, mul_40, mul_41, sub_13
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_31 => relu_10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_11, %unsqueeze_105), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_40 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %unsqueeze_107), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_41 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_40, %unsqueeze_109), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_30 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_41, %unsqueeze_111), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_10 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_30,), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_11 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_11', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_11(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 36864
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 576) % 16)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nk/cnkukhhwju522o2fs2sniy5mbtvpljqn5dtyf6kyezaioyycw62r.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_36, out_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_36 => add_34, mul_46, mul_47, sub_15
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_5 => add_35
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_13, %unsqueeze_121), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_15, %unsqueeze_123), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_47 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_46, %unsqueeze_125), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_34 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_47, %unsqueeze_127), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_35 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_34, %clone_2), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_12', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 73728
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 576) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lx/clxwlwrchv2oq4b5wgobshkk7fa6zlnwbm3zl635jm533vcp4t6b.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_37], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_37 => clone_3
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_16,), kwargs = {memory_format: torch.contiguous_format})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_13 = async_compile.triton('triton_poi_fused_clone_13', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_13(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 61952
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 22)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 22) % 22)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 484
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 484) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (25 + x0 + 24*x1 + 576*x4), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i5/ci5odj36mqyipflnqdlxqaovccmfkivhmwv6rzxkkarptdv7wrco.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_39, input_40], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_39 => add_39, mul_52, mul_53, sub_17
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_40 => relu_13
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_17 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_14, %unsqueeze_137), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_52 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_17, %unsqueeze_139), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_53 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_52, %unsqueeze_141), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_39 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_53, %unsqueeze_143), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_13 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_39,), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_14 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_14', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_14(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 61952
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 484) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/v2/cv27gcuq63b4a4qo5zfrzm24nz3p3yb6ituf7m6h4ckexwvlxnsa.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_45, out_6, batch_norm_20], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_20 => mul_61, mul_62, sub_20
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_45 => add_43, mul_58, mul_59, sub_19
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_6 => add_44
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_19 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_16, %unsqueeze_153), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_58 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_19, %unsqueeze_155), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_59 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_58, %unsqueeze_157), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_43 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_59, %unsqueeze_159), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_43, %convolution_17), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_20 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_44, %unsqueeze_161), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_61 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_20, %unsqueeze_163), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_62 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_61, %unsqueeze_165), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_15 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_15', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_15(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 123904
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 484) % 64)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr8 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 - tmp18
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.sqrt(tmp21)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp7 / tmp22
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 * tmp24
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp27, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sc/csctue4zrzcifd5bgyl27jlmahftfsd24blztj46z3w6yydlf3m7.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_47], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_47 => clone_4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=2] = call_function[target=torch.ops.aten.clone.default](args = (%slice_20,), kwargs = {memory_format: torch.contiguous_format})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_16 = async_compile.triton('triton_poi_fused_clone_16', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_16', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_16(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 102400
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 20)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 20) % 20)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 400
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 400) % 64)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (23 + x0 + 22*x1 + 484*x4), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp4, None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wc/cwcp6x7mkrgkf6cfgz3e5iwlayrtvo3pakugsgqjra2n4ki3i236.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_48], Original ATen: [aten.max_pool2d_with_indices]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_48 => getitem_2, getitem_3
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_2 : [num_users=3] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 0), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_3 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 1), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_17 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_17', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_17', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_17(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 25600
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 10)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 40*x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 40*x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (20 + 2*x0 + 40*x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (21 + 2*x0 + 40*x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 > tmp0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 0, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp7, tmp8, tmp9)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 > tmp2
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 2, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp11, tmp12, tmp10)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 > tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 3, tl.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp15, tmp13)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp16, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2r/c2rbojfdy4kru3kuacr7mr4p6vwhqs7kbsj5urphrzvaak2n27dp.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_50, input_51], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_50 => add_48, mul_64, mul_65, sub_21
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_51 => relu_16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_18, %unsqueeze_169), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_64 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_21, %unsqueeze_171), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_65 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_64, %unsqueeze_173), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_48 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_65, %unsqueeze_175), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_16 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_48,), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_18 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_18', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_18(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 12800
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 100) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rh/crh37fwxf6zivatg7hzsr3wzy3qenaoapxt6iundarojabh3llnk.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_56, out_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_56 => add_52, mul_70, mul_71, sub_23
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_7 => add_53
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_23 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_20, %unsqueeze_185), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_70 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_23, %unsqueeze_187), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_71 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_70, %unsqueeze_189), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_52 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_71, %unsqueeze_191), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_53 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_52, %getitem_2), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_19 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_19', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_19', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_19(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 25600
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 100) % 64)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yx/cyxiyn4a4xjqtfsonevwpktbs3qx2obmkr5552e7blceiq57q7s6.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_57], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_57 => clone_5
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_5 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_24,), kwargs = {memory_format: torch.contiguous_format})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_20 = async_compile.triton('triton_poi_fused_clone_20', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_20', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_20(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 64
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 64) % 64)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (11 + x0 + 10*x1 + 100*x4), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fg/cfgztin5prugfsg7txo2ydjnvuno77i5exypf4ne5t2v465n65mm.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_59, input_60], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_59 => add_57, mul_76, mul_77, sub_25
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_60 => relu_19
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_25 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_21, %unsqueeze_201), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_76 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_25, %unsqueeze_203), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_77 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_76, %unsqueeze_205), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_57 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_77, %unsqueeze_207), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_19 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_57,), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_21 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_21', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_21', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_21(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mh/cmhf2hvtcsgs3zatk5dbqzqg3einhdaeyb6ssgkb3hkibecxj7or.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_65, out_8], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_65 => add_61, mul_82, mul_83, sub_27
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_8 => add_62
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_27 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_23, %unsqueeze_217), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_82 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_27, %unsqueeze_219), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_83 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_82, %unsqueeze_221), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_61 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_83, %unsqueeze_223), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_62 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_61, %clone_5), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_22 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_22', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_22', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_22(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 64)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7t/c7tg3lggpfsteem7kyqg7q7pwsy6gn7nrew5jzrgfu6g4c7s74xh.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_66], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_66 => clone_6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_6 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_28,), kwargs = {memory_format: torch.contiguous_format})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_23 = async_compile.triton('triton_poi_fused_clone_23', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_23', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_23(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9216
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 36
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 36) % 64)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (9 + x0 + 8*x1 + 64*x4), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kk/ckkedr6cwmkynyc4u6rjywhxdsorvdl3mj2tpf7reherrcg2vkkh.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_68, input_69], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_68 => add_66, mul_88, mul_89, sub_29
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_69 => relu_22
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_29 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_24, %unsqueeze_233), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_88 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_29, %unsqueeze_235), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_89 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_88, %unsqueeze_237), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_66 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_89, %unsqueeze_239), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_22 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_66,), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_24 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_24', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_24', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_24(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4608
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 36) % 32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bb/cbbywvqp5t7xhibgx64i634nrx45rrslwsynritdbd7wn6w5r5bt.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_74, out_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.native_batch_norm_backward]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_74 => add_70, mul_94, mul_95, sub_31
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_9 => add_71
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_31 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_26, %unsqueeze_249), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_94 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_31, %unsqueeze_251), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_95 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_94, %unsqueeze_253), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_70 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_95, %unsqueeze_255), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_71 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_70, %clone_6), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_33 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_71, %unsqueeze_266), kwargs = {})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9216
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 36) % 64)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 - tmp18
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp19, xmask)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z4/cz4ya23eukb2tmntn75tjtniu7ngx6w6tunazffyeior2mytb3o3.py
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_75], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_75 => clone_7
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_7 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_32,), kwargs = {memory_format: torch.contiguous_format})
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_26 = async_compile.triton('triton_poi_fused_clone_26', '''
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_26', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_26(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 64)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (7 + x0 + 6*x1 + 36*x4), None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp15, None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161 = args
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 3, 7, 7), (147, 49, 7, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 3, 128, 128), (49152, 16384, 128, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, 64, 1, 1), (64, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (16, 4, 3, 3), (36, 9, 3, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (32, 16, 1, 1), (16, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (32, 64, 1, 1), (64, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (16, 32, 1, 1), (32, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (16, 4, 3, 3), (36, 9, 3, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (32, 16, 1, 1), (16, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_47, (16, 32, 1, 1), (32, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_48, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_49, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_50, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_51, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_52, (16, 4, 3, 3), (36, 9, 3, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_53, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_54, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_55, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_56, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_57, (32, 16, 1, 1), (16, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_58, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_59, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_60, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_61, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_62, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_63, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_64, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_65, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_66, (16, 32, 1, 1), (32, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_67, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_68, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_69, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_70, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_71, (16, 4, 3, 3), (36, 9, 3, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_72, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_73, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_74, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_75, (16, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_76, (32, 16, 1, 1), (16, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_77, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_78, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_79, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_80, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_81, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_82, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_83, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_84, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_85, (32, 32, 1, 1), (32, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_86, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_87, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_88, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_89, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_90, (32, 8, 3, 3), (72, 9, 3, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_91, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_92, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_93, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_94, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_95, (64, 32, 1, 1), (32, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_96, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_97, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_98, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_99, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_100, (64, 32, 1, 1), (32, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_101, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_102, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_103, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_104, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_105, (32, 64, 1, 1), (64, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_106, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_107, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_108, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_109, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_110, (32, 8, 3, 3), (72, 9, 3, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_111, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_112, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_113, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_114, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_115, (64, 32, 1, 1), (32, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_116, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_117, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_118, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_119, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_120, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_121, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_122, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_123, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_124, (32, 64, 1, 1), (64, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_125, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_126, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_127, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_128, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_129, (32, 8, 3, 3), (72, 9, 3, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_130, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_131, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_132, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_133, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_134, (64, 32, 1, 1), (32, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_135, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_136, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_137, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_138, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_139, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_140, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_141, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_142, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_143, (32, 64, 1, 1), (64, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_144, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_145, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_146, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_147, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_148, (32, 8, 3, 3), (72, 9, 3, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_149, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_150, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_151, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_152, (32, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_153, (64, 32, 1, 1), (32, 1, 1, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_154, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_155, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_156, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_157, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_158, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_159, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_160, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_161, (64, ), (1, ))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 64, 61, 61), (238144, 3721, 61, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 64, 61, 61), (239616, 3744, 61, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d, batch_norm, out], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0.run(buf1, primals_2, primals_4, primals_5, primals_6, primals_7, buf2, 952576, grid=grid(952576), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 64, 30, 30), (57600, 900, 30, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 64, 30, 30), (57600, 900, 30, 1), torch.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.max_pool2d_with_indices]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_1.run(buf2, buf3, buf4, 230400, grid=grid(230400), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf3, primals_8, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 16, 30, 30), (14400, 900, 30, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 16, 30, 30), (14400, 900, 30, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_2.run(buf5, primals_9, primals_10, primals_11, primals_12, buf6, 57600, grid=grid(57600), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf6, primals_13, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 16, 30, 30), (14400, 900, 30, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 16, 30, 30), (14400, 900, 30, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_2.run(buf7, primals_14, primals_15, primals_16, primals_17, buf8, 57600, grid=grid(57600), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_18, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 32, 30, 30), (28800, 900, 30, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf3, primals_23, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 32, 30, 30), (28800, 900, 30, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 32, 30, 30), (28800, 900, 30, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, out_2, batch_norm_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_3.run(buf9, primals_19, primals_20, primals_21, primals_22, buf10, primals_24, primals_25, primals_26, buf11, 115200, grid=grid(115200), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 32, 28, 28), (25088, 784, 28, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf11, primals_27, buf12, 100352, grid=grid(100352), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, primals_28, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 16, 28, 28), (12544, 784, 28, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 16, 28, 28), (12544, 784, 28, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12, input_13], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_5.run(buf13, primals_29, primals_30, primals_31, primals_32, buf14, 50176, grid=grid(50176), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_32
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf14, primals_33, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 16, 28, 28), (12544, 784, 28, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 16, 28, 28), (12544, 784, 28, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15, input_16], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_5.run(buf15, primals_34, primals_35, primals_36, primals_37, buf16, 50176, grid=grid(50176), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_17], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, primals_38, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 32, 28, 28), (25088, 784, 28, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 32, 28, 28), (25088, 784, 28, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18, out_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_6.run(buf17, primals_39, primals_40, primals_41, primals_42, buf12, buf18, 100352, grid=grid(100352), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_42
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 32, 26, 26), (21632, 676, 26, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_19], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(buf18, primals_43, primals_44, primals_45, primals_46, buf19, 86528, grid=grid(86528), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_20], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_47, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 16, 26, 26), (10816, 676, 26, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 16, 26, 26), (10816, 676, 26, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_21, input_22], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_8.run(buf20, primals_48, primals_49, primals_50, primals_51, buf21, 43264, grid=grid(43264), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_51
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_23], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, primals_52, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 16, 26, 26), (10816, 676, 26, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 16, 26, 26), (10816, 676, 26, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_24, input_25], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_8.run(buf22, primals_53, primals_54, primals_55, primals_56, buf23, 43264, grid=grid(43264), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_56
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_26], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = extern_kernels.convolution(buf23, primals_57, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf24, (4, 32, 26, 26), (21632, 676, 26, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 32, 26, 26), (21632, 676, 26, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_27, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_9.run(buf24, primals_58, primals_59, primals_60, primals_61, buf19, buf25, 86528, grid=grid(86528), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_61
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 32, 24, 24), (18432, 576, 24, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_28], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_10.run(buf25, primals_62, primals_63, primals_64, primals_65, buf26, 73728, grid=grid(73728), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_29], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = extern_kernels.convolution(buf26, primals_66, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf27, (4, 16, 24, 24), (9216, 576, 24, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 16, 24, 24), (9216, 576, 24, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_30, input_31], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_11.run(buf27, primals_67, primals_68, primals_69, primals_70, buf28, 36864, grid=grid(36864), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_70
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = extern_kernels.convolution(buf28, primals_71, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf29, (4, 16, 24, 24), (9216, 576, 24, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 16, 24, 24), (9216, 576, 24, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_33, input_34], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_11.run(buf29, primals_72, primals_73, primals_74, primals_75, buf30, 36864, grid=grid(36864), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_75
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_35], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = extern_kernels.convolution(buf30, primals_76, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf31, (4, 32, 24, 24), (18432, 576, 24, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((4, 32, 24, 24), (18432, 576, 24, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_36, out_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_12.run(buf31, primals_77, primals_78, primals_79, primals_80, buf26, buf32, 73728, grid=grid(73728), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_80
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((4, 32, 22, 22), (15488, 484, 22, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_37], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_13.run(buf32, primals_81, primals_82, primals_83, primals_84, buf33, 61952, grid=grid(61952), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_38], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = extern_kernels.convolution(buf33, primals_85, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf34, (4, 32, 22, 22), (15488, 484, 22, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = empty_strided_cuda((4, 32, 22, 22), (15488, 484, 22, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_39, input_40], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_14.run(buf34, primals_86, primals_87, primals_88, primals_89, buf35, 61952, grid=grid(61952), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_89
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_41], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf35, primals_90, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 32, 22, 22), (15488, 484, 22, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = empty_strided_cuda((4, 32, 22, 22), (15488, 484, 22, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_42, input_43], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_14.run(buf36, primals_91, primals_92, primals_93, primals_94, buf37, 61952, grid=grid(61952), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_94
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_44], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = extern_kernels.convolution(buf37, primals_95, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf38, (4, 64, 22, 22), (30976, 484, 22, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_46], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = extern_kernels.convolution(buf33, primals_100, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf39, (4, 64, 22, 22), (30976, 484, 22, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = empty_strided_cuda((4, 64, 22, 22), (30976, 484, 22, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_45, out_6, batch_norm_20], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_15.run(buf38, primals_96, primals_97, primals_98, primals_99, buf39, primals_101, primals_102, primals_103, buf40, 123904, grid=grid(123904), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = empty_strided_cuda((4, 64, 20, 20), (25600, 400, 20, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_47], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_16.run(buf40, primals_104, buf41, 102400, grid=grid(102400), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf40
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = empty_strided_cuda((4, 64, 10, 10), (6400, 100, 10, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = empty_strided_cuda((4, 64, 10, 10), (6400, 100, 10, 1), torch.int8)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_48], Original ATen: [aten.max_pool2d_with_indices]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_17.run(buf41, buf42, buf43, 25600, grid=grid(25600), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_49], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = extern_kernels.convolution(buf42, primals_105, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf44, (4, 32, 10, 10), (3200, 100, 10, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = empty_strided_cuda((4, 32, 10, 10), (3200, 100, 10, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_50, input_51], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_18.run(buf44, primals_106, primals_107, primals_108, primals_109, buf45, 12800, grid=grid(12800), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_109
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_52], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = extern_kernels.convolution(buf45, primals_110, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf46, (4, 32, 10, 10), (3200, 100, 10, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = empty_strided_cuda((4, 32, 10, 10), (3200, 100, 10, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_53, input_54], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_18.run(buf46, primals_111, primals_112, primals_113, primals_114, buf47, 12800, grid=grid(12800), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_114
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_55], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = extern_kernels.convolution(buf47, primals_115, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf48, (4, 64, 10, 10), (6400, 100, 10, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = empty_strided_cuda((4, 64, 10, 10), (6400, 100, 10, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_56, out_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_19.run(buf48, primals_116, primals_117, primals_118, primals_119, buf42, buf49, 25600, grid=grid(25600), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_119
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = empty_strided_cuda((4, 64, 8, 8), (4096, 64, 8, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_57], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_20.run(buf49, primals_120, primals_121, primals_122, primals_123, buf50, 16384, grid=grid(16384), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_58], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = extern_kernels.convolution(buf50, primals_124, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf51, (4, 32, 8, 8), (2048, 64, 8, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = empty_strided_cuda((4, 32, 8, 8), (2048, 64, 8, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_59, input_60], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_21.run(buf51, primals_125, primals_126, primals_127, primals_128, buf52, 8192, grid=grid(8192), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_128
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_61], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = extern_kernels.convolution(buf52, primals_129, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf53, (4, 32, 8, 8), (2048, 64, 8, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = empty_strided_cuda((4, 32, 8, 8), (2048, 64, 8, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_62, input_63], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_21.run(buf53, primals_130, primals_131, primals_132, primals_133, buf54, 8192, grid=grid(8192), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_133
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_64], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = extern_kernels.convolution(buf54, primals_134, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf55, (4, 64, 8, 8), (4096, 64, 8, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = empty_strided_cuda((4, 64, 8, 8), (4096, 64, 8, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_65, out_8], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_22.run(buf55, primals_135, primals_136, primals_137, primals_138, buf50, buf56, 16384, grid=grid(16384), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_138
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = empty_strided_cuda((4, 64, 6, 6), (2304, 36, 6, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_66], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_23.run(buf56, primals_139, primals_140, primals_141, primals_142, buf57, 9216, grid=grid(9216), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_67], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = extern_kernels.convolution(buf57, primals_143, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf58, (4, 32, 6, 6), (1152, 36, 6, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_68, input_69], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_24.run(buf58, primals_144, primals_145, primals_146, primals_147, buf59, 4608, grid=grid(4608), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_147
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_70], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = extern_kernels.convolution(buf59, primals_148, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf60, (4, 32, 6, 6), (1152, 36, 6, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf61 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_71, input_72], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_24.run(buf60, primals_149, primals_150, primals_151, primals_152, buf61, 4608, grid=grid(4608), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_152
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_73], Original ATen: [aten.convolution]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf62 = extern_kernels.convolution(buf61, primals_153, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf62, (4, 64, 6, 6), (2304, 36, 6, 1))
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf63 = empty_strided_cuda((4, 64, 6, 6), (2304, 36, 6, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf65 = empty_strided_cuda((4, 64, 6, 6), (2304, 36, 6, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_74, out_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.native_batch_norm_backward]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25.run(buf62, primals_154, primals_155, primals_156, primals_157, buf57, primals_158, buf63, buf65, 9216, grid=grid(9216), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_157
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf64 = empty_strided_cuda((4, 64, 4, 4), (1024, 16, 4, 1), torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_75], Original ATen: [aten.clone]
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_26.run(buf63, primals_158, primals_159, primals_160, primals_161, buf64, 4096, grid=grid(4096), stream=stream0)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf63
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_158
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_161
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf64, primals_1, primals_3, primals_4, primals_5, primals_6, primals_8, primals_9, primals_10, primals_11, primals_13, primals_14, primals_15, primals_16, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_33, primals_34, primals_35, primals_36, primals_38, primals_39, primals_40, primals_41, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_52, primals_53, primals_54, primals_55, primals_57, primals_58, primals_59, primals_60, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_71, primals_72, primals_73, primals_74, primals_76, primals_77, primals_78, primals_79, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_90, primals_91, primals_92, primals_93, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_110, primals_111, primals_112, primals_113, primals_115, primals_116, primals_117, primals_118, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_129, primals_130, primals_131, primals_132, primals_134, primals_135, primals_136, primals_137, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_148, primals_149, primals_150, primals_151, primals_153, primals_154, primals_155, primals_156, primals_159, primals_160, buf1, buf2, buf3, buf4, buf5, buf6, buf7, buf8, buf9, buf10, buf12, buf13, buf14, buf15, buf16, buf17, buf18, buf19, buf20, buf21, buf22, buf23, buf24, buf25, buf26, buf27, buf28, buf29, buf30, buf31, buf32, buf33, buf34, buf35, buf36, buf37, buf38, buf39, buf41, buf42, buf43, buf44, buf45, buf46, buf47, buf48, buf49, buf50, buf51, buf52, buf53, buf54, buf55, buf56, buf57, buf58, buf59, buf60, buf61, buf62, buf65, )
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 3, 7, 7), (147, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 3, 128, 128), (49152, 16384, 128, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((16, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((16, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((16, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_47 = rand_strided((16, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_48 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_49 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_50 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_51 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_52 = rand_strided((16, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_53 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_54 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_55 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_56 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_57 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_58 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_59 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_60 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_61 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_62 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_63 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_64 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_65 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_66 = rand_strided((16, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_67 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_68 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_69 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_70 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_71 = rand_strided((16, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_72 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_73 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_74 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_75 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_76 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_77 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_78 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_79 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_80 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_81 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_82 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_83 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_84 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_85 = rand_strided((32, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_86 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_87 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_88 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_89 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_90 = rand_strided((32, 8, 3, 3), (72, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_91 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_92 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_93 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_94 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_95 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_96 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_97 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_98 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_99 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_100 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_101 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_102 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_103 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_104 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_105 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_106 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_107 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_108 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_109 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_110 = rand_strided((32, 8, 3, 3), (72, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_111 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_112 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_113 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_114 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_115 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_116 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_117 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_118 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_119 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_120 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_121 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_122 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_123 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_124 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_125 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_126 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_127 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_128 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_129 = rand_strided((32, 8, 3, 3), (72, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_130 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_131 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_132 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_133 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_134 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_135 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_136 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_137 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_138 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_139 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_140 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_141 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_142 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_143 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_144 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_145 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_146 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_147 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_148 = rand_strided((32, 8, 3, 3), (72, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_149 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_150 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_151 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_152 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_153 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_154 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_155 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_156 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_157 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_158 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_159 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_160 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_161 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161])
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:05:23.258000 455415 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:05:23.298000 455415 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5a/c5auj7d72lhxago54bgssegejjryhiczt6mwnroogxhirquit4pg.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['30_forward']
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4t/c4tu2fejv23em7cilbxpbyytoyormxcahrvakbtwvcrlgmp4v3sf.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d, batch_norm, out], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_1, mul_1, mul_2, sub
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => relu
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 952576
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 3721) % 64)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3721)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 3721
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 3744*x4), tmp19, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fp/cfp57wrlhx4wombxoexs56otb26uedkjzzgntvcviw32rb5nck5a.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.max_pool2d_with_indices]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => getitem, getitem_1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem : [num_users=3] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_1 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_1 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_1', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_1(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 230400
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 30)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 30) % 30)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 900
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (61 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (62 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (63 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (122 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (123 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (124 + 2*x0 + 122*x1 + 3744*x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp10)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp12)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp1 > tmp0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 1, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full([1], 0, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp18, tmp19)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp3 > tmp2
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 2, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp21, tmp22, tmp20)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp5 > tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 3, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp25, tmp23)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp7 > tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1], 4, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp27, tmp28, tmp26)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp9 > tmp8
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 5, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp31, tmp29)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp11 > tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1], 6, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp33, tmp34, tmp32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp13 > tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full([1], 7, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp36, tmp37, tmp35)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp15 > tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1], 8, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.where(tmp39, tmp40, tmp38)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp16, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp41, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5r/c5rfeteklyp34txqqzm2moghdnhaavtjthbj6b77wxpecvzl5coj.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_3, mul_4, mul_5, sub_1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => relu_1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_2', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 57600
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 900) % 16)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/k4/ck426dhibutjvipslsudqp7rr7pxnrxo3x3hn5ugqucaogmkun5d.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, out_2, batch_norm_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_4 => mul_13, mul_14, sub_4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_7, mul_10, mul_11, sub_3
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_8
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_29), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_31), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_7, %convolution_4), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_8, %unsqueeze_33), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_37), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_3', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 115200
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 900) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr8 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 - tmp18
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.sqrt(tmp21)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp7 / tmp22
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 * tmp24
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp27, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bq/cbqd5dyh5qu54lzw5ss3uvi7hdgjdji4lxuasfchpkwiovqpwcr7.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => clone
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_4,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 100352
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 28)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 28) % 28)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 784
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 784) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (31 + x0 + 30*x1 + 900*x4), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp4, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cm/ccmivf2f7tbgrt67dqjms2vk7rewwdm7d4deablyfrx2hr4xl4bi.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_12, input_13], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => add_12, mul_16, mul_17, sub_5
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_13 => relu_4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_43), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_16, %unsqueeze_45), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_17, %unsqueeze_47), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_12,), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_5', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 50176
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 784) % 16)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/al/cal3iux4bw5jbmqhlmt4ksyqfclytgtqocsy6x5ygyz2sbweizhw.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_18, out_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => add_16, mul_22, mul_23, sub_7
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => add_17
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_7, %unsqueeze_57), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_59), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_22, %unsqueeze_61), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_23, %unsqueeze_63), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_16, %clone), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_6 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_6', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 100352
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 784) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zf/czfbb5gvsa47cynnxqjipshxilv5uyoqsoopub3suycfqphhcdqm.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_19], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_19 => clone_1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_8,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_7 = async_compile.triton('triton_poi_fused_clone_7', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 86528
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 26)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 26) % 26)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 676
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 676) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (29 + x0 + 28*x1 + 784*x4), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rs/crsx2xujmedyauvwkmyrlc7yogdn73iokr7b4hcneazm2rz75lcx.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_21, input_22], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_21 => add_21, mul_28, mul_29, sub_9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_22 => relu_7
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_8, %unsqueeze_73), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_75), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_28, %unsqueeze_77), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_29, %unsqueeze_79), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_7 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_21,), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_8', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 43264
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 676) % 16)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/py/cpyoapkqqelaql7bp56ztr7hphzdeah6rvif5fsku5sbynrn4apb.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_27, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_27 => add_25, mul_34, mul_35, sub_11
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => add_26
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_10, %unsqueeze_89), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %unsqueeze_91), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_34, %unsqueeze_93), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_25 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_35, %unsqueeze_95), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_26 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_25, %clone_1), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_9 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_9', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_9(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 86528
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 676) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/s7/cs7unsxbfjui723cq7uwdl55uy2qbwe25srfn3fkdz6lbjaalbnp.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_28], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_28 => clone_2
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_12,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_10 = async_compile.triton('triton_poi_fused_clone_10', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 73728
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 24)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 24) % 24)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 576
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 576) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (27 + x0 + 26*x1 + 676*x4), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ij/cijm2klo6exiriwssmm73dyzrxnqtwpatik6linvhclaznokawf4.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_30, input_31], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_30 => add_30, mul_40, mul_41, sub_13
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_31 => relu_10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_11, %unsqueeze_105), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_40 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %unsqueeze_107), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_41 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_40, %unsqueeze_109), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_30 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_41, %unsqueeze_111), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_10 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_30,), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_11 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_11', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_11(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 36864
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 576) % 16)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nk/cnkukhhwju522o2fs2sniy5mbtvpljqn5dtyf6kyezaioyycw62r.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_36, out_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_36 => add_34, mul_46, mul_47, sub_15
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_5 => add_35
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_13, %unsqueeze_121), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_15, %unsqueeze_123), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_47 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_46, %unsqueeze_125), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_34 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_47, %unsqueeze_127), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_35 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_34, %clone_2), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_12', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 73728
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 576) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lx/clxwlwrchv2oq4b5wgobshkk7fa6zlnwbm3zl635jm533vcp4t6b.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_37], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_37 => clone_3
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_16,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_13 = async_compile.triton('triton_poi_fused_clone_13', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_13(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 61952
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 22)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 22) % 22)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 484
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 484) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (25 + x0 + 24*x1 + 576*x4), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i5/ci5odj36mqyipflnqdlxqaovccmfkivhmwv6rzxkkarptdv7wrco.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_39, input_40], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_39 => add_39, mul_52, mul_53, sub_17
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_40 => relu_13
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_17 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_14, %unsqueeze_137), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_52 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_17, %unsqueeze_139), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_53 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_52, %unsqueeze_141), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_39 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_53, %unsqueeze_143), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_13 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_39,), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_14 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_14', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_14(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 61952
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 484) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/v2/cv27gcuq63b4a4qo5zfrzm24nz3p3yb6ituf7m6h4ckexwvlxnsa.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_45, out_6, batch_norm_20], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_20 => mul_61, mul_62, sub_20
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_45 => add_43, mul_58, mul_59, sub_19
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_6 => add_44
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_19 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_16, %unsqueeze_153), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_58 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_19, %unsqueeze_155), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_59 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_58, %unsqueeze_157), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_43 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_59, %unsqueeze_159), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_43, %convolution_17), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_20 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_44, %unsqueeze_161), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_61 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_20, %unsqueeze_163), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_62 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_61, %unsqueeze_165), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_15 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_15', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_15(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 123904
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 484) % 64)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr8 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 - tmp18
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.sqrt(tmp21)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp7 / tmp22
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 * tmp24
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp27, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sc/csctue4zrzcifd5bgyl27jlmahftfsd24blztj46z3w6yydlf3m7.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_47], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_47 => clone_4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=2] = call_function[target=torch.ops.aten.clone.default](args = (%slice_20,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_16 = async_compile.triton('triton_poi_fused_clone_16', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_16', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_16(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 102400
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 20)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 20) % 20)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 400
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 400) % 64)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (23 + x0 + 22*x1 + 484*x4), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp4, None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wc/cwcp6x7mkrgkf6cfgz3e5iwlayrtvo3pakugsgqjra2n4ki3i236.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_48], Original ATen: [aten.max_pool2d_with_indices]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_48 => getitem_2, getitem_3
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_2 : [num_users=3] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 0), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_3 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 1), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_17 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_17', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_17', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_17(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 25600
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 10)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 40*x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 40*x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (20 + 2*x0 + 40*x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (21 + 2*x0 + 40*x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 > tmp0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 0, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp7, tmp8, tmp9)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 > tmp2
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 2, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp11, tmp12, tmp10)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 > tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 3, tl.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp15, tmp13)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp16, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2r/c2rbojfdy4kru3kuacr7mr4p6vwhqs7kbsj5urphrzvaak2n27dp.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_50, input_51], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_50 => add_48, mul_64, mul_65, sub_21
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_51 => relu_16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_18, %unsqueeze_169), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_64 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_21, %unsqueeze_171), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_65 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_64, %unsqueeze_173), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_48 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_65, %unsqueeze_175), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_16 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_48,), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_18 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_18', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_18(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 12800
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 100) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rh/crh37fwxf6zivatg7hzsr3wzy3qenaoapxt6iundarojabh3llnk.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_56, out_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_56 => add_52, mul_70, mul_71, sub_23
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_7 => add_53
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_23 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_20, %unsqueeze_185), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_70 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_23, %unsqueeze_187), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_71 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_70, %unsqueeze_189), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_52 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_71, %unsqueeze_191), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_53 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_52, %getitem_2), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_19 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_19', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_19', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_19(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 25600
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 100) % 64)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yx/cyxiyn4a4xjqtfsonevwpktbs3qx2obmkr5552e7blceiq57q7s6.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_57], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_57 => clone_5
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_5 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_24,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_20 = async_compile.triton('triton_poi_fused_clone_20', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_20', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_20(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 64
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 64) % 64)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (11 + x0 + 10*x1 + 100*x4), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fg/cfgztin5prugfsg7txo2ydjnvuno77i5exypf4ne5t2v465n65mm.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_59, input_60], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_59 => add_57, mul_76, mul_77, sub_25
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_60 => relu_19
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_25 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_21, %unsqueeze_201), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_76 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_25, %unsqueeze_203), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_77 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_76, %unsqueeze_205), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_57 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_77, %unsqueeze_207), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_19 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_57,), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_21 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_21', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_21', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_21(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mh/cmhf2hvtcsgs3zatk5dbqzqg3einhdaeyb6ssgkb3hkibecxj7or.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_65, out_8], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_65 => add_61, mul_82, mul_83, sub_27
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_8 => add_62
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_27 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_23, %unsqueeze_217), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_82 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_27, %unsqueeze_219), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_83 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_82, %unsqueeze_221), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_61 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_83, %unsqueeze_223), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_62 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_61, %clone_5), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_22 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_22', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_22', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_22(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 64)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7t/c7tg3lggpfsteem7kyqg7q7pwsy6gn7nrew5jzrgfu6g4c7s74xh.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_66], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_66 => clone_6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_6 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%slice_28,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_23 = async_compile.triton('triton_poi_fused_clone_23', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_23', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_23(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9216
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 36
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 36) % 64)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (9 + x0 + 8*x1 + 64*x4), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kk/ckkedr6cwmkynyc4u6rjywhxdsorvdl3mj2tpf7reherrcg2vkkh.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_68, input_69], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_68 => add_66, mul_88, mul_89, sub_29
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_69 => relu_22
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_29 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_24, %unsqueeze_233), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_88 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_29, %unsqueeze_235), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_89 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_88, %unsqueeze_237), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_66 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_89, %unsqueeze_239), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_22 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_66,), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_24 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_24', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_24', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_24(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4608
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 36) % 32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bb/cbbywvqp5t7xhibgx64i634nrx45rrslwsynritdbd7wn6w5r5bt.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_74, out_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.native_batch_norm_backward]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_74 => add_70, mul_94, mul_95, sub_31
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_9 => add_71
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_31 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_26, %unsqueeze_249), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_94 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_31, %unsqueeze_251), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_95 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_94, %unsqueeze_253), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_70 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_95, %unsqueeze_255), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_71 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_70, %clone_6), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_33 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_71, %unsqueeze_266), kwargs = {})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9216
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 36) % 64)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x3), xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 - tmp18
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp19, xmask)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z4/cz4ya23eukb2tmntn75tjtniu7ngx6w6tunazffyeior2mytb3o3.py
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_75], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_75 => clone_7
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_7 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_32,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_26 = async_compile.triton('triton_poi_fused_clone_26', '''
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_26', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_26(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 64)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (7 + x0 + 6*x1 + 36*x4), None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp15, None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161 = args
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 3, 7, 7), (147, 49, 7, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 3, 128, 128), (49152, 16384, 128, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, 64, 1, 1), (64, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (16, 4, 3, 3), (36, 9, 3, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (32, 16, 1, 1), (16, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (32, 64, 1, 1), (64, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (16, 32, 1, 1), (32, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (16, 4, 3, 3), (36, 9, 3, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (32, 16, 1, 1), (16, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_47, (16, 32, 1, 1), (32, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_48, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_49, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_50, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_51, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_52, (16, 4, 3, 3), (36, 9, 3, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_53, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_54, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_55, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_56, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_57, (32, 16, 1, 1), (16, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_58, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_59, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_60, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_61, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_62, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_63, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_64, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_65, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_66, (16, 32, 1, 1), (32, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_67, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_68, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_69, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_70, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_71, (16, 4, 3, 3), (36, 9, 3, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_72, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_73, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_74, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_75, (16, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_76, (32, 16, 1, 1), (16, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_77, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_78, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_79, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_80, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_81, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_82, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_83, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_84, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_85, (32, 32, 1, 1), (32, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_86, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_87, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_88, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_89, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_90, (32, 8, 3, 3), (72, 9, 3, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_91, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_92, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_93, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_94, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_95, (64, 32, 1, 1), (32, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_96, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_97, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_98, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_99, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_100, (64, 32, 1, 1), (32, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_101, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_102, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_103, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_104, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_105, (32, 64, 1, 1), (64, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_106, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_107, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_108, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_109, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_110, (32, 8, 3, 3), (72, 9, 3, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_111, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_112, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_113, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_114, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_115, (64, 32, 1, 1), (32, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_116, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_117, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_118, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_119, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_120, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_121, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_122, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_123, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_124, (32, 64, 1, 1), (64, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_125, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_126, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_127, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_128, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_129, (32, 8, 3, 3), (72, 9, 3, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_130, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_131, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_132, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_133, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_134, (64, 32, 1, 1), (32, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_135, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_136, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_137, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_138, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_139, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_140, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_141, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_142, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_143, (32, 64, 1, 1), (64, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_144, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_145, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_146, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_147, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_148, (32, 8, 3, 3), (72, 9, 3, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_149, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_150, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_151, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_152, (32, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_153, (64, 32, 1, 1), (32, 1, 1, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_154, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_155, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_156, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_157, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_158, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_159, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_160, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_161, (64, ), (1, ))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 64, 61, 61), (238144, 3721, 61, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 64, 61, 61), (239616, 3744, 61, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d, batch_norm, out], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0.run(buf1, primals_2, primals_4, primals_5, primals_6, primals_7, buf2, 952576, grid=grid(952576), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 64, 30, 30), (57600, 900, 30, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 64, 30, 30), (57600, 900, 30, 1), torch.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.max_pool2d_with_indices]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_1.run(buf2, buf3, buf4, 230400, grid=grid(230400), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf3, primals_8, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 16, 30, 30), (14400, 900, 30, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 16, 30, 30), (14400, 900, 30, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_2.run(buf5, primals_9, primals_10, primals_11, primals_12, buf6, 57600, grid=grid(57600), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf6, primals_13, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 16, 30, 30), (14400, 900, 30, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 16, 30, 30), (14400, 900, 30, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_2.run(buf7, primals_14, primals_15, primals_16, primals_17, buf8, 57600, grid=grid(57600), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_18, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 32, 30, 30), (28800, 900, 30, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf3, primals_23, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 32, 30, 30), (28800, 900, 30, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 32, 30, 30), (28800, 900, 30, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, out_2, batch_norm_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_3.run(buf9, primals_19, primals_20, primals_21, primals_22, buf10, primals_24, primals_25, primals_26, buf11, 115200, grid=grid(115200), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 32, 28, 28), (25088, 784, 28, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf11, primals_27, buf12, 100352, grid=grid(100352), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, primals_28, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 16, 28, 28), (12544, 784, 28, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 16, 28, 28), (12544, 784, 28, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12, input_13], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_5.run(buf13, primals_29, primals_30, primals_31, primals_32, buf14, 50176, grid=grid(50176), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_32
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf14, primals_33, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 16, 28, 28), (12544, 784, 28, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 16, 28, 28), (12544, 784, 28, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15, input_16], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_5.run(buf15, primals_34, primals_35, primals_36, primals_37, buf16, 50176, grid=grid(50176), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_17], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, primals_38, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 32, 28, 28), (25088, 784, 28, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 32, 28, 28), (25088, 784, 28, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18, out_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_6.run(buf17, primals_39, primals_40, primals_41, primals_42, buf12, buf18, 100352, grid=grid(100352), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_42
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 32, 26, 26), (21632, 676, 26, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_19], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(buf18, primals_43, primals_44, primals_45, primals_46, buf19, 86528, grid=grid(86528), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_20], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_47, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 16, 26, 26), (10816, 676, 26, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 16, 26, 26), (10816, 676, 26, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_21, input_22], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_8.run(buf20, primals_48, primals_49, primals_50, primals_51, buf21, 43264, grid=grid(43264), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_51
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_23], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, primals_52, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 16, 26, 26), (10816, 676, 26, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 16, 26, 26), (10816, 676, 26, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_24, input_25], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_8.run(buf22, primals_53, primals_54, primals_55, primals_56, buf23, 43264, grid=grid(43264), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_56
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_26], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = extern_kernels.convolution(buf23, primals_57, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf24, (4, 32, 26, 26), (21632, 676, 26, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 32, 26, 26), (21632, 676, 26, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_27, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_9.run(buf24, primals_58, primals_59, primals_60, primals_61, buf19, buf25, 86528, grid=grid(86528), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_61
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 32, 24, 24), (18432, 576, 24, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_28], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_10.run(buf25, primals_62, primals_63, primals_64, primals_65, buf26, 73728, grid=grid(73728), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_29], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = extern_kernels.convolution(buf26, primals_66, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf27, (4, 16, 24, 24), (9216, 576, 24, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 16, 24, 24), (9216, 576, 24, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_30, input_31], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_11.run(buf27, primals_67, primals_68, primals_69, primals_70, buf28, 36864, grid=grid(36864), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_70
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = extern_kernels.convolution(buf28, primals_71, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf29, (4, 16, 24, 24), (9216, 576, 24, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 16, 24, 24), (9216, 576, 24, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_33, input_34], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_11.run(buf29, primals_72, primals_73, primals_74, primals_75, buf30, 36864, grid=grid(36864), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_75
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_35], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = extern_kernels.convolution(buf30, primals_76, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf31, (4, 32, 24, 24), (18432, 576, 24, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((4, 32, 24, 24), (18432, 576, 24, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_36, out_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_12.run(buf31, primals_77, primals_78, primals_79, primals_80, buf26, buf32, 73728, grid=grid(73728), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_80
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((4, 32, 22, 22), (15488, 484, 22, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_37], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_13.run(buf32, primals_81, primals_82, primals_83, primals_84, buf33, 61952, grid=grid(61952), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_38], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = extern_kernels.convolution(buf33, primals_85, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf34, (4, 32, 22, 22), (15488, 484, 22, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = empty_strided_cuda((4, 32, 22, 22), (15488, 484, 22, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_39, input_40], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_14.run(buf34, primals_86, primals_87, primals_88, primals_89, buf35, 61952, grid=grid(61952), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_89
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_41], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf35, primals_90, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 32, 22, 22), (15488, 484, 22, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = empty_strided_cuda((4, 32, 22, 22), (15488, 484, 22, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_42, input_43], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_14.run(buf36, primals_91, primals_92, primals_93, primals_94, buf37, 61952, grid=grid(61952), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_94
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_44], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = extern_kernels.convolution(buf37, primals_95, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf38, (4, 64, 22, 22), (30976, 484, 22, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_46], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = extern_kernels.convolution(buf33, primals_100, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf39, (4, 64, 22, 22), (30976, 484, 22, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = empty_strided_cuda((4, 64, 22, 22), (30976, 484, 22, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_45, out_6, batch_norm_20], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_15.run(buf38, primals_96, primals_97, primals_98, primals_99, buf39, primals_101, primals_102, primals_103, buf40, 123904, grid=grid(123904), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = empty_strided_cuda((4, 64, 20, 20), (25600, 400, 20, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_47], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_16.run(buf40, primals_104, buf41, 102400, grid=grid(102400), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf40
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = empty_strided_cuda((4, 64, 10, 10), (6400, 100, 10, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = empty_strided_cuda((4, 64, 10, 10), (6400, 100, 10, 1), torch.int8)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_48], Original ATen: [aten.max_pool2d_with_indices]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_17.run(buf41, buf42, buf43, 25600, grid=grid(25600), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_49], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = extern_kernels.convolution(buf42, primals_105, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf44, (4, 32, 10, 10), (3200, 100, 10, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = empty_strided_cuda((4, 32, 10, 10), (3200, 100, 10, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_50, input_51], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_18.run(buf44, primals_106, primals_107, primals_108, primals_109, buf45, 12800, grid=grid(12800), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_109
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_52], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = extern_kernels.convolution(buf45, primals_110, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf46, (4, 32, 10, 10), (3200, 100, 10, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = empty_strided_cuda((4, 32, 10, 10), (3200, 100, 10, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_53, input_54], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_18.run(buf46, primals_111, primals_112, primals_113, primals_114, buf47, 12800, grid=grid(12800), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_114
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_55], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = extern_kernels.convolution(buf47, primals_115, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf48, (4, 64, 10, 10), (6400, 100, 10, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = empty_strided_cuda((4, 64, 10, 10), (6400, 100, 10, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_56, out_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_19.run(buf48, primals_116, primals_117, primals_118, primals_119, buf42, buf49, 25600, grid=grid(25600), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_119
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = empty_strided_cuda((4, 64, 8, 8), (4096, 64, 8, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_57], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_20.run(buf49, primals_120, primals_121, primals_122, primals_123, buf50, 16384, grid=grid(16384), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_58], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = extern_kernels.convolution(buf50, primals_124, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf51, (4, 32, 8, 8), (2048, 64, 8, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = empty_strided_cuda((4, 32, 8, 8), (2048, 64, 8, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_59, input_60], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_21.run(buf51, primals_125, primals_126, primals_127, primals_128, buf52, 8192, grid=grid(8192), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_128
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_61], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = extern_kernels.convolution(buf52, primals_129, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf53, (4, 32, 8, 8), (2048, 64, 8, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = empty_strided_cuda((4, 32, 8, 8), (2048, 64, 8, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_62, input_63], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_21.run(buf53, primals_130, primals_131, primals_132, primals_133, buf54, 8192, grid=grid(8192), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_133
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_64], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = extern_kernels.convolution(buf54, primals_134, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf55, (4, 64, 8, 8), (4096, 64, 8, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = empty_strided_cuda((4, 64, 8, 8), (4096, 64, 8, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_65, out_8], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_22.run(buf55, primals_135, primals_136, primals_137, primals_138, buf50, buf56, 16384, grid=grid(16384), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_138
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = empty_strided_cuda((4, 64, 6, 6), (2304, 36, 6, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_66], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_23.run(buf56, primals_139, primals_140, primals_141, primals_142, buf57, 9216, grid=grid(9216), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_67], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = extern_kernels.convolution(buf57, primals_143, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf58, (4, 32, 6, 6), (1152, 36, 6, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_68, input_69], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_24.run(buf58, primals_144, primals_145, primals_146, primals_147, buf59, 4608, grid=grid(4608), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_147
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_70], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = extern_kernels.convolution(buf59, primals_148, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf60, (4, 32, 6, 6), (1152, 36, 6, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf61 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_71, input_72], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_24.run(buf60, primals_149, primals_150, primals_151, primals_152, buf61, 4608, grid=grid(4608), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_152
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_73], Original ATen: [aten.convolution]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf62 = extern_kernels.convolution(buf61, primals_153, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf62, (4, 64, 6, 6), (2304, 36, 6, 1))
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf63 = empty_strided_cuda((4, 64, 6, 6), (2304, 36, 6, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf65 = empty_strided_cuda((4, 64, 6, 6), (2304, 36, 6, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_74, out_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.native_batch_norm_backward]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_25.run(buf62, primals_154, primals_155, primals_156, primals_157, buf57, primals_158, buf63, buf65, 9216, grid=grid(9216), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_157
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf64 = empty_strided_cuda((4, 64, 4, 4), (1024, 16, 4, 1), torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_75], Original ATen: [aten.clone]
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_26.run(buf63, primals_158, primals_159, primals_160, primals_161, buf64, 4096, grid=grid(4096), stream=stream0)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf63
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_158
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_161
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf64, primals_1, primals_3, primals_4, primals_5, primals_6, primals_8, primals_9, primals_10, primals_11, primals_13, primals_14, primals_15, primals_16, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_33, primals_34, primals_35, primals_36, primals_38, primals_39, primals_40, primals_41, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_52, primals_53, primals_54, primals_55, primals_57, primals_58, primals_59, primals_60, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_71, primals_72, primals_73, primals_74, primals_76, primals_77, primals_78, primals_79, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_90, primals_91, primals_92, primals_93, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_110, primals_111, primals_112, primals_113, primals_115, primals_116, primals_117, primals_118, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_129, primals_130, primals_131, primals_132, primals_134, primals_135, primals_136, primals_137, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_148, primals_149, primals_150, primals_151, primals_153, primals_154, primals_155, primals_156, primals_159, primals_160, buf1, buf2, buf3, buf4, buf5, buf6, buf7, buf8, buf9, buf10, buf12, buf13, buf14, buf15, buf16, buf17, buf18, buf19, buf20, buf21, buf22, buf23, buf24, buf25, buf26, buf27, buf28, buf29, buf30, buf31, buf32, buf33, buf34, buf35, buf36, buf37, buf38, buf39, buf41, buf42, buf43, buf44, buf45, buf46, buf47, buf48, buf49, buf50, buf51, buf52, buf53, buf54, buf55, buf56, buf57, buf58, buf59, buf60, buf61, buf62, buf65, )
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 3, 7, 7), (147, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 3, 128, 128), (49152, 16384, 128, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((16, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((16, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((16, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_47 = rand_strided((16, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_48 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_49 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_50 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_51 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_52 = rand_strided((16, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_53 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_54 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_55 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_56 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_57 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_58 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_59 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_60 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_61 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_62 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_63 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_64 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_65 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_66 = rand_strided((16, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_67 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_68 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_69 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_70 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_71 = rand_strided((16, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_72 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_73 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_74 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_75 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_76 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_77 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_78 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_79 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_80 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_81 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_82 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_83 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_84 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_85 = rand_strided((32, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_86 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_87 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_88 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_89 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_90 = rand_strided((32, 8, 3, 3), (72, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_91 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_92 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_93 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_94 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_95 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_96 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_97 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_98 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_99 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_100 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_101 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_102 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_103 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_104 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_105 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_106 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_107 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_108 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_109 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_110 = rand_strided((32, 8, 3, 3), (72, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_111 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_112 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_113 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_114 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_115 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_116 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_117 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_118 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_119 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_120 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_121 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_122 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_123 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_124 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_125 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_126 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_127 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_128 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_129 = rand_strided((32, 8, 3, 3), (72, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_130 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_131 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_132 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_133 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_134 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_135 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_136 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_137 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_138 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_139 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_140 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_141 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_142 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_143 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_144 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_145 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_146 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_147 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_148 = rand_strided((32, 8, 3, 3), (72, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_149 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_150 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_151 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_152 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_153 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_154 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_155 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_156 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_157 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_158 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_159 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_160 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_161 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161])
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:55:39.989000 3157503 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:55:40.033000 3157503 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/66/c66enzhzk3hp6rqq2m3at6arh2qzw4of563hh2crzy2wwcrpz7yd.py
