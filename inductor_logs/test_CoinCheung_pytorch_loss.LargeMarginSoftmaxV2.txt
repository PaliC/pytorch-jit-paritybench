V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['12_inference']
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2m/c2mlnkdeaa45hk7jb7u2hbnduvhsxpnf4x3adh3pdzqqycrog5ua.py
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [mask, eq_1, setitem], Original ATen: [aten.eq, aten.lift_fresh, aten.index_put]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   eq_1 => eq_1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mask => eq
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   setitem => full_default, index_put
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %eq : [num_users=2] = call_function[target=torch.ops.aten.eq.Scalar](args = (%arg1_1, 255), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %eq_1 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%eq, 0), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %index_put : [num_users=4] = call_function[target=torch.ops.aten.index_put.default](args = (%arg1_1, [%eq], %full_default), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_eq_index_put_lift_fresh_0 = async_compile.triton('triton_poi_fused_eq_index_put_lift_fresh_0', '''
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4}, 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*i1', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_eq_index_put_lift_fresh_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_eq_index_put_lift_fresh_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.full([1], 255, tl.int64)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 == tmp1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp2.to(tl.int64)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.full([1], 0, tl.int64)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp3 == tmp4
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.where(tmp2, tmp4, tmp0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp6, xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qg/cqgybhcejvn5ygkdk7vp5h4i5lm32acthwagjjvxytagt6qfqpex.py
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [logits, setitem_1, cross_entropy], Original ATen: [aten._to_copy, aten.lift_fresh, aten.index_put, aten._log_softmax]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   cross_entropy => amax_2, sub_4
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   logits => convert_element_type
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   setitem_1 => full_default_2, index_put_1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %convert_element_type : [num_users=3] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%arg0_1, torch.float32), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1000000.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %index_put_1 : [num_users=4] = call_function[target=torch.ops.aten.index_put.default](args = (%convert_element_type, [%convert_element_type_1], %full_default_2), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %amax_2 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%convert_element_type, [1], True), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_4 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type, %amax_2), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1 = async_compile.triton('triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1', '''
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tl.load(in_ptr1 + (x2), xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = x0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 == tmp1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = 1.0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = 0.0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = (tmp5 != 0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = -1000000.0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.where(tmp6, tmp9, tmp8)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = triton_helpers.maximum(tmp12, tmp14)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = triton_helpers.maximum(tmp15, tmp17)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tmp19.to(tl.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = triton_helpers.maximum(tmp18, tmp20)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tmp8 - tmp21
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp10, xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp22, xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xw/cxwimi5dfjkuizhhxupw2nspvkqauxsbhmrs35etzvkgxjptpbmd.py
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [q, log_q], Original ATen: [aten._softmax, aten._log_softmax]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   log_q => amax_1, sub_1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   q => amax, exp, sub
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%index_put_1, [1], True), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%index_put_1, %amax), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%index_put_1, [1], True), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%index_put_1, %amax_1), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused__log_softmax__softmax_2 = async_compile.triton('triton_poi_fused__log_softmax__softmax_2', '''
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused__log_softmax__softmax_2(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp0 - tmp7
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uz/cuz37itdn43h4za53elasixosjvd5g3zglm3y6gfoo57gmxcfeb2.py
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [q, sub_, log_q, mul_, losses, setitem_2], Original ATen: [aten._softmax, aten.sub, aten._log_softmax, aten.mul, aten.lift_fresh, aten.index_put]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   log_q => exp_1, log, sub_2, sum_2
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   losses => mul_1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_ => mul
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   q => div, sum_1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   setitem_2 => full_default_3, index_put_2
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub_ => sub_3
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, 0.3333333333333333), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %log), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %sub_2), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, 0.15), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %index_put_2 : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%mul_1, [%convert_element_type_2], %full_default_3), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3 = async_compile.triton('triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3', '''
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tl.load(in_ptr1 + (x2), xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp3 + tmp4
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp5 + tmp6
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp0 / tmp7
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = 0.3333333333333333
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp8 - tmp9
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tl_math.exp(tmp12)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tl_math.exp(tmp14)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tmp13 + tmp15
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tl_math.exp(tmp17)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp16 + tmp18
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tl_math.exp(tmp20)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tmp19 + tmp21
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = tl_math.log(tmp22)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tmp11 - tmp23
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp10 * tmp24
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = x0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp28 = tmp26 == tmp27
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = 1.0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp30 = 0.0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp31 = tl.where(tmp28, tmp29, tmp30)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp32 = (tmp31 != 0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp33 = 0.15
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp34 = tmp25 * tmp33
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp35 = tl.where(tmp32, tmp30, tmp34)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp35, xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [sum_1, cross_entropy, losses_1], Original ATen: [aten.sum, aten.nll_loss_forward, aten.add]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   cross_entropy => full_default_5, ne_1, neg, where_1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   losses_1 => add
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sum_1 => sum_3
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%index_put_2, [1]), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %ne_1 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%index_put, -100), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%squeeze,), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ne_1, %neg, %full_default_5), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_3, %where_1), kwargs = {})
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_nll_loss_forward_sum_4 = async_compile.triton('triton_poi_fused_add_nll_loss_forward_sum_4', '''
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4}, 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_nll_loss_forward_sum_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_nll_loss_forward_sum_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tl.load(in_ptr2 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tl.load(in_ptr2 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = tl.load(in_ptr2 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = tl.load(in_ptr2 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp2 + tmp3
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp4 + tmp5
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tl.full([1], -100, tl.int64)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp7 != tmp8
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tl.where(tmp9, tmp7, tmp10)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tl.full([XBLOCK], 4, tl.int32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 + tmp12
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp11 < 0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tl.where(tmp14, tmp13, tmp11)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.device_assert(((0 <= tmp15) & (tmp15 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp15 < 4")
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tl.load(in_ptr2 + (tmp15 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tl_math.exp(tmp18)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tl_math.exp(tmp20)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tmp19 + tmp21
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tl_math.exp(tmp23)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp22 + tmp24
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = tl_math.exp(tmp26)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp28 = tmp25 + tmp27
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = tl_math.log(tmp28)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp30 = tmp17 - tmp29
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp31 = -tmp30
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp32 = 0.0
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp33 = tl.where(tmp9, tmp31, tmp32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp34 = tmp6 + tmp33
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp34, xmask)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1 = args
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.bool)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mask, eq_1, setitem], Original ATen: [aten.eq, aten.lift_fresh, aten.index_put]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_eq_index_put_lift_fresh_0.run(arg1_1, buf0, buf1, 4, grid=grid(4), stream=stream0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg1_1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [logits, setitem_1, cross_entropy], Original ATen: [aten._to_copy, aten.lift_fresh, aten.index_put, aten._log_softmax]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1.run(buf1, arg0_1, buf2, buf7, 16, grid=grid(16), stream=stream0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [q, log_q], Original ATen: [aten._softmax, aten._log_softmax]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused__log_softmax__softmax_2.run(buf2, buf3, buf4, 16, grid=grid(16), stream=stream0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf5 = buf2; del buf2  # reuse
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf6 = buf5; del buf5  # reuse
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [q, sub_, log_q, mul_, losses, setitem_2], Original ATen: [aten._softmax, aten.sub, aten._log_softmax, aten.mul, aten.lift_fresh, aten.index_put]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3.run(buf6, buf3, buf4, buf1, 16, grid=grid(16), stream=stream0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf3
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf4
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf8 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, cross_entropy, losses_1], Original ATen: [aten.sum, aten.nll_loss_forward, aten.add]
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_nll_loss_forward_sum_4.run(buf6, buf1, buf7, buf8, 4, grid=grid(4), stream=stream0)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf1
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf6
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf7
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf0, buf8, )
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.int64)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:44:25.994000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:44:26.001000 4080864 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ob/cobvvrsgcei2fvhvzohp4uidp6dxh7qeuhhvjw5qrocv2socalm6.py
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['12_inference']
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/2m/c2mlnkdeaa45hk7jb7u2hbnduvhsxpnf4x3adh3pdzqqycrog5ua.py
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [mask, eq_1, setitem], Original ATen: [aten.eq, aten.lift_fresh, aten.index_put]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   eq_1 => eq_1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mask => eq
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   setitem => full_default, index_put
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %eq : [num_users=2] = call_function[target=torch.ops.aten.eq.Scalar](args = (%arg1_1, 255), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %eq_1 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%eq, 0), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %index_put : [num_users=4] = call_function[target=torch.ops.aten.index_put.default](args = (%arg1_1, [%eq], %full_default), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_eq_index_put_lift_fresh_0 = async_compile.triton('triton_poi_fused_eq_index_put_lift_fresh_0', '''
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4}, 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*i1', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_eq_index_put_lift_fresh_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_eq_index_put_lift_fresh_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.full([1], 255, tl.int64)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 == tmp1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp2.to(tl.int64)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.full([1], 0, tl.int64)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp3 == tmp4
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.where(tmp2, tmp4, tmp0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp6, xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/qg/cqgybhcejvn5ygkdk7vp5h4i5lm32acthwagjjvxytagt6qfqpex.py
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [logits, setitem_1, cross_entropy], Original ATen: [aten._to_copy, aten.lift_fresh, aten.index_put, aten._log_softmax]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   cross_entropy => amax_2, sub_4
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   logits => convert_element_type
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   setitem_1 => full_default_2, index_put_1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %convert_element_type : [num_users=3] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%arg0_1, torch.float32), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1000000.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %index_put_1 : [num_users=4] = call_function[target=torch.ops.aten.index_put.default](args = (%convert_element_type, [%convert_element_type_1], %full_default_2), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %amax_2 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%convert_element_type, [1], True), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_4 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type, %amax_2), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1 = async_compile.triton('triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1', '''
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tl.load(in_ptr1 + (x2), xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = x0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 == tmp1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = 1.0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = 0.0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = (tmp5 != 0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = -1000000.0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.where(tmp6, tmp9, tmp8)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = triton_helpers.maximum(tmp12, tmp14)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = triton_helpers.maximum(tmp15, tmp17)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tmp19.to(tl.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = triton_helpers.maximum(tmp18, tmp20)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tmp8 - tmp21
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp10, xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp22, xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/xw/cxwimi5dfjkuizhhxupw2nspvkqauxsbhmrs35etzvkgxjptpbmd.py
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [q, log_q], Original ATen: [aten._softmax, aten._log_softmax]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   log_q => amax_1, sub_1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   q => amax, exp, sub
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%index_put_1, [1], True), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%index_put_1, %amax), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%index_put_1, [1], True), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%index_put_1, %amax_1), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused__log_softmax__softmax_2 = async_compile.triton('triton_poi_fused__log_softmax__softmax_2', '''
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused__log_softmax__softmax_2(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp0 - tmp7
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/uz/cuz37itdn43h4za53elasixosjvd5g3zglm3y6gfoo57gmxcfeb2.py
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [q, sub_, log_q, mul_, losses, setitem_2], Original ATen: [aten._softmax, aten.sub, aten._log_softmax, aten.mul, aten.lift_fresh, aten.index_put]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   log_q => exp_1, log, sub_2, sum_2
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   losses => mul_1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_ => mul
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   q => div, sum_1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   setitem_2 => full_default_3, index_put_2
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub_ => sub_3
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, 0.3333333333333333), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %log), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %sub_2), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, 0.15), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %index_put_2 : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%mul_1, [%convert_element_type_2], %full_default_3), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3 = async_compile.triton('triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3', '''
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tl.load(in_ptr1 + (x2), xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp0 / tmp7
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = 0.3333333333333333
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp8 - tmp9
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tl_math.exp(tmp12)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tl_math.exp(tmp14)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tmp13 + tmp15
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tl_math.exp(tmp17)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp16 + tmp18
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tl_math.exp(tmp20)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tmp19 + tmp21
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = tl_math.log(tmp22)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tmp11 - tmp23
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp10 * tmp24
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = x0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp28 = tmp26 == tmp27
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = 1.0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp30 = 0.0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp31 = tl.where(tmp28, tmp29, tmp30)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp32 = (tmp31 != 0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp33 = 0.15
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp34 = tmp25 * tmp33
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp35 = tl.where(tmp32, tmp30, tmp34)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp35, xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [sum_1, cross_entropy, losses_1], Original ATen: [aten.sum, aten.nll_loss_forward, aten.add]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   cross_entropy => full_default_5, ne_1, neg, where_1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   losses_1 => add
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sum_1 => sum_3
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%index_put_2, [1]), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %ne_1 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%index_put, -100), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%squeeze,), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ne_1, %neg, %full_default_5), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_3, %where_1), kwargs = {})
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_nll_loss_forward_sum_4 = async_compile.triton('triton_poi_fused_add_nll_loss_forward_sum_4', '''
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4}, 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_nll_loss_forward_sum_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_nll_loss_forward_sum_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tl.load(in_ptr2 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tl.load(in_ptr2 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = tl.load(in_ptr2 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = tl.load(in_ptr2 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tl.full([1], -100, tl.int64)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp7 != tmp8
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tl.where(tmp9, tmp7, tmp10)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tl.full([XBLOCK], 4, tl.int32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 + tmp12
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp11 < 0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tl.where(tmp14, tmp13, tmp11)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.device_assert(((0 <= tmp15) & (tmp15 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp15 < 4")
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tl.load(in_ptr2 + (tmp15 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tl_math.exp(tmp18)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tl_math.exp(tmp20)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tmp19 + tmp21
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tl_math.exp(tmp23)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp22 + tmp24
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = tl_math.exp(tmp26)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp28 = tmp25 + tmp27
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = tl_math.log(tmp28)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp30 = tmp17 - tmp29
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp31 = -tmp30
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp32 = 0.0
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp33 = tl.where(tmp9, tmp31, tmp32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp34 = tmp6 + tmp33
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp34, xmask)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1 = args
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.bool)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mask, eq_1, setitem], Original ATen: [aten.eq, aten.lift_fresh, aten.index_put]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_eq_index_put_lift_fresh_0.run(arg1_1, buf0, buf1, 4, grid=grid(4), stream=stream0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg1_1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [logits, setitem_1, cross_entropy], Original ATen: [aten._to_copy, aten.lift_fresh, aten.index_put, aten._log_softmax]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1.run(buf1, arg0_1, buf2, buf7, 16, grid=grid(16), stream=stream0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [q, log_q], Original ATen: [aten._softmax, aten._log_softmax]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused__log_softmax__softmax_2.run(buf2, buf3, buf4, 16, grid=grid(16), stream=stream0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf5 = buf2; del buf2  # reuse
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf6 = buf5; del buf5  # reuse
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [q, sub_, log_q, mul_, losses, setitem_2], Original ATen: [aten._softmax, aten.sub, aten._log_softmax, aten.mul, aten.lift_fresh, aten.index_put]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3.run(buf6, buf3, buf4, buf1, 16, grid=grid(16), stream=stream0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf3
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf4
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf8 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, cross_entropy, losses_1], Original ATen: [aten.sum, aten.nll_loss_forward, aten.add]
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_nll_loss_forward_sum_4.run(buf6, buf1, buf7, buf8, 4, grid=grid(4), stream=stream0)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf1
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf6
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf7
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf0, buf8, )
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.int64)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:34:41.091000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:34:41.098000 2577916 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: inductor_cache/7m/c7m5ugukvp7c3dkhbe4sckc7mwt3vn5l4rtrljv2ethf6xdnb457.py
