V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['10_forward']
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eu/ceu7upc5sgbuphhxv6k4aea2igswmsev5w6afoagdy5xvecvkkn5.py
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [Q_1], Original ATen: [aten.mul]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   Q_1 => mul
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, 1.0), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_0 = async_compile.triton('triton_poi_fused_mul_0', '''
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_0(in_out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/73/c73ig4rbudlerzep2og4zez73x3rsxgq2yexmlbfwiwcptw2ztr6.py
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.clone]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits => clone
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_1,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_1 = async_compile.triton('triton_poi_fused_clone_1', '''
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 32*x1), xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dn/cdnh4oiaxklbq73i267sm7wsfxjol3ndbfnrbmubngbnbm54sb6n.py
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.clone]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => clone_2
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_4,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_2 = async_compile.triton('triton_poi_fused_clone_2', '''
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16 + x0 + 32*x1), xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, sub, mul_1, logits_1, weights], Original ATen: [aten.mul, aten.rsub, aten.add, aten._softmax]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits_1 => add
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weights => amax, exp, sub_1, sum_1
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_11, %view_12), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %view_12), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -1e+30), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_2), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add, [-1], True), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %amax), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_mul_rsub_3 = async_compile.triton('triton_poi_fused__softmax_add_mul_rsub_3', '''
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_mul_rsub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_mul_rsub_3(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 - tmp1
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = -1e+30
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 + tmp6
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 - tmp9
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp5
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp7, tmp13)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp3 - tmp16
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp5
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 + tmp19
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp14, tmp20)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp23
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp3 - tmp23
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp5
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 + tmp26
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp21, tmp27)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp7 - tmp28
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp13 - tmp28
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 + tmp32
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp20 - tmp28
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.exp(tmp34)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 + tmp35
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp27 - tmp28
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl_math.exp(tmp37)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 + tmp38
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp28, xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp39, xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lg/clg2luhielc6fqouaem5ngls3whrium2qd54jq3jzgp2x3ultqhu.py
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, sub, mul_1, logits_1, weights], Original ATen: [aten.mul, aten.rsub, aten.add, aten._softmax]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits_1 => add
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weights => amax, div, exp, sub_1
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_11, %view_12), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %view_12), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -1e+30), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_2), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add, [-1], True), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %amax), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_mul_rsub_4 = async_compile.triton('triton_poi_fused__softmax_add_mul_rsub_4', '''
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_mul_rsub_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_mul_rsub_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (x4), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x4), xmask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 - tmp1
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = -1e+30
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 + tmp6
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 - tmp8
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl_math.exp(tmp9)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp12, xmask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qv/cqvvputffj3l6llgfyakx7knd4rkyc2cnhaw6be6curiqquqito6.py
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   contiguous => clone_3
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_15,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_5 = async_compile.triton('triton_poi_fused_clone_5', '''
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (8, 4, 1), (4, 1, 1))
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 1), (4, 1, 1))
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [query], Original ATen: [aten.convolution]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(primals_1, primals_3, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4), (16, 4, 1))
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf1, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf1  # reuse
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [Q_1], Original ATen: [aten.mul]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_0.run(buf2, 64, grid=grid(64), stream=stream0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [memory], Original ATen: [aten.convolution]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_2, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 8, 4), (32, 4, 1))
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 1, 4), (16, 4, 4, 1), torch.float32)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.clone]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_1.run(buf0, buf3, 64, grid=grid(64), stream=stream0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.clone]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_2.run(buf0, buf8, 64, grid=grid(64), stream=stream0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.bmm]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf2, (16, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf3, (16, 1, 4), (4, 0, 1), 0), out=buf4)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, sub, mul_1, logits_1, weights], Original ATen: [aten.mul, aten.rsub, aten.add, aten._softmax]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_mul_rsub_3.run(buf4, primals_4, buf5, buf6, 64, grid=grid(64), stream=stream0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf4, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf4  # reuse
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, sub, mul_1, logits_1, weights], Original ATen: [aten.mul, aten.rsub, aten.add, aten._softmax]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_mul_rsub_4.run(buf7, primals_4, buf5, buf6, 256, grid=grid(256), stream=stream0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf6, (16, 4, 1), (4, 1, 1), 0); del buf6  # reuse
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.bmm]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf7, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf8, (16, 4, 1), (4, 1, 0), 0), out=buf9)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf5, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf5  # reuse
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(buf9, buf10, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (4, 4, 4), (16, 1, 4), 0), primals_1, primals_2, primals_3, primals_4, buf7, reinterpret_tensor(buf8, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf2, (16, 1, 4), (4, 4, 1), 0), reinterpret_tensor(buf3, (16, 4, 1), (4, 1, 4), 0), )
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((8, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:33:40.529000 3722872 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:33:40.535000 3722872 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/7f/c7fs5qzasxvintuwhletzcohk633gie3c2qgpdt7b6svsywt2j64.py
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['10_forward']
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/eu/ceu7upc5sgbuphhxv6k4aea2igswmsev5w6afoagdy5xvecvkkn5.py
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [Q_1], Original ATen: [aten.mul]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   Q_1 => mul
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, 1.0), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_0 = async_compile.triton('triton_poi_fused_mul_0', '''
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_0(in_out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/73/c73ig4rbudlerzep2og4zez73x3rsxgq2yexmlbfwiwcptw2ztr6.py
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.clone]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits => clone
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_1,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_1 = async_compile.triton('triton_poi_fused_clone_1', '''
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 32*x1), xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dn/cdnh4oiaxklbq73i267sm7wsfxjol3ndbfnrbmubngbnbm54sb6n.py
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.clone]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => clone_2
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_4,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_2 = async_compile.triton('triton_poi_fused_clone_2', '''
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16 + x0 + 32*x1), xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, sub, mul_1, logits_1, weights], Original ATen: [aten.mul, aten.rsub, aten.add, aten._softmax]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits_1 => add
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weights => amax, exp, sub_1, sum_1
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_11, %view_12), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %view_12), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -1e+30), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_2), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add, [-1], True), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %amax), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_mul_rsub_3 = async_compile.triton('triton_poi_fused__softmax_add_mul_rsub_3', '''
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_mul_rsub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_mul_rsub_3(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 - tmp1
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = -1e+30
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 + tmp6
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 - tmp9
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp5
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp7, tmp13)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp3 - tmp16
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp5
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 + tmp19
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp14, tmp20)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp23
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp3 - tmp23
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp5
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 + tmp26
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp21, tmp27)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp7 - tmp28
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp13 - tmp28
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 + tmp32
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp20 - tmp28
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.exp(tmp34)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 + tmp35
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp27 - tmp28
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl_math.exp(tmp37)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 + tmp38
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp28, xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp39, xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lg/clg2luhielc6fqouaem5ngls3whrium2qd54jq3jzgp2x3ultqhu.py
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, sub, mul_1, logits_1, weights], Original ATen: [aten.mul, aten.rsub, aten.add, aten._softmax]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits_1 => add
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weights => amax, div, exp, sub_1
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_11, %view_12), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %view_12), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -1e+30), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_2), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add, [-1], True), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %amax), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_mul_rsub_4 = async_compile.triton('triton_poi_fused__softmax_add_mul_rsub_4', '''
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_mul_rsub_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_mul_rsub_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (x4), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x4), xmask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 - tmp1
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = -1e+30
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 + tmp6
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 - tmp8
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl_math.exp(tmp9)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp12, xmask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qv/cqvvputffj3l6llgfyakx7knd4rkyc2cnhaw6be6curiqquqito6.py
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   contiguous => clone_3
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_15,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_5 = async_compile.triton('triton_poi_fused_clone_5', '''
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (8, 4, 1), (4, 1, 1))
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 1), (4, 1, 1))
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [query], Original ATen: [aten.convolution]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(primals_1, primals_3, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4), (16, 4, 1))
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf1, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf1  # reuse
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [Q_1], Original ATen: [aten.mul]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_0.run(buf2, 64, grid=grid(64), stream=stream0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [memory], Original ATen: [aten.convolution]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_2, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 8, 4), (32, 4, 1))
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 1, 4), (16, 4, 4, 1), torch.float32)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.clone]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_1.run(buf0, buf3, 64, grid=grid(64), stream=stream0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.clone]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_2.run(buf0, buf8, 64, grid=grid(64), stream=stream0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.bmm]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf2, (16, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf3, (16, 1, 4), (4, 0, 1), 0), out=buf4)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, sub, mul_1, logits_1, weights], Original ATen: [aten.mul, aten.rsub, aten.add, aten._softmax]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_mul_rsub_3.run(buf4, primals_4, buf5, buf6, 64, grid=grid(64), stream=stream0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf4, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf4  # reuse
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, sub, mul_1, logits_1, weights], Original ATen: [aten.mul, aten.rsub, aten.add, aten._softmax]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_mul_rsub_4.run(buf7, primals_4, buf5, buf6, 256, grid=grid(256), stream=stream0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf6, (16, 4, 1), (4, 1, 1), 0); del buf6  # reuse
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.bmm]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf7, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf8, (16, 4, 1), (4, 1, 0), 0), out=buf9)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf5, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf5  # reuse
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(buf9, buf10, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (4, 4, 4), (16, 1, 4), 0), primals_1, primals_2, primals_3, primals_4, buf7, reinterpret_tensor(buf8, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf2, (16, 1, 4), (4, 4, 1), 0), reinterpret_tensor(buf3, (16, 4, 1), (4, 1, 4), 0), )
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((8, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:23:43.158000 2314307 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:23:43.165000 2314307 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/75/c75brqeyvwhdbkuxt4rwrjy2uqgemfyhuzrpotcxetekrh2djb5b.py
