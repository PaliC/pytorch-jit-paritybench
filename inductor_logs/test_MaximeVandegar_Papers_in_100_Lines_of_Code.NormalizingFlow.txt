V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['14_forward']
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j5/cj5dkvqq4imuvn4fkbeisd23jenhpf6geao5rr5hrlpikrq736yj.py
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [wu], Original ATen: [aten.dot]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wu => mul, sum_1
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %primals_2), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_dot_0 = async_compile.triton('triton_poi_fused_dot_0', '''
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_dot_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_dot_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.broadcast_to(tmp13, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 * tmp8
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp4 + tmp9
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 * tmp14
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp10 + tmp15
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 * tmp20
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp16 + tmp21
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp22, None)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3h/c3hnrtctqt5zd4mn2ywwei7pis5kxl2rfhlke54bfctmciy5srmi.py
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [exp, add, log, add_1, sub, norm, pow_1, add_2, truediv, mul, u], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm => pow_1, pow_2, sum_2
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   u => add_3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sum_1,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%exp, 1), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%log, -1), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %sum_1), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_1, 2), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, None), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%pow_2, 2), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_3, 1e-15), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %add_2), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %div), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, %mul_1), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1 = async_compile.triton('triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1', '''
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (x0), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr2 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.exp(tmp2)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.log(tmp5)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = -1.0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 - tmp2
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp12
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp15
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 + tmp16
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 + tmp20
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp23
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp21 + tmp24
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.sqrt(tmp25)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1e-15
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp10 / tmp29
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp9 * tmp30
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp0 + tmp31
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp32, xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2w/c2wuivhwvoojo3flzkcugstynvpsefzkbckiq3a33zokearhi2iu.py
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [hidden_units], Original ATen: [aten.add]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hidden_units => add_4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_1, %primals_4), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_2 = async_compile.triton('triton_poi_fused_add_2', '''
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x1 + 64*x2 + ((x2 + 4*x1) // 16)), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (16 + x0 + 4*x1 + 64*x2 + ((x2 + 4*x1) // 16)), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (32 + x0 + 4*x1 + 64*x2 + ((x2 + 4*x1) // 16)), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.broadcast_to(tmp10, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (48 + x0 + 4*x1 + 64*x2 + ((x2 + 4*x1) // 16)), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr2 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp2
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 * tmp11
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 + tmp12
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 * tmp16
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yy/cyyjcywkv3vg6k5zavzus2iy6eerui7e4njanq76pwb72cnwqjry.py
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul_4], Original ATen: [aten.mv]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_4 => mul_8, sum_7
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_4, %permute_6), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_8, [1]), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mv_3 = async_compile.triton('triton_poi_fused_mv_3', '''
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mv_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mv_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*(((x0 // 4) % 4)) + 64*((x0 % 4)) + (x0 // 16)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 // 16), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (16*(((x0 // 4) % 4)) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (16 + 4*(((x0 // 4) % 4)) + 64*((x0 % 4)) + (x0 // 16)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (4 + 16*(((x0 // 4) % 4)) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (32 + 4*(((x0 // 4) % 4)) + 64*((x0 % 4)) + (x0 // 16)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr2 + (8 + 16*(((x0 // 4) % 4)) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr3 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.broadcast_to(tmp23, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (48 + 4*(((x0 // 4) % 4)) + 64*((x0 % 4)) + (x0 // 16)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (12 + 16*(((x0 // 4) % 4)) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr3 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 * tmp7
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp1 * tmp11
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 + tmp12
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.tanh(tmp19)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp1 * tmp20
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 + tmp21
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp22 * tmp24
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = libdevice.tanh(tmp28)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp1 * tmp29
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp27 + tmp30
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 * tmp33
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp35, xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/h4/ch4jtceqwsfonq3dj4hjcdqgy7xi32pfk3rakfrffrpxxiblsed4.py
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_1, x, mul_4, x_1], Original ATen: [aten.mul, aten.add]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_9
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => add_5
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_14
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_3, %mul_3), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_4, %unsqueeze_5), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %mul_9), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_4 = async_compile.triton('triton_poi_fused_add_mul_4', '''
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x3 + 4*x2 + 16*x1), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x5), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr5 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 * tmp11
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp5 + tmp12
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp13, xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/d2/cd2swwbn3xqqb4e2j4m6r4b6ke5j6xhu5rx7pcfn3if6qn6uvdia.py
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul_2, add_6, abs_1, add_7, log_det, log_jacobians, matmul_5, add_15, abs_2, add_16, log_det_1, log_jacobians_1, matmul_8, add_23, abs_3, add_24, log_det_2, log_jacobians_2, matmul_11, add_31, abs_4, add_32, log_det_3, log_jacobians_3], Original ATen: [aten.mv, aten.add, aten.abs, aten.log]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_1 => abs_1
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_2 => abs_2
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_3 => abs_3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_4 => abs_4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_15 => add_15
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_16 => add_16
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_23 => add_24
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_24 => add_25
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_31 => add_33
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_32 => add_34
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det => log_1
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det_1 => log_3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det_2 => log_5
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det_3 => log_7
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_jacobians => add_8
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_jacobians_1 => add_17
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_jacobians_2 => add_26
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_jacobians_3 => add_35
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_11 => mul_23, sum_16
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_2 => mul_5, sum_4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_5 => mul_11, sum_8
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_8 => mul_17, sum_12
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_2, %permute_4), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_5, [1]), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_3, 1), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_6,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_1, 1e-15), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_7,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%log_1, 0), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_6, %permute_10), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_8 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_11, [1]), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_7, 1), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_2 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_15,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_2, 1e-15), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_3 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_16,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_8, %log_3), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_10, %permute_16), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_12 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_17, [1]), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_11, 1), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_3 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_24,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_25 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_3, 1e-15), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_5 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_25,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_17, %log_5), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_14, %permute_22), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_16 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_23, [1]), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_33 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_15, 1), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_4 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_33,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_34 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_4, 1e-15), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_7 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_34,), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_35 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_26, %log_7), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_log_mv_5 = async_compile.triton('triton_poi_fused_abs_add_log_mv_5', '''
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_log_mv_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 50, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_log_mv_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (4 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr2 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (8 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.broadcast_to(tmp26, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.broadcast_to(tmp29, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr0 + (12 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr1 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.broadcast_to(tmp37, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr2 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.broadcast_to(tmp40, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr3 + (16*(x0 // 4) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr4 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.broadcast_to(tmp45, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr5 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.broadcast_to(tmp51, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr6 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.broadcast_to(tmp54, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr3 + (4 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr5 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.broadcast_to(tmp62, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr6 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.broadcast_to(tmp65, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.load(in_ptr3 + (8 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.load(in_ptr5 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.broadcast_to(tmp74, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr6 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.broadcast_to(tmp77, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.load(in_ptr3 + (12 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tl.load(in_ptr5 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.broadcast_to(tmp86, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.load(in_ptr6 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.broadcast_to(tmp89, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.load(in_ptr7 + (16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr8 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.broadcast_to(tmp97, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.load(in_ptr9 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tl.broadcast_to(tmp100, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tl.load(in_ptr7 + (4 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tl.load(in_ptr8 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tl.broadcast_to(tmp107, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tl.load(in_ptr9 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.broadcast_to(tmp110, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = tl.load(in_ptr7 + (8 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tl.load(in_ptr8 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tl.broadcast_to(tmp118, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl.load(in_ptr9 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tl.broadcast_to(tmp121, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.load(in_ptr7 + (12 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp129 = tl.load(in_ptr8 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp130 = tl.broadcast_to(tmp129, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp132 = tl.load(in_ptr9 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp133 = tl.broadcast_to(tmp132, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp136 = tl.load(in_ptr10 + (16*(x0 // 4) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp137 = tl.load(in_ptr11 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp138 = tl.broadcast_to(tmp137, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp143 = tl.load(in_ptr12 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp144 = tl.broadcast_to(tmp143, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp146 = tl.load(in_ptr13 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp147 = tl.broadcast_to(tmp146, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp149 = tl.load(in_ptr10 + (4 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp154 = tl.load(in_ptr12 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp155 = tl.broadcast_to(tmp154, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp157 = tl.load(in_ptr13 + (1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp158 = tl.broadcast_to(tmp157, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp161 = tl.load(in_ptr10 + (8 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp166 = tl.load(in_ptr12 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp167 = tl.broadcast_to(tmp166, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp169 = tl.load(in_ptr13 + (2))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp170 = tl.broadcast_to(tmp169, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp173 = tl.load(in_ptr10 + (12 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp178 = tl.load(in_ptr12 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp179 = tl.broadcast_to(tmp178, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp181 = tl.load(in_ptr13 + (3))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp182 = tl.broadcast_to(tmp181, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 - tmp2
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 * tmp9
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.tanh(tmp11)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp12
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp3 - tmp13
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 * tmp16
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 * tmp19
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp10 + tmp20
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.tanh(tmp22)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp23
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp3 - tmp24
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 * tmp27
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp28 * tmp30
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp21 + tmp31
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = libdevice.tanh(tmp33)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp3 - tmp35
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 * tmp38
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp39 * tmp41
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp32 + tmp42
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp44 + tmp46
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = libdevice.tanh(tmp47)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 * tmp48
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp3 - tmp49
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp50 * tmp52
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp53 * tmp55
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 + tmp46
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = libdevice.tanh(tmp58)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp59 * tmp59
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp3 - tmp60
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp61 * tmp63
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp64 * tmp66
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp56 + tmp67
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 + tmp46
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = libdevice.tanh(tmp70)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 * tmp71
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp3 - tmp72
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp73 * tmp75
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp76 * tmp78
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp68 + tmp79
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81 + tmp46
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = libdevice.tanh(tmp82)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp83 * tmp83
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp3 - tmp84
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp85 * tmp87
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp88 * tmp90
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp80 + tmp91
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = libdevice.tanh(tmp93)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp94 * tmp94
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp3 - tmp95
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp96 * tmp98
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp99 * tmp101
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = libdevice.tanh(tmp103)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 * tmp104
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp3 - tmp105
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp106 * tmp108
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp109 * tmp111
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp102 + tmp112
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = libdevice.tanh(tmp114)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tmp115 * tmp115
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp3 - tmp116
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tmp117 * tmp119
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tmp120 * tmp122
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp113 + tmp123
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = libdevice.tanh(tmp125)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = tmp126 * tmp126
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tmp3 - tmp127
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp131 = tmp128 * tmp130
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp134 = tmp131 * tmp133
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp135 = tmp124 + tmp134
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp139 = tmp136 + tmp138
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp140 = libdevice.tanh(tmp139)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp141 = tmp140 * tmp140
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp142 = tmp3 - tmp141
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp145 = tmp142 * tmp144
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp148 = tmp145 * tmp147
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp150 = tmp149 + tmp138
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp151 = libdevice.tanh(tmp150)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp152 = tmp151 * tmp151
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp153 = tmp3 - tmp152
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp156 = tmp153 * tmp155
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp159 = tmp156 * tmp158
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp160 = tmp148 + tmp159
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp162 = tmp161 + tmp138
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp163 = libdevice.tanh(tmp162)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp164 = tmp163 * tmp163
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp165 = tmp3 - tmp164
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp168 = tmp165 * tmp167
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp171 = tmp168 * tmp170
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp172 = tmp160 + tmp171
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp174 = tmp173 + tmp138
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp175 = libdevice.tanh(tmp174)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp176 = tmp175 * tmp175
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp177 = tmp3 - tmp176
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp180 = tmp177 * tmp179
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp183 = tmp180 * tmp182
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp184 = tmp172 + tmp183
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp185 = tmp43 + tmp3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp186 = tl_math.abs(tmp185)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp187 = 1e-15
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp188 = tmp186 + tmp187
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp189 = tl_math.log(tmp188)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp190 = 0.0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp191 = tmp189 + tmp190
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp192 = tmp92 + tmp3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp193 = tl_math.abs(tmp192)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp194 = tmp193 + tmp187
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp195 = tl_math.log(tmp194)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp196 = tmp191 + tmp195
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp197 = tmp135 + tmp3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp198 = tl_math.abs(tmp197)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp199 = tmp198 + tmp187
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp200 = tl_math.log(tmp199)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp201 = tmp196 + tmp200
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp202 = tmp184 + tmp3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp203 = tl_math.abs(tmp202)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp204 = tmp203 + tmp187
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp205 = tl_math.log(tmp204)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp206 = tmp201 + tmp205
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp206, xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6z/c6zonm33frruc2py2ndj7z3yrutmpj7btjiz7wqhphv65lhn2s6k.py
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_7, x_2, mul_10, x_3], Original ATen: [aten.mul, aten.add]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_10 => mul_21
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_15
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => add_23
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_32
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_8, %unsqueeze_9), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_14, %mul_15), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_12, %unsqueeze_13), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_32 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_23, %mul_21), kwargs = {})
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_6 = async_compile.triton('triton_poi_fused_add_mul_6', '''
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_6(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x4), xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x3 + 4*x2 + 16*x1), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x5), xmask, eviction_policy='evict_last')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr4 + (0))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp3
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 * tmp11
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp5 + tmp12
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp13, xmask)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1, ), (1, ))
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wu], Original ATen: [aten.dot]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_dot_0.run(primals_1, primals_2, buf0, 1, grid=grid(1), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [exp, add, log, add_1, sub, norm, pow_1, add_2, truediv, mul, u], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1.run(primals_2, buf0, primals_1, buf1, 4, grid=grid(4), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (1, 4, 16), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [hidden_units], Original ATen: [aten.add]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_2.run(primals_3, primals_1, primals_4, buf2, 64, grid=grid(64), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf0; del buf0  # reuse
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wu_2], Original ATen: [aten.dot]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_dot_0.run(primals_8, primals_9, buf9, 1, grid=grid(1), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [exp_2, add_17, log_4, add_18, sub_4, norm_2, pow_5, add_19, truediv_2, mul_6, u_2], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1.run(primals_9, buf9, primals_8, buf10, 4, grid=grid(4), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf9; del buf9  # reuse
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wu_1], Original ATen: [aten.dot]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_dot_0.run(primals_5, primals_6, buf4, 1, grid=grid(1), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [exp_1, add_9, log_2, add_10, sub_2, norm_1, pow_3, add_11, truediv_1, mul_3, u_1], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1.run(primals_6, buf4, primals_5, buf5, 4, grid=grid(4), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_4], Original ATen: [aten.mv]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mv_3.run(primals_3, buf1, buf2, primals_5, buf6, 64, grid=grid(64), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, x, mul_4, x_1], Original ATen: [aten.mul, aten.add]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_4.run(primals_3, buf1, buf2, buf5, buf6, primals_7, buf7, 256, grid=grid(256), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4), (1, 4, 16), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [hidden_units_2], Original ATen: [aten.add]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_2.run(buf7, primals_8, primals_10, buf11, 64, grid=grid(64), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf4; del buf4  # reuse
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wu_3], Original ATen: [aten.dot]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_dot_0.run(primals_11, primals_12, buf13, 1, grid=grid(1), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [exp_3, add_25, log_6, add_26, sub_6, norm_3, pow_7, add_27, truediv_3, mul_9, u_3], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1.run(primals_12, buf13, primals_11, buf14, 4, grid=grid(4), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_10], Original ATen: [aten.mv]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mv_3.run(buf7, buf10, buf11, primals_11, buf15, 64, grid=grid(64), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf3, (1, 4, 4), (16, 4, 1), 0); del buf3  # reuse
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_2, add_6, abs_1, add_7, log_det, log_jacobians, matmul_5, add_15, abs_2, add_16, log_det_1, log_jacobians_1, matmul_8, add_23, abs_3, add_24, log_det_2, log_jacobians_2, matmul_11, add_31, abs_4, add_32, log_det_3, log_jacobians_3], Original ATen: [aten.mv, aten.add, aten.abs, aten.log]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_log_mv_5.run(buf18, buf2, primals_1, buf1, buf6, primals_7, primals_5, buf5, buf11, primals_8, buf10, buf15, primals_13, primals_11, buf14, 16, grid=grid(16), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf7; del buf7  # reuse
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_7, x_2, mul_10, x_3], Original ATen: [aten.mul, aten.add]
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_6.run(buf16, buf10, buf11, buf14, buf15, primals_13, 256, grid=grid(256), stream=stream0)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf16, buf18, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, )
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:28:55.259000 1272111 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:55.295000 1272111 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jh/cjh47uuedr76753g7k2zqygovns73qwh53jnvhponvvn6qvianaz.py
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['14_forward']
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/j5/cj5dkvqq4imuvn4fkbeisd23jenhpf6geao5rr5hrlpikrq736yj.py
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [wu], Original ATen: [aten.dot]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wu => mul, sum_1
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %primals_2), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_dot_0 = async_compile.triton('triton_poi_fused_dot_0', '''
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_dot_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_dot_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.broadcast_to(tmp13, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 * tmp8
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp4 + tmp9
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 * tmp14
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp10 + tmp15
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 * tmp20
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp16 + tmp21
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp22, None)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3h/c3hnrtctqt5zd4mn2ywwei7pis5kxl2rfhlke54bfctmciy5srmi.py
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [exp, add, log, add_1, sub, norm, pow_1, add_2, truediv, mul, u], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm => pow_1, pow_2, sum_2
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   u => add_3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sum_1,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%exp, 1), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%log, -1), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %sum_1), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_1, 2), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, None), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%pow_2, 2), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_3, 1e-15), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %add_2), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %div), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, %mul_1), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1 = async_compile.triton('triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1', '''
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (x0), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr2 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.exp(tmp2)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.log(tmp5)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = -1.0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 - tmp2
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp12
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp15
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 + tmp16
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 + tmp20
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp23
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp21 + tmp24
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.sqrt(tmp25)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1e-15
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp10 / tmp29
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp9 * tmp30
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp0 + tmp31
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp32, xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2w/c2wuivhwvoojo3flzkcugstynvpsefzkbckiq3a33zokearhi2iu.py
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [hidden_units], Original ATen: [aten.add]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hidden_units => add_4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_1, %primals_4), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_2 = async_compile.triton('triton_poi_fused_add_2', '''
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x1 + 64*x2 + ((x2 + 4*x1) // 16)), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (16 + x0 + 4*x1 + 64*x2 + ((x2 + 4*x1) // 16)), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (32 + x0 + 4*x1 + 64*x2 + ((x2 + 4*x1) // 16)), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.broadcast_to(tmp10, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (48 + x0 + 4*x1 + 64*x2 + ((x2 + 4*x1) // 16)), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr2 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp2
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 * tmp11
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 + tmp12
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 * tmp16
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yy/cyyjcywkv3vg6k5zavzus2iy6eerui7e4njanq76pwb72cnwqjry.py
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul_4], Original ATen: [aten.mv]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_4 => mul_8, sum_7
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_4, %permute_6), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_8, [1]), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mv_3 = async_compile.triton('triton_poi_fused_mv_3', '''
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mv_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mv_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*(((x0 // 4) % 4)) + 64*((x0 % 4)) + (x0 // 16)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 // 16), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (16*(((x0 // 4) % 4)) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (16 + 4*(((x0 // 4) % 4)) + 64*((x0 % 4)) + (x0 // 16)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (4 + 16*(((x0 // 4) % 4)) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (32 + 4*(((x0 // 4) % 4)) + 64*((x0 % 4)) + (x0 // 16)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr2 + (8 + 16*(((x0 // 4) % 4)) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr3 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.broadcast_to(tmp23, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (48 + 4*(((x0 // 4) % 4)) + 64*((x0 % 4)) + (x0 // 16)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (12 + 16*(((x0 // 4) % 4)) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr3 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 * tmp7
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp1 * tmp11
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 + tmp12
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.tanh(tmp19)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp1 * tmp20
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 + tmp21
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp22 * tmp24
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = libdevice.tanh(tmp28)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp1 * tmp29
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp27 + tmp30
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 * tmp33
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp35, xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/h4/ch4jtceqwsfonq3dj4hjcdqgy7xi32pfk3rakfrffrpxxiblsed4.py
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_1, x, mul_4, x_1], Original ATen: [aten.mul, aten.add]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_9
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => add_5
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_14
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_3, %mul_3), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_4, %unsqueeze_5), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %mul_9), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_4 = async_compile.triton('triton_poi_fused_add_mul_4', '''
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x3 + 4*x2 + 16*x1), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x5), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr5 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 * tmp11
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp5 + tmp12
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp13, xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/d2/cd2swwbn3xqqb4e2j4m6r4b6ke5j6xhu5rx7pcfn3if6qn6uvdia.py
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul_2, add_6, abs_1, add_7, log_det, log_jacobians, matmul_5, add_15, abs_2, add_16, log_det_1, log_jacobians_1, matmul_8, add_23, abs_3, add_24, log_det_2, log_jacobians_2, matmul_11, add_31, abs_4, add_32, log_det_3, log_jacobians_3], Original ATen: [aten.mv, aten.add, aten.abs, aten.log]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_1 => abs_1
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_2 => abs_2
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_3 => abs_3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_4 => abs_4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_15 => add_15
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_16 => add_16
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_23 => add_24
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_24 => add_25
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_31 => add_33
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_32 => add_34
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det => log_1
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det_1 => log_3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det_2 => log_5
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det_3 => log_7
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_jacobians => add_8
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_jacobians_1 => add_17
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_jacobians_2 => add_26
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_jacobians_3 => add_35
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_11 => mul_23, sum_16
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_2 => mul_5, sum_4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_5 => mul_11, sum_8
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_8 => mul_17, sum_12
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_2, %permute_4), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_5, [1]), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_3, 1), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_6,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_1, 1e-15), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_7,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%log_1, 0), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_6, %permute_10), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_8 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_11, [1]), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_7, 1), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_2 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_15,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_2, 1e-15), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_3 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_16,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_8, %log_3), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_10, %permute_16), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_12 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_17, [1]), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_11, 1), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_3 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_24,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_25 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_3, 1e-15), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_5 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_25,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_17, %log_5), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_14, %permute_22), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_16 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_23, [1]), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_33 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_15, 1), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_4 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_33,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_34 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_4, 1e-15), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_7 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_34,), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_35 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_26, %log_7), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_log_mv_5 = async_compile.triton('triton_poi_fused_abs_add_log_mv_5', '''
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_log_mv_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 50, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_log_mv_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, xnumel, XBLOCK : tl.constexpr):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (4 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr2 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (8 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.broadcast_to(tmp26, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.broadcast_to(tmp29, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr0 + (12 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr1 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.broadcast_to(tmp37, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr2 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.broadcast_to(tmp40, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr3 + (16*(x0 // 4) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr4 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.broadcast_to(tmp45, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr5 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.broadcast_to(tmp51, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr6 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.broadcast_to(tmp54, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr3 + (4 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr5 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.broadcast_to(tmp62, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr6 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.broadcast_to(tmp65, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.load(in_ptr3 + (8 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.load(in_ptr5 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.broadcast_to(tmp74, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr6 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.broadcast_to(tmp77, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.load(in_ptr3 + (12 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tl.load(in_ptr5 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.broadcast_to(tmp86, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.load(in_ptr6 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.broadcast_to(tmp89, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.load(in_ptr7 + (16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr8 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.broadcast_to(tmp97, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.load(in_ptr9 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tl.broadcast_to(tmp100, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tl.load(in_ptr7 + (4 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tl.load(in_ptr8 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tl.broadcast_to(tmp107, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tl.load(in_ptr9 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.broadcast_to(tmp110, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = tl.load(in_ptr7 + (8 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tl.load(in_ptr8 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tl.broadcast_to(tmp118, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl.load(in_ptr9 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tl.broadcast_to(tmp121, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.load(in_ptr7 + (12 + 16*((x0 % 4)) + (x0 // 4)), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp129 = tl.load(in_ptr8 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp130 = tl.broadcast_to(tmp129, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp132 = tl.load(in_ptr9 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp133 = tl.broadcast_to(tmp132, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp136 = tl.load(in_ptr10 + (16*(x0 // 4) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp137 = tl.load(in_ptr11 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp138 = tl.broadcast_to(tmp137, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp143 = tl.load(in_ptr12 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp144 = tl.broadcast_to(tmp143, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp146 = tl.load(in_ptr13 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp147 = tl.broadcast_to(tmp146, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp149 = tl.load(in_ptr10 + (4 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp154 = tl.load(in_ptr12 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp155 = tl.broadcast_to(tmp154, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp157 = tl.load(in_ptr13 + (1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp158 = tl.broadcast_to(tmp157, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp161 = tl.load(in_ptr10 + (8 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp166 = tl.load(in_ptr12 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp167 = tl.broadcast_to(tmp166, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp169 = tl.load(in_ptr13 + (2))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp170 = tl.broadcast_to(tmp169, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp173 = tl.load(in_ptr10 + (12 + 16*(x0 // 4) + ((x0 % 4))), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp178 = tl.load(in_ptr12 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp179 = tl.broadcast_to(tmp178, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp181 = tl.load(in_ptr13 + (3))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp182 = tl.broadcast_to(tmp181, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 - tmp2
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 * tmp9
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.tanh(tmp11)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp12
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp3 - tmp13
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 * tmp16
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 * tmp19
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp10 + tmp20
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.tanh(tmp22)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp23
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp3 - tmp24
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 * tmp27
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp28 * tmp30
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp21 + tmp31
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = libdevice.tanh(tmp33)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp3 - tmp35
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 * tmp38
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp39 * tmp41
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp32 + tmp42
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp44 + tmp46
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = libdevice.tanh(tmp47)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 * tmp48
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp3 - tmp49
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp50 * tmp52
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp53 * tmp55
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 + tmp46
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = libdevice.tanh(tmp58)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp59 * tmp59
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp3 - tmp60
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp61 * tmp63
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp64 * tmp66
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp56 + tmp67
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 + tmp46
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = libdevice.tanh(tmp70)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 * tmp71
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp3 - tmp72
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp73 * tmp75
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp76 * tmp78
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp68 + tmp79
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81 + tmp46
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = libdevice.tanh(tmp82)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp83 * tmp83
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp3 - tmp84
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp85 * tmp87
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp88 * tmp90
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp80 + tmp91
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = libdevice.tanh(tmp93)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp94 * tmp94
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp3 - tmp95
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp96 * tmp98
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp99 * tmp101
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = libdevice.tanh(tmp103)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 * tmp104
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp3 - tmp105
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp106 * tmp108
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp109 * tmp111
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp102 + tmp112
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = libdevice.tanh(tmp114)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tmp115 * tmp115
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp3 - tmp116
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tmp117 * tmp119
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tmp120 * tmp122
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp113 + tmp123
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = libdevice.tanh(tmp125)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = tmp126 * tmp126
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tmp3 - tmp127
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp131 = tmp128 * tmp130
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp134 = tmp131 * tmp133
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp135 = tmp124 + tmp134
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp139 = tmp136 + tmp138
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp140 = libdevice.tanh(tmp139)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp141 = tmp140 * tmp140
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp142 = tmp3 - tmp141
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp145 = tmp142 * tmp144
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp148 = tmp145 * tmp147
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp150 = tmp149 + tmp138
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp151 = libdevice.tanh(tmp150)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp152 = tmp151 * tmp151
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp153 = tmp3 - tmp152
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp156 = tmp153 * tmp155
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp159 = tmp156 * tmp158
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp160 = tmp148 + tmp159
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp162 = tmp161 + tmp138
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp163 = libdevice.tanh(tmp162)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp164 = tmp163 * tmp163
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp165 = tmp3 - tmp164
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp168 = tmp165 * tmp167
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp171 = tmp168 * tmp170
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp172 = tmp160 + tmp171
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp174 = tmp173 + tmp138
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp175 = libdevice.tanh(tmp174)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp176 = tmp175 * tmp175
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp177 = tmp3 - tmp176
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp180 = tmp177 * tmp179
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp183 = tmp180 * tmp182
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp184 = tmp172 + tmp183
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp185 = tmp43 + tmp3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp186 = tl_math.abs(tmp185)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp187 = 1e-15
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp188 = tmp186 + tmp187
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp189 = tl_math.log(tmp188)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp190 = 0.0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp191 = tmp189 + tmp190
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp192 = tmp92 + tmp3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp193 = tl_math.abs(tmp192)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp194 = tmp193 + tmp187
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp195 = tl_math.log(tmp194)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp196 = tmp191 + tmp195
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp197 = tmp135 + tmp3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp198 = tl_math.abs(tmp197)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp199 = tmp198 + tmp187
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp200 = tl_math.log(tmp199)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp201 = tmp196 + tmp200
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp202 = tmp184 + tmp3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp203 = tl_math.abs(tmp202)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp204 = tmp203 + tmp187
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp205 = tl_math.log(tmp204)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp206 = tmp201 + tmp205
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp206, xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6z/c6zonm33frruc2py2ndj7z3yrutmpj7btjiz7wqhphv65lhn2s6k.py
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_7, x_2, mul_10, x_3], Original ATen: [aten.mul, aten.add]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_10 => mul_21
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_15
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => add_23
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_32
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_8, %unsqueeze_9), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_14, %mul_15), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_12, %unsqueeze_13), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_32 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_23, %mul_21), kwargs = {})
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_6 = async_compile.triton('triton_poi_fused_add_mul_6', '''
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_6(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x4), xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x3 + 4*x2 + 16*x1), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x5), xmask, eviction_policy='evict_last')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr4 + (0))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp3
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 * tmp11
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp5 + tmp12
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp13, xmask)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1, ), (1, ))
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wu], Original ATen: [aten.dot]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_dot_0.run(primals_1, primals_2, buf0, 1, grid=grid(1), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [exp, add, log, add_1, sub, norm, pow_1, add_2, truediv, mul, u], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1.run(primals_2, buf0, primals_1, buf1, 4, grid=grid(4), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (1, 4, 16), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [hidden_units], Original ATen: [aten.add]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_2.run(primals_3, primals_1, primals_4, buf2, 64, grid=grid(64), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf0; del buf0  # reuse
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wu_2], Original ATen: [aten.dot]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_dot_0.run(primals_8, primals_9, buf9, 1, grid=grid(1), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [exp_2, add_17, log_4, add_18, sub_4, norm_2, pow_5, add_19, truediv_2, mul_6, u_2], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1.run(primals_9, buf9, primals_8, buf10, 4, grid=grid(4), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf9; del buf9  # reuse
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wu_1], Original ATen: [aten.dot]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_dot_0.run(primals_5, primals_6, buf4, 1, grid=grid(1), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [exp_1, add_9, log_2, add_10, sub_2, norm_1, pow_3, add_11, truediv_1, mul_3, u_1], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1.run(primals_6, buf4, primals_5, buf5, 4, grid=grid(4), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_4], Original ATen: [aten.mv]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mv_3.run(primals_3, buf1, buf2, primals_5, buf6, 64, grid=grid(64), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, x, mul_4, x_1], Original ATen: [aten.mul, aten.add]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_4.run(primals_3, buf1, buf2, buf5, buf6, primals_7, buf7, 256, grid=grid(256), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4), (1, 4, 16), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [hidden_units_2], Original ATen: [aten.add]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_2.run(buf7, primals_8, primals_10, buf11, 64, grid=grid(64), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf4; del buf4  # reuse
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wu_3], Original ATen: [aten.dot]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_dot_0.run(primals_11, primals_12, buf13, 1, grid=grid(1), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [exp_3, add_25, log_6, add_26, sub_6, norm_3, pow_7, add_27, truediv_3, mul_9, u_3], Original ATen: [aten.exp, aten.add, aten.log, aten.sub, aten.linalg_vector_norm, aten.pow, aten.div, aten.mul]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_exp_linalg_vector_norm_log_mul_pow_sub_1.run(primals_12, buf13, primals_11, buf14, 4, grid=grid(4), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_10], Original ATen: [aten.mv]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mv_3.run(buf7, buf10, buf11, primals_11, buf15, 64, grid=grid(64), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf3, (1, 4, 4), (16, 4, 1), 0); del buf3  # reuse
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_2, add_6, abs_1, add_7, log_det, log_jacobians, matmul_5, add_15, abs_2, add_16, log_det_1, log_jacobians_1, matmul_8, add_23, abs_3, add_24, log_det_2, log_jacobians_2, matmul_11, add_31, abs_4, add_32, log_det_3, log_jacobians_3], Original ATen: [aten.mv, aten.add, aten.abs, aten.log]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_log_mv_5.run(buf18, buf2, primals_1, buf1, buf6, primals_7, primals_5, buf5, buf11, primals_8, buf10, buf15, primals_13, primals_11, buf14, 16, grid=grid(16), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf7; del buf7  # reuse
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_7, x_2, mul_10, x_3], Original ATen: [aten.mul, aten.add]
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_6.run(buf16, buf10, buf11, buf14, buf15, primals_13, 256, grid=grid(256), stream=stream0)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf16, buf18, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, )
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:19:05.148000 3836855 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:19:05.189000 3836855 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ce/ccecviekfcclqiyglxe6hkf44u5smdhiqwwxahi5abv7c3mdbnzv.py
