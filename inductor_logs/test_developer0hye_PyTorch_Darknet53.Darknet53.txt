V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ks/cksa7rovu3ro7bt4vrd6ghsjths23wrsv7asy7t26bbd7ihalfqw.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 128, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 96
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 27*y1), tmp0, xmask & ymask)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f3/cf3yvvrx2dp4pn5dwcyzm6qhg7y76yekqxcww4ry23bgzk3jew7k.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp0, ymask)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/h6/ch6idif7qwul5cpmntwlb6pzuk7uvdh5cx5qbyj7c3k72t6saeli.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 2048
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 32
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 32*x2 + 288*y1), tmp0, xmask)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z5/cz5lcpzem5jshoxsyxcxgxhiha6q7ktzqnt2hpqcbwodal3x5j3j.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_3 = async_compile.triton('triton_poi_fused_3', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 8192, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 8192
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 576*y1), tmp0, xmask)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l6/cl6giekbizdbnf3zd5gwfgrns5u4drugr2lvufwr3ipnzsmtpimy.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_4 = async_compile.triton('triton_poi_fused_4', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32768, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32768
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/n4/cn4qbmztxrtdjckkhya25vms3xu5rvrlec42b5y5ojopl6ngwgh7.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_5 = async_compile.triton('triton_poi_fused_5', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 131072
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4g/c4gzvkyepx3rappomuisjehfkptoui4ssyogeeec6yowrbw7kavn.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_6 = async_compile.triton('triton_poi_fused_6', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 524288, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_6(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 524288
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 512)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 512
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 512*x2 + 4608*y1), tmp0, xmask & ymask)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ls/clsisquf4ouv7kmzyh4jjncnoafrw6j6tbmfvfhipzbmsmln2bk2.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1, mul_2, sub
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt, mul_3, where
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_1, 0), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.01), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_1, %mul_3), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/be/cbe7onc6y3lqnfzkxzsrnza3r2orazaxgve3ngets2eunnexhhqf.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, input_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_3, mul_5, mul_6, sub_1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_1, mul_7, where_1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => relu
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze_13), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_15), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_3, 0), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, 0.01), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %add_3, %mul_7), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%where_1,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp22, None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lq/clqnqxgn4lhxrhfc7fhedua4rechu3zew6nz2cumkyw3lb7do645.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, input_10, input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => gt_2, mul_11, where_2
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => relu_1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => relu_2
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_5, mul_10, mul_9, sub_2
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_9, %unsqueeze_21), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_10, %unsqueeze_23), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_5, 0), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_5, 0.01), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %add_5, %mul_11), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%where_2,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%relu_1,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 131072
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp21, tmp22)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp23, None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7k/c7kjhmtvkyxalbkhwum5vhe6mtlb26lehkaowf4vv7n2iqxnkvm3.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_14, input_15, input_16, input_17, input_18, input_19, input_20, input_21, input_22, input_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_14 => add_7, mul_13, mul_14, sub_3
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => gt_3, mul_15, where_3
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_16 => relu_3
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_17 => relu_4
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => relu_5
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_19 => relu_6
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_20 => relu_7
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_21 => relu_8
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_22 => relu_9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_23 => relu_10
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_29), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_31), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_7, 0), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, 0.01), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %add_7, %mul_15), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%where_3,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_3,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_4,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_6 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_5,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_7 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_6,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_7,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_9 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_8,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_10 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%relu_9,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp21, tmp22)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp21, tmp23)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp21, tmp24)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp21, tmp25)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp21, tmp26)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp21, tmp27)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.maximum(tmp21, tmp28)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp29, None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pw/cpwukgdbx5fpcf5oud6w7pm2qgmq53lxks2onsz2cy3jf76r6nra.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_25, input_26, input_27, input_28, input_29, input_30, input_31, input_32, input_33, input_34], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_25 => add_9, mul_17, mul_18, sub_4
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_26 => gt_4, mul_19, where_4
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_27 => relu_11
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_28 => relu_12
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_29 => relu_13
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_30 => relu_14
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_31 => relu_15
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_32 => relu_16
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_33 => relu_17
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_34 => relu_18
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, %unsqueeze_37), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %unsqueeze_39), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_9, 0), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_9, 0.01), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_4 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %add_9, %mul_19), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_11 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%where_4,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_12 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_11,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_13 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_12,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_14 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_13,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_15 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_14,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_16 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_15,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_17 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_16,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_18 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%relu_17,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 512)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp21, tmp22)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp21, tmp23)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp21, tmp24)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp21, tmp25)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp21, tmp26)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp21, tmp27)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.maximum(tmp21, tmp28)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp29, None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ss/cssofggazege2tfsc64f6lfdco6brmj5lfnejd4nuqq6q4pqkbyr.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_36], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_36 => add_11, mul_21, mul_22, sub_5
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_43), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_21, %unsqueeze_45), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_22, %unsqueeze_47), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_12', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 1024)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_37, input_38, input_39, input_40, input_41, out], Original ATen: [aten.leaky_relu, aten.relu, aten.mean]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_37 => gt_5, mul_23, where_5
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_38 => relu_19
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_39 => relu_20
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_40 => relu_21
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_41 => relu_22
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => mean
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_5 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_11, 0), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_11, 0.01), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_5, %add_11, %mul_23), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_19 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%where_5,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_20 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_19,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_21 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_20,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_22 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_21,), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%relu_22, [-1, -2], True), kwargs = {})
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_mean_relu_13 = async_compile.triton('triton_poi_fused_leaky_relu_mean_relu_13', '''
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_mean_relu_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_mean_relu_13(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 1024)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 1024
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4096*x1), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1024 + x0 + 4096*x1), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (2048 + x0 + 4096*x1), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (3072 + x0 + 4096*x1), None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.01
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 0, tl.int32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp6, tmp5)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp6, tmp8)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp6, tmp9)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 > tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp3
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp12, tmp11, tmp13)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp6, tmp14)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp6, tmp15)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp6, tmp16)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp6, tmp17)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 + tmp18
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 > tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp3
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp21, tmp20, tmp22)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp6, tmp23)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp6, tmp24)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp6, tmp25)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp6, tmp26)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp19 + tmp27
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 > tmp1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp3
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp29, tmp31)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.maximum(tmp6, tmp32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = triton_helpers.maximum(tmp6, tmp33)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.maximum(tmp6, tmp34)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp6, tmp35)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp28 + tmp36
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 4.0
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 / tmp38
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp39, None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33 = args
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (32, 3, 3, 3), (27, 9, 3, 1))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (32, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (32, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, 32, 3, 3), (288, 9, 3, 1))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (128, 64, 3, 3), (576, 9, 3, 1))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (128, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (128, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (128, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (128, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (256, 128, 3, 3), (1152, 9, 3, 1))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (256, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (256, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (256, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (256, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (512, 256, 3, 3), (2304, 9, 3, 1))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (512, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (512, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (512, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (512, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (1024, 512, 3, 3), (4608, 9, 3, 1))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (1024, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (1024, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (1024, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (1024, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, 1024), (1024, 1))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((32, 3, 3, 3), (27, 1, 9, 3), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 96, 9, grid=grid(96, 9), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_2, buf1, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 32, 3, 3), (288, 1, 96, 32), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_7, buf2, 2048, 9, grid=grid(2048, 9), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((128, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_3.run(primals_12, buf3, 8192, 9, grid=grid(8192, 9), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((256, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_17, buf4, 32768, 9, grid=grid(32768, 9), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((512, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_5.run(primals_22, buf5, 131072, 9, grid=grid(131072, 9), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1024, 512, 3, 3), (4608, 1, 1536, 512), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_27, buf6, 524288, 9, grid=grid(524288, 9), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf1, buf0, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 32, 64, 64), (131072, 1, 2048, 32))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 32, 64, 64), (131072, 1, 2048, 32), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7.run(buf9, buf7, primals_3, primals_4, primals_5, primals_6, 524288, grid=grid(524288), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, buf2, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 64, 32, 32), (65536, 1, 2048, 64))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 64, 32, 32), (65536, 1, 2048, 64), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, input_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8.run(buf12, buf10, primals_8, primals_9, primals_10, primals_11, 262144, grid=grid(262144), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.convolution]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, buf3, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 128, 16, 16), (32768, 1, 2048, 128))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf14; del buf14  # reuse
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10, input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9.run(buf15, buf13, primals_13, primals_14, primals_15, primals_16, 131072, grid=grid(131072), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.convolution]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, buf4, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 256, 8, 8), (16384, 1, 2048, 256))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 256, 8, 8), (16384, 1, 2048, 256), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17; del buf17  # reuse
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14, input_15, input_16, input_17, input_18, input_19, input_20, input_21, input_22, input_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10.run(buf18, buf16, primals_18, primals_19, primals_20, primals_21, 65536, grid=grid(65536), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_24], Original ATen: [aten.convolution]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf18, buf5, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 512, 4, 4), (8192, 1, 2048, 512))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 512, 4, 4), (8192, 1, 2048, 512), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf20; del buf20  # reuse
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_25, input_26, input_27, input_28, input_29, input_30, input_31, input_32, input_33, input_34], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11.run(buf21, buf19, primals_23, primals_24, primals_25, primals_26, 32768, grid=grid(32768), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_35], Original ATen: [aten.convolution]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, buf6, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 1024, 2, 2), (4096, 1, 2048, 1024))
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 1024, 2, 2), (4096, 1, 2048, 1024), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_36], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_12.run(buf22, primals_28, primals_29, primals_30, primals_31, buf23, 16384, grid=grid(16384), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 1024, 1, 1), (1024, 1, 1, 1), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_37, input_38, input_39, input_40, input_41, out], Original ATen: [aten.leaky_relu, aten.relu, aten.mean]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_mean_relu_13.run(buf23, buf24, 4096, grid=grid(4096), stream=stream0)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf23
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.addmm]
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_33, reinterpret_tensor(buf24, (4, 1024), (1024, 1), 0), reinterpret_tensor(primals_32, (1024, 4), (1, 1024), 0), alpha=1, beta=1, out=buf25)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf25, buf0, buf1, primals_3, primals_4, primals_5, primals_6, buf2, primals_8, primals_9, primals_10, primals_11, buf3, primals_13, primals_14, primals_15, primals_16, buf4, primals_18, primals_19, primals_20, primals_21, buf5, primals_23, primals_24, primals_25, primals_26, buf6, primals_28, primals_29, primals_30, primals_31, buf7, buf9, buf10, buf12, buf13, buf15, buf16, buf18, buf19, buf21, buf22, reinterpret_tensor(buf24, (4, 1024), (1024, 1), 0), primals_32, )
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((32, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((128, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((256, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((512, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((1024, 512, 3, 3), (4608, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33])
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:57:47.546000 2280932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:47.574000 2280932 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/mt/cmtxqdmd3ut6kj2jh46eepsax52bcxf4b2lojgysw7zhjj6pzkfe.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ks/cksa7rovu3ro7bt4vrd6ghsjths23wrsv7asy7t26bbd7ihalfqw.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 128, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 96
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 27*y1), tmp0, xmask & ymask)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f3/cf3yvvrx2dp4pn5dwcyzm6qhg7y76yekqxcww4ry23bgzk3jew7k.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp0, ymask)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/h6/ch6idif7qwul5cpmntwlb6pzuk7uvdh5cx5qbyj7c3k72t6saeli.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 2048
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 32
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 32*x2 + 288*y1), tmp0, xmask)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z5/cz5lcpzem5jshoxsyxcxgxhiha6q7ktzqnt2hpqcbwodal3x5j3j.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_3 = async_compile.triton('triton_poi_fused_3', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 8192, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 8192
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 576*y1), tmp0, xmask)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/l6/cl6giekbizdbnf3zd5gwfgrns5u4drugr2lvufwr3ipnzsmtpimy.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_4 = async_compile.triton('triton_poi_fused_4', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32768, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32768
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/n4/cn4qbmztxrtdjckkhya25vms3xu5rvrlec42b5y5ojopl6ngwgh7.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_5 = async_compile.triton('triton_poi_fused_5', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 131072
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4g/c4gzvkyepx3rappomuisjehfkptoui4ssyogeeec6yowrbw7kavn.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_6 = async_compile.triton('triton_poi_fused_6', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 524288, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_6(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 524288
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 512)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 512
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 512*x2 + 4608*y1), tmp0, xmask & ymask)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ls/clsisquf4ouv7kmzyh4jjncnoafrw6j6tbmfvfhipzbmsmln2bk2.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1, mul_2, sub
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt, mul_3, where
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_1, 0), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.01), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_1, %mul_3), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/be/cbe7onc6y3lqnfzkxzsrnza3r2orazaxgve3ngets2eunnexhhqf.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, input_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_3, mul_5, mul_6, sub_1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_1, mul_7, where_1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => relu
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze_13), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_15), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_3, 0), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, 0.01), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %add_3, %mul_7), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%where_1,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp22, None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lq/clqnqxgn4lhxrhfc7fhedua4rechu3zew6nz2cumkyw3lb7do645.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, input_10, input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => gt_2, mul_11, where_2
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => relu_1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => relu_2
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_5, mul_10, mul_9, sub_2
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_9, %unsqueeze_21), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_10, %unsqueeze_23), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_5, 0), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_5, 0.01), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %add_5, %mul_11), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%where_2,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%relu_1,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 131072
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp21, tmp22)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp23, None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7k/c7kjhmtvkyxalbkhwum5vhe6mtlb26lehkaowf4vv7n2iqxnkvm3.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_14, input_15, input_16, input_17, input_18, input_19, input_20, input_21, input_22, input_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_14 => add_7, mul_13, mul_14, sub_3
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => gt_3, mul_15, where_3
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_16 => relu_3
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_17 => relu_4
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => relu_5
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_19 => relu_6
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_20 => relu_7
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_21 => relu_8
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_22 => relu_9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_23 => relu_10
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_29), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_31), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_7, 0), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, 0.01), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %add_7, %mul_15), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%where_3,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_3,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_4,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_6 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_5,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_7 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_6,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_7,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_9 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_8,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_10 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%relu_9,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp21, tmp22)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp21, tmp23)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp21, tmp24)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp21, tmp25)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp21, tmp26)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp21, tmp27)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.maximum(tmp21, tmp28)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp29, None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pw/cpwukgdbx5fpcf5oud6w7pm2qgmq53lxks2onsz2cy3jf76r6nra.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_25, input_26, input_27, input_28, input_29, input_30, input_31, input_32, input_33, input_34], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_25 => add_9, mul_17, mul_18, sub_4
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_26 => gt_4, mul_19, where_4
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_27 => relu_11
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_28 => relu_12
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_29 => relu_13
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_30 => relu_14
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_31 => relu_15
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_32 => relu_16
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_33 => relu_17
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_34 => relu_18
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, %unsqueeze_37), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %unsqueeze_39), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_9, 0), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_9, 0.01), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_4 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %add_9, %mul_19), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_11 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%where_4,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_12 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_11,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_13 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_12,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_14 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_13,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_15 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_14,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_16 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_15,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_17 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_16,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_18 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%relu_17,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 512)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.01
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp21, tmp22)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp21, tmp23)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp21, tmp24)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp21, tmp25)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp21, tmp26)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp21, tmp27)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.maximum(tmp21, tmp28)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp29, None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ss/cssofggazege2tfsc64f6lfdco6brmj5lfnejd4nuqq6q4pqkbyr.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_36], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_36 => add_11, mul_21, mul_22, sub_5
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_43), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_21, %unsqueeze_45), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_22, %unsqueeze_47), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_12', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 1024)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_37, input_38, input_39, input_40, input_41, out], Original ATen: [aten.leaky_relu, aten.relu, aten.mean]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_37 => gt_5, mul_23, where_5
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_38 => relu_19
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_39 => relu_20
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_40 => relu_21
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_41 => relu_22
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => mean
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_5 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_11, 0), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_11, 0.01), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_5, %add_11, %mul_23), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_19 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%where_5,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_20 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_19,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_21 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_20,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_22 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%relu_21,), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%relu_22, [-1, -2], True), kwargs = {})
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_mean_relu_13 = async_compile.triton('triton_poi_fused_leaky_relu_mean_relu_13', '''
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_mean_relu_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_mean_relu_13(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 1024)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 1024
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4096*x1), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1024 + x0 + 4096*x1), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (2048 + x0 + 4096*x1), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (3072 + x0 + 4096*x1), None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.01
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 0, tl.int32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp6, tmp5)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp6, tmp8)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp6, tmp9)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 > tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp3
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp12, tmp11, tmp13)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp6, tmp14)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp6, tmp15)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp6, tmp16)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp6, tmp17)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 + tmp18
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 > tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp3
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp21, tmp20, tmp22)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp6, tmp23)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp6, tmp24)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp6, tmp25)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp6, tmp26)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp19 + tmp27
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 > tmp1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp3
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp29, tmp31)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.maximum(tmp6, tmp32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = triton_helpers.maximum(tmp6, tmp33)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.maximum(tmp6, tmp34)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp6, tmp35)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp28 + tmp36
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 4.0
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 / tmp38
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp39, None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33 = args
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (32, 3, 3, 3), (27, 9, 3, 1))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (32, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (32, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, 32, 3, 3), (288, 9, 3, 1))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (128, 64, 3, 3), (576, 9, 3, 1))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (128, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (128, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (128, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (128, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (256, 128, 3, 3), (1152, 9, 3, 1))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (256, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (256, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (256, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (256, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (512, 256, 3, 3), (2304, 9, 3, 1))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (512, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (512, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (512, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (512, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (1024, 512, 3, 3), (4608, 9, 3, 1))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (1024, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (1024, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (1024, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (1024, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, 1024), (1024, 1))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((32, 3, 3, 3), (27, 1, 9, 3), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 96, 9, grid=grid(96, 9), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_2, buf1, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 32, 3, 3), (288, 1, 96, 32), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_7, buf2, 2048, 9, grid=grid(2048, 9), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((128, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_3.run(primals_12, buf3, 8192, 9, grid=grid(8192, 9), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((256, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_17, buf4, 32768, 9, grid=grid(32768, 9), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((512, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_5.run(primals_22, buf5, 131072, 9, grid=grid(131072, 9), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1024, 512, 3, 3), (4608, 1, 1536, 512), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_27, buf6, 524288, 9, grid=grid(524288, 9), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf1, buf0, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 32, 64, 64), (131072, 1, 2048, 32))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 32, 64, 64), (131072, 1, 2048, 32), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7.run(buf9, buf7, primals_3, primals_4, primals_5, primals_6, 524288, grid=grid(524288), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, buf2, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 64, 32, 32), (65536, 1, 2048, 64))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 64, 32, 32), (65536, 1, 2048, 64), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, input_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_8.run(buf12, buf10, primals_8, primals_9, primals_10, primals_11, 262144, grid=grid(262144), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.convolution]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, buf3, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 128, 16, 16), (32768, 1, 2048, 128))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf14; del buf14  # reuse
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10, input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_9.run(buf15, buf13, primals_13, primals_14, primals_15, primals_16, 131072, grid=grid(131072), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.convolution]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, buf4, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 256, 8, 8), (16384, 1, 2048, 256))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 256, 8, 8), (16384, 1, 2048, 256), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17; del buf17  # reuse
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14, input_15, input_16, input_17, input_18, input_19, input_20, input_21, input_22, input_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_10.run(buf18, buf16, primals_18, primals_19, primals_20, primals_21, 65536, grid=grid(65536), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_24], Original ATen: [aten.convolution]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf18, buf5, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 512, 4, 4), (8192, 1, 2048, 512))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 512, 4, 4), (8192, 1, 2048, 512), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf20; del buf20  # reuse
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_25, input_26, input_27, input_28, input_29, input_30, input_31, input_32, input_33, input_34], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu, aten.relu]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_relu_11.run(buf21, buf19, primals_23, primals_24, primals_25, primals_26, 32768, grid=grid(32768), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_35], Original ATen: [aten.convolution]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, buf6, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 1024, 2, 2), (4096, 1, 2048, 1024))
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 1024, 2, 2), (4096, 1, 2048, 1024), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_36], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_12.run(buf22, primals_28, primals_29, primals_30, primals_31, buf23, 16384, grid=grid(16384), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 1024, 1, 1), (1024, 1, 1, 1), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_37, input_38, input_39, input_40, input_41, out], Original ATen: [aten.leaky_relu, aten.relu, aten.mean]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_mean_relu_13.run(buf23, buf24, 4096, grid=grid(4096), stream=stream0)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf23
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.addmm]
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_33, reinterpret_tensor(buf24, (4, 1024), (1024, 1), 0), reinterpret_tensor(primals_32, (1024, 4), (1, 1024), 0), alpha=1, beta=1, out=buf25)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf25, buf0, buf1, primals_3, primals_4, primals_5, primals_6, buf2, primals_8, primals_9, primals_10, primals_11, buf3, primals_13, primals_14, primals_15, primals_16, buf4, primals_18, primals_19, primals_20, primals_21, buf5, primals_23, primals_24, primals_25, primals_26, buf6, primals_28, primals_29, primals_30, primals_31, buf7, buf9, buf10, buf12, buf13, buf15, buf16, buf18, buf19, buf21, buf22, reinterpret_tensor(buf24, (4, 1024), (1024, 1), 0), primals_32, )
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((32, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((128, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((256, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((512, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((1024, 512, 3, 3), (4608, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33])
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:47:05.321000 3826149 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:05.341000 3826149 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/3i/c3i2kmxlqwxsg4mfpvo6w6kr3qqlwbam32axpvmp3abzi2wmcewa.py
