W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break from `Tensor.item()`, consider setting:
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     torch._dynamo.config.capture_scalar_outputs = True
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] or:
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] to include these operations in the captured graph.
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break: from user code at:
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_cedias_Hierarchical_Sentiment.py", line 95, in forward
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     out = self._masked_softmax(att, len_s).unsqueeze(-1)
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_cedias_Hierarchical_Sentiment.py", line 100, in _masked_softmax
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     idxes = torch.arange(0, int(len_s[0]), out=mat.data.new(int(len_s[0])).long()).unsqueeze(1)
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0204 15:20:58.773000 1453882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['0_forward']
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_1, primals_2 = args
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_1, (1, 4), (4, 1))
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.mm]
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(primals_2, reinterpret_tensor(primals_1, (4, 1), (1, 4), 0), out=buf0)
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_1
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (reinterpret_tensor(buf0, (4, ), (1, ), 0), primals_2, )
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_1 = rand_strided((1, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:20:59.697000 1453882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:20:59.704000 1453882 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sh/cshrkimtotutj6c7iiopbi6ijzhiixtpimhra753kta5zvahlr5a.py
I0204 15:20:59.711000 1453882 site-packages/torch/_inductor/graph.py:2087] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sh/cshrkimtotutj6c7iiopbi6ijzhiixtpimhra753kta5zvahlr5a.py
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] Output code: 
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # AOT ID: ['1_inference']
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import torch
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import math
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import random
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import os
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import tempfile
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from math import inf, nan
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch import device, empty_strided
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] aten = torch.ops.aten
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile = AsyncCompile()
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile.wait(globals())
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] del async_compile
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def call(args):
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg0_1, arg1_1 = args
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     args.clear()
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(arg0_1, (4, ), (1, ))
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return (reinterpret_tensor(arg0_1, (), (), 0), arg0_1, )
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg0_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] if __name__ == "__main__":
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:20:59.822000 1453882 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 15:20:59.823000 1453882 site-packages/torch/_inductor/graph.py:2053] [1/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/nz/cnzb2zfjda4b2cram55n47ynljnwfcihgx4gvlltpbaxfvfjvkjz.py
I0204 15:20:59.824000 1453882 site-packages/torch/_inductor/graph.py:2087] [1/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/nz/cnzb2zfjda4b2cram55n47ynljnwfcihgx4gvlltpbaxfvfjvkjz.py
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] Output code: 
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] # AOT ID: ['2_inference']
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import torch
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import math
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import random
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import os
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import tempfile
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from math import inf, nan
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch import device, empty_strided
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] aten = torch.ops.aten
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] async_compile = AsyncCompile()
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] async_compile.wait(globals())
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] del async_compile
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] def call(args):
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     arg0_1, arg1_1 = args
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     args.clear()
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     assert_size_stride(arg0_1, (4, ), (1, ))
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     return (reinterpret_tensor(arg1_1, (), (), 0), )
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     arg0_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] if __name__ == "__main__":
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:20:59.860000 1453882 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:20:59.861000 1453882 site-packages/torch/_inductor/graph.py:2053] [2/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/my/cmylzwljnvilvllxsy5zardk7wdow4jsq2qg457m4i6me6wdzhep.py
I0204 15:20:59.862000 1453882 site-packages/torch/_inductor/graph.py:2087] [2/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/my/cmylzwljnvilvllxsy5zardk7wdow4jsq2qg457m4i6me6wdzhep.py
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] Output code: 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # AOT ID: ['3_forward']
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import torch
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import math
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import random
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import os
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import tempfile
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from math import inf, nan
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch import device, empty_strided
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     grid,
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     split_scan_grid,
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     grid_combo_kernels,
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     start_graph,
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     end_graph,
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     cooperative_reduction_grid,
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] aten = torch.ops.aten
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] async_compile = AsyncCompile()
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tz/ctzqfrymvi2n66mmypyscocpwryxzotmgs5t5on6urcevafh3sh2.py
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [exp, exp_1, sum_1, sum_exp], Original ATen: [aten.exp, aten.mul, aten.sum, aten.add]
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   exp => exp
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   exp_1 => mul
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   sum_1 => sum_1
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   sum_exp => add
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%primals_3,), kwargs = {})
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %mul : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%exp, %convert_element_type_2), kwargs = {})
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [0], True), kwargs = {})
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 0.0001), kwargs = {})
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_add_exp_mul_sum_0 = async_compile.triton('triton_poi_fused_add_exp_mul_sum_0', '''
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_exp_mul_sum_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_add_exp_mul_sum_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 4
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = xindex < xnumel
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     x0 = xindex
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = 0.0001
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] async_compile.wait(globals())
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] del async_compile
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def call(args):
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     args.clear()
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf0 = empty_strided_cuda((0, 4), (4, 1), torch.float32)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf1 = empty_strided_cuda((1, 4), (4, 1), torch.float32)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [exp, exp_1, sum_1, sum_exp], Original ATen: [aten.exp, aten.mul, aten.sum, aten.add]
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_add_exp_mul_sum_0.run(buf1, 4, grid=grid(4), stream=stream0)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf2 = empty_strided_cuda((0, 4), (4, 1), torch.float32)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf3 = empty_strided_cuda((0, 4), (4, 1), torch.float32)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     return (buf2, primals_3, buf0, reinterpret_tensor(buf1, (0, 4), (0, 1), 0), buf3, )
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     primals_1 = rand_strided((0, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] if __name__ == "__main__":
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:21:00.000000 1453882 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 15:21:00.001000 1453882 site-packages/torch/_inductor/graph.py:2053] [4/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/7w/c7w2c47blbdpdbm4hqdt6gs2bre4z6a34ho2uw57gn64qc7wospb.py
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break from `Tensor.item()`, consider setting:
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     torch._dynamo.config.capture_scalar_outputs = True
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] or:
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] to include these operations in the captured graph.
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break: from user code at:
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_cedias_Hierarchical_Sentiment.py", line 95, in forward
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     out = self._masked_softmax(att, len_s).unsqueeze(-1)
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_cedias_Hierarchical_Sentiment.py", line 100, in _masked_softmax
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     idxes = torch.arange(0, int(len_s[0]), out=mat.data.new(int(len_s[0])).long()).unsqueeze(1)
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0205 20:10:43.201000 2853082 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['0_forward']
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_1, primals_2 = args
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_1, (1, 4), (4, 1))
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.mm]
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(primals_2, reinterpret_tensor(primals_1, (4, 1), (1, 4), 0), out=buf0)
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_1
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (reinterpret_tensor(buf0, (4, ), (1, ), 0), primals_2, )
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_1 = rand_strided((1, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:10:44.181000 2853082 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:10:44.189000 2853082 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: inductor_cache/sh/cshrkimtotutj6c7iiopbi6ijzhiixtpimhra753kta5zvahlr5a.py
I0205 20:10:44.195000 2853082 site-packages/torch/_inductor/graph.py:2087] [0/0_1] [__output_code] Output code written to: inductor_cache/sh/cshrkimtotutj6c7iiopbi6ijzhiixtpimhra753kta5zvahlr5a.py
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] Output code: 
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # AOT ID: ['1_inference']
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import torch
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import math
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import random
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import os
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import tempfile
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from math import inf, nan
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch import device, empty_strided
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] aten = torch.ops.aten
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile = AsyncCompile()
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile.wait(globals())
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] del async_compile
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def call(args):
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg0_1, arg1_1 = args
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     args.clear()
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(arg0_1, (4, ), (1, ))
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return (reinterpret_tensor(arg0_1, (), (), 0), arg0_1, )
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg0_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] if __name__ == "__main__":
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:10:44.440000 2853082 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 20:10:44.441000 2853082 site-packages/torch/_inductor/graph.py:2053] [1/0_1] [__output_code] Output code written to: inductor_cache/nz/cnzb2zfjda4b2cram55n47ynljnwfcihgx4gvlltpbaxfvfjvkjz.py
I0205 20:10:44.442000 2853082 site-packages/torch/_inductor/graph.py:2087] [1/0_1] [__output_code] Output code written to: inductor_cache/nz/cnzb2zfjda4b2cram55n47ynljnwfcihgx4gvlltpbaxfvfjvkjz.py
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] Output code: 
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] # AOT ID: ['2_inference']
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import torch
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import math
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import random
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import os
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import tempfile
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from math import inf, nan
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch import device, empty_strided
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] aten = torch.ops.aten
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] async_compile = AsyncCompile()
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] async_compile.wait(globals())
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] del async_compile
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] def call(args):
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     arg0_1, arg1_1 = args
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     args.clear()
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     assert_size_stride(arg0_1, (4, ), (1, ))
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     return (reinterpret_tensor(arg1_1, (), (), 0), )
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     arg0_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] if __name__ == "__main__":
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:10:44.481000 2853082 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 20:10:44.482000 2853082 site-packages/torch/_inductor/graph.py:2053] [2/0_1] [__output_code] Output code written to: inductor_cache/my/cmylzwljnvilvllxsy5zardk7wdow4jsq2qg457m4i6me6wdzhep.py
I0205 20:10:44.483000 2853082 site-packages/torch/_inductor/graph.py:2087] [2/0_1] [__output_code] Output code written to: inductor_cache/my/cmylzwljnvilvllxsy5zardk7wdow4jsq2qg457m4i6me6wdzhep.py
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] Output code: 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # AOT ID: ['3_forward']
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import torch
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import math
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import random
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import os
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import tempfile
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from math import inf, nan
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch import device, empty_strided
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     grid,
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     split_scan_grid,
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     grid_combo_kernels,
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     start_graph,
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     end_graph,
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     cooperative_reduction_grid,
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] aten = torch.ops.aten
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] async_compile = AsyncCompile()
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: inductor_cache/tz/ctzqfrymvi2n66mmypyscocpwryxzotmgs5t5on6urcevafh3sh2.py
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [exp, exp_1, sum_1, sum_exp], Original ATen: [aten.exp, aten.mul, aten.sum, aten.add]
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   exp => exp
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   exp_1 => mul
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   sum_1 => sum_1
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   sum_exp => add
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%primals_3,), kwargs = {})
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %mul : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%exp, %convert_element_type_2), kwargs = {})
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [0], True), kwargs = {})
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 0.0001), kwargs = {})
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_add_exp_mul_sum_0 = async_compile.triton('triton_poi_fused_add_exp_mul_sum_0', '''
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 4}, 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_exp_mul_sum_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_add_exp_mul_sum_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 4
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = xindex < xnumel
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     x0 = xindex
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = 0.0001
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] async_compile.wait(globals())
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] del async_compile
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def call(args):
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     args.clear()
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf0 = empty_strided_cuda((0, 4), (4, 1), torch.float32)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf1 = empty_strided_cuda((1, 4), (4, 1), torch.float32)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [exp, exp_1, sum_1, sum_exp], Original ATen: [aten.exp, aten.mul, aten.sum, aten.add]
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_add_exp_mul_sum_0.run(buf1, 4, grid=grid(4), stream=stream0)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf2 = empty_strided_cuda((0, 4), (4, 1), torch.float32)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf3 = empty_strided_cuda((0, 4), (4, 1), torch.float32)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     return (buf2, primals_3, buf0, reinterpret_tensor(buf1, (0, 4), (0, 1), 0), buf3, )
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     primals_1 = rand_strided((0, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] if __name__ == "__main__":
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:10:44.628000 2853082 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 20:10:44.630000 2853082 site-packages/torch/_inductor/graph.py:2053] [4/0] [__output_code] Output code written to: inductor_cache/yq/cyqd2ojclfsygej6pt3hdrpciwa4dlgsvaglwj7tx3ulrkncqpzu.py
