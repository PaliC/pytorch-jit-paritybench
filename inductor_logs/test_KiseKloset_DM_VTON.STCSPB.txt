V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['117_forward']
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wd/cwdpewesmfchk22rftrl43q6oa3mugmejuipb42ihxlo4sdyrvrq.py
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm, x1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_1, mul_1, mul_2, sub
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x1 => mul_3, sigmoid
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_1,), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, %sigmoid), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_silu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_silu_0', '''
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_silu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_silu_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp17, xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7p/c7pnry76xoj425lirfkoovxoob536gmjjjqau2u4hjsll63jtjr4.py
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => constant_pad_nd
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%mul_3, [0, 4, 0, 4], 0.0), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_constant_pad_nd_1 = async_compile.triton('triton_poi_fused_constant_pad_nd_1', '''
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_constant_pad_nd_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 8)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 4, tl.int64)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = x0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 < tmp1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (x0 + 4*x1 + 16*x2), tmp5, other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp6, None)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vs/cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.native_layer_norm]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => add_2, add_3, mul_4, mul_5, rsqrt, sub_1, var_mean
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2]), kwargs = {correction: 0, keepdim: True})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_2,), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %primals_7), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %primals_8), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_native_layer_norm_2 = async_compile.triton('triton_per_fused_native_layer_norm_2', '''
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 32},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_layer_norm_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_native_layer_norm_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 32
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*r2 + 2048*x1), xmask, other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (r2), None, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr2 + (r2), None, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 32, tl.int32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp10
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 32.0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 / tmp17
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1e-05
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 - tmp10
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp21
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp21, xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r2 + 32*x3), tmp27, xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/el/celbzevhz7avhaurytw3seeesuojmjb6bem4kbtnoyxcr3djuyai.py
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [q_1], Original ATen: [aten.mul]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   q_1 => mul_6
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, 0.1767766952966369), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_3 = async_compile.triton('triton_poi_fused_mul_3', '''
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 32
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 96*x1), None)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.1767766952966369
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, None)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_1, attn_2], Original ATen: [aten.add, aten._softmax]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_1 => add_4
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_2 => amax, div, exp, sub_2, sum_1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_10, %unsqueeze_8), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_4, [-1], True), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %amax), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_add_4 = async_compile.triton('triton_per_fused__softmax_add_4', '''
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 64},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_add_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_add_4(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r2 + 64*x3), xmask, other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r2 + 64*x0), xmask, eviction_policy='evict_last', other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([XBLOCK, RBLOCK], 225, tl.int32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 < 0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp4, tmp3, tmp1)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp5) & (tmp5 < 225)) | ~(xmask), "index out of bounds: 0 <= tmp5 < 225")
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (tmp5), xmask, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 + tmp7
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(xmask, tmp9, float("-inf"))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.max2(tmp11, 1)[:, None]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 - tmp12
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK, RBLOCK])
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(xmask, tmp15, 0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.sum(tmp17, 1)[:, None]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp14 / tmp18
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r2 + 64*x3), tmp19, xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_11, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm, aten.native_layer_norm_backward]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm_1 => add_6, add_7, mul_7, mul_8, rsqrt_1, sub_3, var_mean_1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_11 => add_5
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view, %view_22), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%add_5, [2]), kwargs = {correction: 0, keepdim: True})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_6,), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %getitem_3), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %rsqrt_1), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %primals_15), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %primals_16), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%rsqrt_1, 32), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5 = async_compile.triton('triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5', '''
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 32},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr2, out_ptr3, out_ptr4, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 32
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*r2 + 2048*x1), xmask, other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r2 + 32*x3), xmask, other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r2), None, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr3 + (r2), None, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr4 + (r2), None, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK, RBLOCK])
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(xmask, tmp5, 0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp5, [XBLOCK, RBLOCK])
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(xmask, tmp8, 0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.sum(tmp10, 1)[:, None]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([XBLOCK, 1], 32, tl.int32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 / tmp13
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp5 - tmp14
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp15
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.broadcast_to(tmp16, [XBLOCK, RBLOCK])
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(xmask, tmp17, 0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sum(tmp19, 1)[:, None]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp4 - tmp14
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 32.0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 / tmp22
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1e-05
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.rsqrt(tmp25)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp21 * tmp26
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 0.03125
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp26 * tmp32
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r2 + 32*x3), tmp27, xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (r2 + 32*x3), tmp31, xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (x3), tmp33, xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nr/cnr2cmw6w3wecjpvkj6frxbrfbxlkjopsw6hbajwcxdlbxsofvxq.py
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_13], Original ATen: [aten.silu]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_13 => mul_9, sigmoid_1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%view_24,), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_24, %sigmoid_1), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_silu_6 = async_compile.triton('triton_poi_fused_silu_6', '''
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_silu_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_silu_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, None)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/74/c74ol5jacicsjyneu2hrj5oulqlvstiuhajzw45l4uuihvfswal4.py
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_1], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_1 => add_10, mul_11, mul_12, sub_4
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_10), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_12), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_11, %unsqueeze_14), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %unsqueeze_16), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_7', '''
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%slice_4, %mul_13], 1), kwargs = {})
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_8 = async_compile.triton('triton_poi_fused_cat_8', '''
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 64)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 1024
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 32, tl.int64)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 8*x1 + 64*(x2) + 2048*x3), tmp4, other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (32*x0 + 256*x1 + 2048*x3 + (x2)), tmp4, eviction_policy='evict_last', other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x2), tmp4, eviction_policy='evict_last', other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (32*x0 + 256*x1 + 2048*x3 + (x2)), tmp4, eviction_policy='evict_last', other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr4 + (x2), tmp4, eviction_policy='evict_last', other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 + tmp12
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.full(tmp13.shape, 0.0, tmp13.dtype)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp4, tmp13, tmp14)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 >= tmp3
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 64, tl.int64)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp0 < tmp17
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x4 + 16*((-32) + x2) + 512*x3), tmp16, other=0.0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp16, tmp21, tmp22)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp4, tmp15, tmp23)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp24, None)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30 = args
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (32, 4, 1, 1), (4, 1, 1, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (96, 32), (32, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (96, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (225, 1), (1, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, 64), (64, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (32, 32), (32, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (128, 32), (32, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (128, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (32, 128), (128, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (32, 32, 1, 1), (32, 1, 1, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (32, 64, 1, 1), (64, 1, 1, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (32, ), (1, ))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm, x1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_0.run(buf2, buf0, primals_3, primals_4, primals_5, primals_6, 2048, grid=grid(2048), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 32, 8, 8), (2048, 64, 8, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_constant_pad_nd_1.run(buf2, buf3, 8192, grid=grid(8192), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 64, 1), (64, 1, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 64, 1), (64, 1, 256), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf5, (4, 64, 1), (64, 1, 1), 0); del buf5  # reuse
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 64, 32), (2048, 32, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.native_layer_norm]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_native_layer_norm_2.run(buf7, buf3, primals_7, primals_8, buf4, buf8, 256, 32, grid=grid(256), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((256, 96), (96, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_10, reinterpret_tensor(buf8, (256, 32), (32, 1), 0), reinterpret_tensor(primals_9, (32, 96), (1, 32), 0), alpha=1, beta=1, out=buf9)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 1, 64, 32), (2048, 1, 32, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [q_1], Original ATen: [aten.mul]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_3.run(buf9, buf10, 8192, grid=grid(8192), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 64, 64), (4096, 64, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn], Original ATen: [aten.bmm]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf10, (4, 64, 32), (2048, 32, 1), 0), reinterpret_tensor(buf9, (4, 32, 64), (6144, 1, 96), 32), out=buf11)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf11, (4, 1, 64, 64), (4096, 4096, 64, 1), 0); del buf11  # reuse
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_1, attn_2], Original ATen: [aten.add, aten._softmax]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_add_4.run(buf14, primals_12, primals_11, 256, 64, grid=grid(256), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 64, 32), (2048, 32, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.bmm]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf14, (4, 64, 64), (4096, 64, 1), 0), reinterpret_tensor(buf9, (4, 64, 32), (6144, 96, 1), 64), out=buf15)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((256, 32), (32, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.addmm]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf15, (256, 32), (32, 1), 0), reinterpret_tensor(primals_13, (32, 32), (1, 32), 0), out=buf16)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 64, 32), (2048, 32, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 64, 32), (2048, 32, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((4, 64, 1), (64, 1, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_11, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm, aten.native_layer_norm_backward]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5.run(buf3, buf16, primals_14, primals_15, primals_16, buf20, buf21, buf31, 256, 32, grid=grid(256), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((256, 128), (128, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.addmm]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_18, reinterpret_tensor(buf21, (256, 32), (32, 1), 0), reinterpret_tensor(primals_17, (32, 128), (1, 32), 0), alpha=1, beta=1, out=buf22)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_18
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 64, 128), (8192, 128, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_13], Original ATen: [aten.silu]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_silu_6.run(buf22, buf23, 32768, grid=grid(32768), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((256, 32), (32, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_15], Original ATen: [aten.addmm]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf23, (256, 128), (128, 1), 0), reinterpret_tensor(primals_19, (128, 32), (1, 128), 0), out=buf24)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf2, primals_21, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_1], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_7.run(buf25, primals_22, primals_23, primals_24, primals_25, buf26, 2048, grid=grid(2048), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 64, 4, 4), (1024, 16, 4, 1), torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_8.run(buf3, buf16, primals_14, buf24, primals_20, buf26, buf27, 4096, grid=grid(4096), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf24
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_20
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = extern_kernels.convolution(buf27, primals_26, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf28, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = buf26; del buf26  # reuse
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = buf29; del buf29  # reuse
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_2, silu_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_0.run(buf30, buf28, primals_27, primals_28, primals_29, primals_30, 2048, grid=grid(2048), stream=stream0)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf30, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_15, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, buf0, buf2, buf3, buf4, buf7, reinterpret_tensor(buf8, (256, 32), (32, 1), 0), reinterpret_tensor(primals_12, (4096, ), (1, ), 0), buf14, reinterpret_tensor(buf15, (256, 32), (32, 1), 0), buf20, reinterpret_tensor(buf21, (256, 32), (32, 1), 0), buf22, reinterpret_tensor(buf23, (256, 128), (128, 1), 0), buf25, buf27, buf28, primals_19, primals_17, buf31, primals_13, reinterpret_tensor(buf9, (4, 32, 64), (6144, 1, 96), 64), reinterpret_tensor(buf10, (4, 32, 64), (2048, 1, 32), 0), reinterpret_tensor(buf9, (4, 64, 32), (6144, 96, 1), 32), primals_9, )
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((32, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((96, 32), (32, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((96, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((225, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, 64), (64, 1), device='cuda:0', dtype=torch.int64)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((32, 32), (32, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((128, 32), (32, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((32, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((32, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30])
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:19:30.900000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:30.923000 859334 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/yi/cyieiedrzsc3kcglj6qm7n4quuz4a6e7rpbmho5ivvwv67edq2cu.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['117_forward']
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wd/cwdpewesmfchk22rftrl43q6oa3mugmejuipb42ihxlo4sdyrvrq.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm, x1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_1, mul_1, mul_2, sub
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x1 => mul_3, sigmoid
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_1,), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, %sigmoid), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_silu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_silu_0', '''
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_silu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_silu_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp17, xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7p/c7pnry76xoj425lirfkoovxoob536gmjjjqau2u4hjsll63jtjr4.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => constant_pad_nd
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%mul_3, [0, 4, 0, 4], 0.0), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_constant_pad_nd_1 = async_compile.triton('triton_poi_fused_constant_pad_nd_1', '''
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_constant_pad_nd_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 8)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 4, tl.int64)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = x0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 < tmp1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (x0 + 4*x1 + 16*x2), tmp5, other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp6, None)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vs/cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.native_layer_norm]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => add_2, add_3, mul_4, mul_5, rsqrt, sub_1, var_mean
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2]), kwargs = {correction: 0, keepdim: True})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_2,), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %primals_7), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %primals_8), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_native_layer_norm_2 = async_compile.triton('triton_per_fused_native_layer_norm_2', '''
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 32},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_layer_norm_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_native_layer_norm_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 32
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*r2 + 2048*x1), xmask, other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (r2), None, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr2 + (r2), None, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 32, tl.int32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp10
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 32.0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 / tmp17
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1e-05
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 - tmp10
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp21
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp21, xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r2 + 32*x3), tmp27, xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/el/celbzevhz7avhaurytw3seeesuojmjb6bem4kbtnoyxcr3djuyai.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [q_1], Original ATen: [aten.mul]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   q_1 => mul_6
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, 0.1767766952966369), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_3 = async_compile.triton('triton_poi_fused_mul_3', '''
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 32
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 96*x1), None)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.1767766952966369
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, None)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_1, attn_2], Original ATen: [aten.add, aten._softmax]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_1 => add_4
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_2 => amax, div, exp, sub_2, sum_1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_10, %unsqueeze_8), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_4, [-1], True), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %amax), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_add_4 = async_compile.triton('triton_per_fused__softmax_add_4', '''
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 64},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_add_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_add_4(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r2 + 64*x3), xmask, other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r2 + 64*x0), xmask, eviction_policy='evict_last', other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([XBLOCK, RBLOCK], 225, tl.int32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 < 0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp4, tmp3, tmp1)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp5) & (tmp5 < 225)) | ~(xmask), "index out of bounds: 0 <= tmp5 < 225")
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (tmp5), xmask, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 + tmp7
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(xmask, tmp9, float("-inf"))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.max2(tmp11, 1)[:, None]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 - tmp12
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK, RBLOCK])
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(xmask, tmp15, 0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.sum(tmp17, 1)[:, None]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp14 / tmp18
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r2 + 64*x3), tmp19, xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_11, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm, aten.native_layer_norm_backward]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm_1 => add_6, add_7, mul_7, mul_8, rsqrt_1, sub_3, var_mean_1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_11 => add_5
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view, %view_22), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%add_5, [2]), kwargs = {correction: 0, keepdim: True})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_6,), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %getitem_3), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %rsqrt_1), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %primals_15), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %primals_16), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%rsqrt_1, 32), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5 = async_compile.triton('triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5', '''
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 32},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr2, out_ptr3, out_ptr4, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 32
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*r2 + 2048*x1), xmask, other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r2 + 32*x3), xmask, other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r2), None, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr3 + (r2), None, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr4 + (r2), None, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK, RBLOCK])
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(xmask, tmp5, 0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp5, [XBLOCK, RBLOCK])
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(xmask, tmp8, 0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.sum(tmp10, 1)[:, None]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([XBLOCK, 1], 32, tl.int32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 / tmp13
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp5 - tmp14
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp15
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.broadcast_to(tmp16, [XBLOCK, RBLOCK])
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(xmask, tmp17, 0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sum(tmp19, 1)[:, None]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp4 - tmp14
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 32.0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 / tmp22
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1e-05
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.rsqrt(tmp25)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp21 * tmp26
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 0.03125
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp26 * tmp32
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r2 + 32*x3), tmp27, xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (r2 + 32*x3), tmp31, xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (x3), tmp33, xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nr/cnr2cmw6w3wecjpvkj6frxbrfbxlkjopsw6hbajwcxdlbxsofvxq.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_13], Original ATen: [aten.silu]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_13 => mul_9, sigmoid_1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%view_24,), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_24, %sigmoid_1), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_silu_6 = async_compile.triton('triton_poi_fused_silu_6', '''
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_silu_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_silu_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, None)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/74/c74ol5jacicsjyneu2hrj5oulqlvstiuhajzw45l4uuihvfswal4.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_1], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_1 => add_10, mul_11, mul_12, sub_4
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_10), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_12), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_11, %unsqueeze_14), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %unsqueeze_16), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_7', '''
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%slice_4, %mul_13], 1), kwargs = {})
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_8 = async_compile.triton('triton_poi_fused_cat_8', '''
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 64)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 1024
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 32, tl.int64)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 8*x1 + 64*(x2) + 2048*x3), tmp4, other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (32*x0 + 256*x1 + 2048*x3 + (x2)), tmp4, eviction_policy='evict_last', other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x2), tmp4, eviction_policy='evict_last', other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (32*x0 + 256*x1 + 2048*x3 + (x2)), tmp4, eviction_policy='evict_last', other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr4 + (x2), tmp4, eviction_policy='evict_last', other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 + tmp12
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.full(tmp13.shape, 0.0, tmp13.dtype)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp4, tmp13, tmp14)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 >= tmp3
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 64, tl.int64)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp0 < tmp17
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x4 + 16*((-32) + x2) + 512*x3), tmp16, other=0.0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp16, tmp21, tmp22)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp4, tmp15, tmp23)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp24, None)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30 = args
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (32, 4, 1, 1), (4, 1, 1, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (96, 32), (32, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (96, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (225, 1), (1, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, 64), (64, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (32, 32), (32, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (128, 32), (32, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (128, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (32, 128), (128, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (32, 32, 1, 1), (32, 1, 1, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (32, 64, 1, 1), (64, 1, 1, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (32, ), (1, ))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm, x1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_0.run(buf2, buf0, primals_3, primals_4, primals_5, primals_6, 2048, grid=grid(2048), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 32, 8, 8), (2048, 64, 8, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_constant_pad_nd_1.run(buf2, buf3, 8192, grid=grid(8192), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 64, 1), (64, 1, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 64, 1), (64, 1, 256), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf5, (4, 64, 1), (64, 1, 1), 0); del buf5  # reuse
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 64, 32), (2048, 32, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.native_layer_norm]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_native_layer_norm_2.run(buf7, buf3, primals_7, primals_8, buf4, buf8, 256, 32, grid=grid(256), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((256, 96), (96, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_10, reinterpret_tensor(buf8, (256, 32), (32, 1), 0), reinterpret_tensor(primals_9, (32, 96), (1, 32), 0), alpha=1, beta=1, out=buf9)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 1, 64, 32), (2048, 1, 32, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [q_1], Original ATen: [aten.mul]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_3.run(buf9, buf10, 8192, grid=grid(8192), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 64, 64), (4096, 64, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn], Original ATen: [aten.bmm]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf10, (4, 64, 32), (2048, 32, 1), 0), reinterpret_tensor(buf9, (4, 32, 64), (6144, 1, 96), 32), out=buf11)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf11, (4, 1, 64, 64), (4096, 4096, 64, 1), 0); del buf11  # reuse
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_1, attn_2], Original ATen: [aten.add, aten._softmax]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_add_4.run(buf14, primals_12, primals_11, 256, 64, grid=grid(256), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 64, 32), (2048, 32, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.bmm]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf14, (4, 64, 64), (4096, 64, 1), 0), reinterpret_tensor(buf9, (4, 64, 32), (6144, 96, 1), 64), out=buf15)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((256, 32), (32, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.addmm]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf15, (256, 32), (32, 1), 0), reinterpret_tensor(primals_13, (32, 32), (1, 32), 0), out=buf16)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 64, 32), (2048, 32, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 64, 32), (2048, 32, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((4, 64, 1), (64, 1, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_11, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm, aten.native_layer_norm_backward]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5.run(buf3, buf16, primals_14, primals_15, primals_16, buf20, buf21, buf31, 256, 32, grid=grid(256), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((256, 128), (128, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.addmm]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_18, reinterpret_tensor(buf21, (256, 32), (32, 1), 0), reinterpret_tensor(primals_17, (32, 128), (1, 32), 0), alpha=1, beta=1, out=buf22)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_18
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 64, 128), (8192, 128, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_13], Original ATen: [aten.silu]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_silu_6.run(buf22, buf23, 32768, grid=grid(32768), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((256, 32), (32, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_15], Original ATen: [aten.addmm]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf23, (256, 128), (128, 1), 0), reinterpret_tensor(primals_19, (128, 32), (1, 128), 0), out=buf24)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf2, primals_21, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_1], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_7.run(buf25, primals_22, primals_23, primals_24, primals_25, buf26, 2048, grid=grid(2048), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 64, 4, 4), (1024, 16, 4, 1), torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_8.run(buf3, buf16, primals_14, buf24, primals_20, buf26, buf27, 4096, grid=grid(4096), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf24
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_20
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = extern_kernels.convolution(buf27, primals_26, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf28, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = buf26; del buf26  # reuse
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = buf29; del buf29  # reuse
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_2, silu_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_0.run(buf30, buf28, primals_27, primals_28, primals_29, primals_30, 2048, grid=grid(2048), stream=stream0)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf30, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_15, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, buf0, buf2, buf3, buf4, buf7, reinterpret_tensor(buf8, (256, 32), (32, 1), 0), reinterpret_tensor(primals_12, (4096, ), (1, ), 0), buf14, reinterpret_tensor(buf15, (256, 32), (32, 1), 0), buf20, reinterpret_tensor(buf21, (256, 32), (32, 1), 0), buf22, reinterpret_tensor(buf23, (256, 128), (128, 1), 0), buf25, buf27, buf28, primals_19, primals_17, buf31, primals_13, reinterpret_tensor(buf9, (4, 32, 64), (6144, 1, 96), 64), reinterpret_tensor(buf10, (4, 32, 64), (2048, 1, 32), 0), reinterpret_tensor(buf9, (4, 64, 32), (6144, 96, 1), 32), primals_9, )
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((32, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((96, 32), (32, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((96, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((225, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, 64), (64, 1), device='cuda:0', dtype=torch.int64)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((32, 32), (32, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((128, 32), (32, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((32, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((32, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30])
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:09:50.772000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:50.794000 3568094 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/nn/cnn6xvc7rskyxr3mi5vptgzaq5a2kwr6aldhnetofuistveqktjf.py
