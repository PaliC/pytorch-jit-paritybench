V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['29_inference']
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6e/c6ea5mvmqz5zwjzjxmsvwjfyktvjzyybor22yvfyck76hrh5zclv.py
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._adaptive_avg_pool2d]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => _adaptive_avg_pool2d_1
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d_1 : [num_users=4] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [3, 3]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_0 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_0', '''
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 144
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 3) % 3)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 9
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (4*x1) // 3
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 2 + ((4*x1) // 3)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (4*x0) // 3
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2 + ((4*x0) // 3)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp6 & xmask, other=0.0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + ((4*x0) // 3)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp10 & xmask, other=0.0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + ((4*x1) // 3)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp15 & xmask, other=0.0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp18 & xmask, other=0.0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp36, xmask)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3r/c3r73iyk64zkwnlvqrrxoxyunfgub4ofephvjtvnka4urxxkjkma.py
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten._adaptive_avg_pool2d]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => _adaptive_avg_pool2d_2
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d_2 : [num_users=4] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [6, 6]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_1 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_1', '''
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (2*x1) // 3
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = (9 + 4*x1) // 6
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (2*x0) // 3
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = (9 + 4*x0) // 6
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + ((2*x0) // 3)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp10 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + ((2*x1) // 3)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp36, xmask)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/k2/ck2iwrxsxkr35k7u6k3sdvtgrwxlpoy4q6b6qemwmrciu4cfx6hf.py
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, feat, x_2, x_3, feat_1, x_5, feat_2, x_7, feat_3], Original ATen: [aten.mean, aten._to_copy, aten.arange, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add, aten._adaptive_avg_pool2d]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat => add_5
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_1 => add_11
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_2 => add_17
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_3 => add_23
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => mean
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_2, add_3, add_4, clamp_max_2, clamp_max_3, clamp_min_1, clamp_min_2, clamp_min_3, convert_element_type_1, convert_element_type_2, convert_element_type_3, iota_1, mul_1, mul_2, mul_3, mul_4, sub, sub_1, sub_2, sub_3, sub_4
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => _adaptive_avg_pool2d
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_10, add_8, add_9, clamp_max_6, clamp_max_7, clamp_min_5, clamp_min_6, clamp_min_7, convert_element_type_5, convert_element_type_6, convert_element_type_7, iota_3, mul_6, mul_7, mul_8, mul_9, sub_5, sub_6, sub_7, sub_8, sub_9
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => _unsafe_index_10, _unsafe_index_11, _unsafe_index_8, _unsafe_index_9, add_14, add_15, add_16, clamp_max_10, clamp_max_11, clamp_min_10, clamp_min_11, clamp_min_9, convert_element_type_10, convert_element_type_11, convert_element_type_9, iota_5, mul_11, mul_12, mul_13, mul_14, sub_10, sub_11, sub_12, sub_13, sub_14
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => _unsafe_index_12, _unsafe_index_13, _unsafe_index_14, _unsafe_index_15, add_20, add_21, add_22, clamp_max_14, clamp_max_15, clamp_min_13, clamp_min_14, clamp_min_15, convert_element_type_13, convert_element_type_14, convert_element_type_15, iota_7, mul_16, mul_17, mul_18, mul_19, sub_15, sub_16, sub_17, sub_18, sub_19
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=4] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [-1, -2], True), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_1, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_1, torch.int64), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_1, %convert_element_type_3), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %clamp_max_2), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_3), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %add_2), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_3, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_3), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_4), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg0_1, %add_4), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d : [num_users=4] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [2, 2]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_5 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_3 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_6 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_3, torch.float32), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_6, 0.3333333333333333), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_5 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_6, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_7 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_5, torch.int64), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d, [None, None, %clamp_max_4, %clamp_max_5]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d, [None, None, %clamp_max_4, %convert_element_type_7]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_5, %convert_element_type_7), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_6 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_6 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_6, 1.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %clamp_max_6), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_8), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_6), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_7), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %add_8), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %convert_element_type_5), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_7 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_8, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_7 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_7, 1.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %clamp_max_7), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_8, %mul_9), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %add_10), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_9 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_4, torch.int64), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_5 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_10 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_5, torch.float32), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_10, 0.6666666666666666), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_9 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_11, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_11 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_9, torch.int64), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_11 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_1, [None, None, %clamp_max_8, %clamp_max_9]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_10 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_1, [None, None, %clamp_max_8, %convert_element_type_11]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_11, %_unsafe_index_10), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_9, %convert_element_type_11), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_10 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_10, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_10 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_10, 1.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %clamp_max_10), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_10, %mul_13), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_9 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_1, [None, None, %convert_element_type_9, %clamp_max_9]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_8 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_1, [None, None, %convert_element_type_9, %convert_element_type_11]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_9, %_unsafe_index_8), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_10), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_8, %mul_12), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_14 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_15, %add_14), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %convert_element_type_9), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_11 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_13, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_11 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_11, 1.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_14, %clamp_max_11), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_14, %mul_14), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %add_16), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_13 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_6, torch.int64), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_7 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_14 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_7, torch.float32), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_14, 1.6666666666666667), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_13 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_16, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_15 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_13, torch.int64), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_15 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_2, [None, None, %clamp_max_12, %clamp_max_13]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_14 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_2, [None, None, %clamp_max_12, %convert_element_type_15]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_17 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_15, %_unsafe_index_14), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_13, %convert_element_type_15), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_14 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_15, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_14 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_14, 1.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_17, %clamp_max_14), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_14, %mul_18), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_13 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_2, [None, None, %convert_element_type_13, %clamp_max_13]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_12 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_2, [None, None, %convert_element_type_13, %convert_element_type_15]), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_16 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_13, %_unsafe_index_12), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_16, %clamp_max_14), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_20 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_12, %mul_17), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_19 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_21, %add_20), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_18 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_6, %convert_element_type_13), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_15 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_18, 0.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_15 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_15, 1.0), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_19, %clamp_max_15), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_22 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_20, %mul_19), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_17, %add_22), kwargs = {})
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2 = async_compile.triton('triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2', '''
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr4': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2', 'mutated_arg_names': ['in_out_ptr4'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2(in_out_ptr4, in_ptr0, in_ptr1, in_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex // 4
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = (rindex % 4)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 - tmp6
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 - tmp10
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp8
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 + tmp13
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = r3
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 0.3333333333333333
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19.to(tl.int32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1, 1], 1, tl.int64)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.minimum(tmp22, tmp21)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = r2
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp17
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27.to(tl.int32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 + tmp21
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = triton_helpers.minimum(tmp29, tmp21)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (2*tmp30 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (1 + 2*tmp30 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 + tmp31
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (4 + 2*tmp30 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp33
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr0 + (5 + 2*tmp30 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 + tmp35
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 0.25
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr0 + (2*tmp28 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr0 + (1 + 2*tmp28 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 + tmp40
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (4 + 2*tmp28 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 + tmp42
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr0 + (5 + 2*tmp28 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 + tmp44
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp38
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp39 - tmp47
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr0 + (2*tmp30 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (1 + 2*tmp30 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp49
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr0 + (4 + 2*tmp30 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 + tmp51
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr0 + (5 + 2*tmp30 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 + tmp53
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 * tmp38
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr0 + (2*tmp28 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr0 + (1 + 2*tmp28 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 + tmp57
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.load(in_ptr0 + (4 + 2*tmp28 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 + tmp59
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr0 + (5 + 2*tmp28 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp62 + tmp61
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp38
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp56 - tmp64
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp28.to(tl.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp27 - tmp66
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = triton_helpers.maximum(tmp67, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = 1.0
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = triton_helpers.minimum(tmp68, tmp69)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp48 * tmp70
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp47 + tmp71
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp65 * tmp70
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp64 + tmp73
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = 0.6666666666666666
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp16 * tmp75
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = triton_helpers.maximum(tmp76, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp77.to(tl.int32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp78 + tmp21
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.full([1, 1], 2, tl.int64)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = triton_helpers.minimum(tmp79, tmp80)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp25 * tmp75
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = triton_helpers.maximum(tmp82, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp83.to(tl.int32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.load(in_ptr1 + (tmp84 + 3*tmp81 + 9*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 + tmp21
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = triton_helpers.minimum(tmp86, tmp80)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tl.load(in_ptr1 + (tmp87 + 3*tmp81 + 9*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp88 - tmp85
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp84.to(tl.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp83 - tmp90
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = triton_helpers.maximum(tmp91, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = triton_helpers.minimum(tmp92, tmp69)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp89 * tmp93
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp85 + tmp94
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.load(in_ptr1 + (tmp84 + 3*tmp78 + 9*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr1 + (tmp87 + 3*tmp78 + 9*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp97 - tmp96
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp98 * tmp93
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp96 + tmp99
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp95 - tmp100
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp78.to(tl.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp77 - tmp102
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = triton_helpers.maximum(tmp103, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = triton_helpers.minimum(tmp104, tmp69)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp101 * tmp105
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp100 + tmp106
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = 1.6666666666666667
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp16 * tmp108
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = triton_helpers.maximum(tmp109, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tmp110.to(tl.int32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp111 + tmp21
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tl.full([1, 1], 5, tl.int64)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = triton_helpers.minimum(tmp112, tmp113)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp25 * tmp108
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = triton_helpers.maximum(tmp115, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp116.to(tl.int32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tl.load(in_ptr2 + (tmp117 + 6*tmp114 + 36*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp117 + tmp21
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = triton_helpers.minimum(tmp119, tmp113)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl.load(in_ptr2 + (tmp120 + 6*tmp114 + 36*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tmp121 - tmp118
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tmp117.to(tl.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp116 - tmp123
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = triton_helpers.maximum(tmp124, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = triton_helpers.minimum(tmp125, tmp69)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = tmp122 * tmp126
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tmp118 + tmp127
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp129 = tl.load(in_ptr2 + (tmp117 + 6*tmp111 + 36*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp130 = tl.load(in_ptr2 + (tmp120 + 6*tmp111 + 36*x0), xmask, eviction_policy='evict_last')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp131 = tmp130 - tmp129
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp132 = tmp131 * tmp126
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp133 = tmp129 + tmp132
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp134 = tmp128 - tmp133
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp135 = tmp111.to(tl.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp136 = tmp110 - tmp135
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp137 = triton_helpers.maximum(tmp136, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp138 = triton_helpers.minimum(tmp137, tmp69)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp139 = tmp134 * tmp138
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp140 = tmp133 + tmp139
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp141 = tmp72 - tmp74
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp142 = tmp20.to(tl.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp143 = tmp19 - tmp142
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp144 = triton_helpers.maximum(tmp143, tmp8)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp145 = triton_helpers.minimum(tmp144, tmp69)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp146 = tmp141 * tmp145
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp147 = tmp74 + tmp146
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp148 = tmp14 + tmp147
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp149 = tmp148 + tmp107
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp150 = tmp149 + tmp140
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr4 + (r1 + 16*x0), tmp150, xmask)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 3, 3), (36, 9, 3, 1), torch.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._adaptive_avg_pool2d]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_0.run(arg0_1, buf6, 144, grid=grid(144), stream=stream0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 6, 6), (144, 36, 6, 1), torch.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten._adaptive_avg_pool2d]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_1.run(arg0_1, buf9, 576, grid=grid(576), stream=stream0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf1; del buf1  # reuse
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, feat, x_2, x_3, feat_1, x_5, feat_2, x_7, feat_3], Original ATen: [aten.mean, aten._to_copy, aten.arange, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add, aten._adaptive_avg_pool2d]
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2.run(buf12, arg0_1, buf6, buf9, 16, 16, grid=grid(16), stream=stream0)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:13:55.048000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:55.059000 3347018 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/et/cet477g5jvn66iqd47zez3aoysmdwazlmdqmrgfm3o4dosoqw6na.py
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['29_inference']
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6e/c6ea5mvmqz5zwjzjxmsvwjfyktvjzyybor22yvfyck76hrh5zclv.py
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._adaptive_avg_pool2d]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => _adaptive_avg_pool2d_1
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d_1 : [num_users=4] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [3, 3]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_0 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_0', '''
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 144
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 3) % 3)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 9
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (4*x1) // 3
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 2 + ((4*x1) // 3)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (4*x0) // 3
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2 + ((4*x0) // 3)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp6 & xmask, other=0.0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + ((4*x0) // 3)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp10 & xmask, other=0.0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + ((4*x1) // 3)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp15 & xmask, other=0.0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp18 & xmask, other=0.0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp36, xmask)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3r/c3r73iyk64zkwnlvqrrxoxyunfgub4ofephvjtvnka4urxxkjkma.py
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten._adaptive_avg_pool2d]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => _adaptive_avg_pool2d_2
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d_2 : [num_users=4] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [6, 6]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_1 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_1', '''
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (2*x1) // 3
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = (9 + 4*x1) // 6
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (2*x0) // 3
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = (9 + 4*x0) // 6
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + ((2*x0) // 3)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp10 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + ((2*x1) // 3)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp36, xmask)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/k2/ck2iwrxsxkr35k7u6k3sdvtgrwxlpoy4q6b6qemwmrciu4cfx6hf.py
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, feat, x_2, x_3, feat_1, x_5, feat_2, x_7, feat_3], Original ATen: [aten.mean, aten._to_copy, aten.arange, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add, aten._adaptive_avg_pool2d]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat => add_5
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_1 => add_11
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_2 => add_17
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_3 => add_23
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => mean
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_2, add_3, add_4, clamp_max_2, clamp_max_3, clamp_min_1, clamp_min_2, clamp_min_3, convert_element_type_1, convert_element_type_2, convert_element_type_3, iota_1, mul_1, mul_2, mul_3, mul_4, sub, sub_1, sub_2, sub_3, sub_4
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => _adaptive_avg_pool2d
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_10, add_8, add_9, clamp_max_6, clamp_max_7, clamp_min_5, clamp_min_6, clamp_min_7, convert_element_type_5, convert_element_type_6, convert_element_type_7, iota_3, mul_6, mul_7, mul_8, mul_9, sub_5, sub_6, sub_7, sub_8, sub_9
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => _unsafe_index_10, _unsafe_index_11, _unsafe_index_8, _unsafe_index_9, add_14, add_15, add_16, clamp_max_10, clamp_max_11, clamp_min_10, clamp_min_11, clamp_min_9, convert_element_type_10, convert_element_type_11, convert_element_type_9, iota_5, mul_11, mul_12, mul_13, mul_14, sub_10, sub_11, sub_12, sub_13, sub_14
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => _unsafe_index_12, _unsafe_index_13, _unsafe_index_14, _unsafe_index_15, add_20, add_21, add_22, clamp_max_14, clamp_max_15, clamp_min_13, clamp_min_14, clamp_min_15, convert_element_type_13, convert_element_type_14, convert_element_type_15, iota_7, mul_16, mul_17, mul_18, mul_19, sub_15, sub_16, sub_17, sub_18, sub_19
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=4] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [-1, -2], True), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_1, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_1, torch.int64), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_1, %convert_element_type_3), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %clamp_max_2), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_3), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %add_2), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_3, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_3), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_4), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg0_1, %add_4), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d : [num_users=4] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [2, 2]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_5 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_3 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_6 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_3, torch.float32), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_6, 0.3333333333333333), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_5 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_6, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_7 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_5, torch.int64), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d, [None, None, %clamp_max_4, %clamp_max_5]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d, [None, None, %clamp_max_4, %convert_element_type_7]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_5, %convert_element_type_7), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_6 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_6 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_6, 1.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %clamp_max_6), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_8), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_6), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_7), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %add_8), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %convert_element_type_5), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_7 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_8, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_7 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_7, 1.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %clamp_max_7), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_8, %mul_9), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %add_10), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_9 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_4, torch.int64), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_5 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_10 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_5, torch.float32), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_10, 0.6666666666666666), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_9 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_11, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_11 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_9, torch.int64), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_11 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_1, [None, None, %clamp_max_8, %clamp_max_9]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_10 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_1, [None, None, %clamp_max_8, %convert_element_type_11]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_11, %_unsafe_index_10), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_9, %convert_element_type_11), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_10 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_10, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_10 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_10, 1.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %clamp_max_10), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_10, %mul_13), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_9 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_1, [None, None, %convert_element_type_9, %clamp_max_9]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_8 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_1, [None, None, %convert_element_type_9, %convert_element_type_11]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_9, %_unsafe_index_8), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_10), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_8, %mul_12), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_14 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_15, %add_14), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %convert_element_type_9), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_11 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_13, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_11 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_11, 1.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_14, %clamp_max_11), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_14, %mul_14), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %add_16), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_13 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_6, torch.int64), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_7 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_14 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_7, torch.float32), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_14, 1.6666666666666667), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_13 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_16, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_15 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_13, torch.int64), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_15 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_2, [None, None, %clamp_max_12, %clamp_max_13]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_14 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_2, [None, None, %clamp_max_12, %convert_element_type_15]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_17 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_15, %_unsafe_index_14), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_13, %convert_element_type_15), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_14 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_15, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_14 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_14, 1.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_17, %clamp_max_14), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_14, %mul_18), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_13 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_2, [None, None, %convert_element_type_13, %clamp_max_13]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_12 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_adaptive_avg_pool2d_2, [None, None, %convert_element_type_13, %convert_element_type_15]), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_16 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_13, %_unsafe_index_12), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_16, %clamp_max_14), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_20 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_12, %mul_17), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_19 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_21, %add_20), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_18 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_6, %convert_element_type_13), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_15 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_18, 0.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_15 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_15, 1.0), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_19, %clamp_max_15), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_22 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_20, %mul_19), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_17, %add_22), kwargs = {})
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2 = async_compile.triton('triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2', '''
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr4': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2', 'mutated_arg_names': ['in_out_ptr4'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2(in_out_ptr4, in_ptr0, in_ptr1, in_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex // 4
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = (rindex % 4)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 - tmp6
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 - tmp10
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp8
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 + tmp13
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = r3
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 0.3333333333333333
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19.to(tl.int32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1, 1], 1, tl.int64)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.minimum(tmp22, tmp21)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = r2
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp17
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27.to(tl.int32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 + tmp21
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = triton_helpers.minimum(tmp29, tmp21)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (2*tmp30 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (1 + 2*tmp30 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 + tmp31
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (4 + 2*tmp30 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp33
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr0 + (5 + 2*tmp30 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 + tmp35
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 0.25
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr0 + (2*tmp28 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr0 + (1 + 2*tmp28 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 + tmp40
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (4 + 2*tmp28 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 + tmp42
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr0 + (5 + 2*tmp28 + 8*tmp23 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 + tmp44
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp38
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp39 - tmp47
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr0 + (2*tmp30 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (1 + 2*tmp30 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp49
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr0 + (4 + 2*tmp30 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 + tmp51
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr0 + (5 + 2*tmp30 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 + tmp53
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 * tmp38
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr0 + (2*tmp28 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr0 + (1 + 2*tmp28 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 + tmp57
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.load(in_ptr0 + (4 + 2*tmp28 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 + tmp59
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr0 + (5 + 2*tmp28 + 8*tmp20 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp62 + tmp61
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp38
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp56 - tmp64
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp28.to(tl.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp27 - tmp66
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = triton_helpers.maximum(tmp67, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = 1.0
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = triton_helpers.minimum(tmp68, tmp69)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp48 * tmp70
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp47 + tmp71
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp65 * tmp70
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp64 + tmp73
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = 0.6666666666666666
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp16 * tmp75
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = triton_helpers.maximum(tmp76, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp77.to(tl.int32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp78 + tmp21
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.full([1, 1], 2, tl.int64)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = triton_helpers.minimum(tmp79, tmp80)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp25 * tmp75
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = triton_helpers.maximum(tmp82, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp83.to(tl.int32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.load(in_ptr1 + (tmp84 + 3*tmp81 + 9*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 + tmp21
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = triton_helpers.minimum(tmp86, tmp80)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tl.load(in_ptr1 + (tmp87 + 3*tmp81 + 9*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp88 - tmp85
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp84.to(tl.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp83 - tmp90
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = triton_helpers.maximum(tmp91, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = triton_helpers.minimum(tmp92, tmp69)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp89 * tmp93
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp85 + tmp94
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.load(in_ptr1 + (tmp84 + 3*tmp78 + 9*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr1 + (tmp87 + 3*tmp78 + 9*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp97 - tmp96
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp98 * tmp93
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp96 + tmp99
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp95 - tmp100
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp78.to(tl.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp77 - tmp102
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = triton_helpers.maximum(tmp103, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = triton_helpers.minimum(tmp104, tmp69)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp101 * tmp105
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp100 + tmp106
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = 1.6666666666666667
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp16 * tmp108
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = triton_helpers.maximum(tmp109, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tmp110.to(tl.int32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp111 + tmp21
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tl.full([1, 1], 5, tl.int64)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = triton_helpers.minimum(tmp112, tmp113)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp25 * tmp108
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = triton_helpers.maximum(tmp115, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp116.to(tl.int32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tl.load(in_ptr2 + (tmp117 + 6*tmp114 + 36*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp117 + tmp21
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = triton_helpers.minimum(tmp119, tmp113)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl.load(in_ptr2 + (tmp120 + 6*tmp114 + 36*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tmp121 - tmp118
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tmp117.to(tl.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp116 - tmp123
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = triton_helpers.maximum(tmp124, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = triton_helpers.minimum(tmp125, tmp69)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = tmp122 * tmp126
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tmp118 + tmp127
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp129 = tl.load(in_ptr2 + (tmp117 + 6*tmp111 + 36*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp130 = tl.load(in_ptr2 + (tmp120 + 6*tmp111 + 36*x0), xmask, eviction_policy='evict_last')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp131 = tmp130 - tmp129
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp132 = tmp131 * tmp126
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp133 = tmp129 + tmp132
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp134 = tmp128 - tmp133
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp135 = tmp111.to(tl.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp136 = tmp110 - tmp135
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp137 = triton_helpers.maximum(tmp136, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp138 = triton_helpers.minimum(tmp137, tmp69)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp139 = tmp134 * tmp138
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp140 = tmp133 + tmp139
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp141 = tmp72 - tmp74
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp142 = tmp20.to(tl.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp143 = tmp19 - tmp142
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp144 = triton_helpers.maximum(tmp143, tmp8)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp145 = triton_helpers.minimum(tmp144, tmp69)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp146 = tmp141 * tmp145
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp147 = tmp74 + tmp146
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp148 = tmp14 + tmp147
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp149 = tmp148 + tmp107
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp150 = tmp149 + tmp140
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr4 + (r1 + 16*x0), tmp150, xmask)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 3, 3), (36, 9, 3, 1), torch.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._adaptive_avg_pool2d]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_0.run(arg0_1, buf6, 144, grid=grid(144), stream=stream0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 6, 6), (144, 36, 6, 1), torch.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten._adaptive_avg_pool2d]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_1.run(arg0_1, buf9, 576, grid=grid(576), stream=stream0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf1; del buf1  # reuse
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, feat, x_2, x_3, feat_1, x_5, feat_2, x_7, feat_3], Original ATen: [aten.mean, aten._to_copy, aten.arange, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add, aten._adaptive_avg_pool2d]
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__adaptive_avg_pool2d__to_copy__unsafe_index_add_arange_clamp_mean_mul_sub_2.run(buf12, arg0_1, buf6, buf9, 16, 16, grid=grid(16), stream=stream0)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:03:10.411000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:03:10.422000 906920 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/oh/coheziqbvgq2qxmznytsbewwlnd5mfimsmxez5jwgcc2jwl3egnf.py
