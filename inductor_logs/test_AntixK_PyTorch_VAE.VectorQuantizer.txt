V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['5_forward']
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ue/cuejrkslrjd2erzme34tstnpwqvfbnkjsttwotphjk5youa6wmx3.py
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [latents, flat_latents], Original ATen: [aten.clone, aten.view]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   flat_latents => view
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latents => clone
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clone, [-1, 4]), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_view_0 = async_compile.triton('triton_poi_fused_clone_view_0', '''
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_view_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_view_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x1 + 64*(y0 // 16) + ((y0 % 16))), xmask & ymask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp0, xmask & ymask)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qk/cqk644sk3zr7pjmqaaenk33fqi6mgdohqvdzd32c72cjzzuhf5gn.py
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, sum_1, pow_2, sum_2, add, mul, dist], Original ATen: [aten.pow, aten.sum, aten.add, aten.mul, aten.sub]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dist => sub
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%view, 2), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1], True), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_2, 2), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_2, [1]), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm, 2), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_pow_sub_sum_1 = async_compile.triton('triton_poi_fused_add_mul_pow_sub_sum_1', '''
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_pow_sub_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_pow_sub_sum_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 + tmp14
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 + tmp17
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp10 + tmp21
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 2.0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 - tmp25
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp26, xmask)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fx/cfx226r3uxlm3mkbp6dv5on76xtl6xr2fhsfnu23xq7saafbu6tm.py
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [argmin], Original ATen: [aten.argmin]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmin => argmin
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmin : [num_users=1] = call_function[target=torch.ops.aten.argmin.default](args = (%sub, 1), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_argmin_2 = async_compile.triton('triton_poi_fused_argmin_2', '''
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_argmin_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_argmin_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 < tmp17
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 < tmp32
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rb/crbjzljtzbiiilnm74ae7ol432szjykxxrzvxat3vkrai2q3dlvl.py
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scatter_], Original ATen: [aten.scatter]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scatter_ => scatter_upon_const_tensor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=2] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [64, 4], background_val: 0, dtype: torch.float32, dim: 1, selector: %unsqueeze, val: 1})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_scatter_3 = async_compile.triton('triton_poi_fused_scatter_3', '''
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_scatter_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_scatter_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp5, xmask)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vx/cvxaxzxgp5yzerpmikaechyxpdoxqrgugk74y4ptiiitq3jhpdqa.py
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [latents, commitment_loss, mul_1, vq_loss], Original ATen: [aten.clone, aten.mse_loss, aten.mul, aten.add]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   commitment_loss => mean, pow_3, sub_1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latents => clone
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   vq_loss => add_1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %clone), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.default](args = (%pow_3,), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 0.25), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mean), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_clone_mse_loss_mul_4 = async_compile.triton('triton_per_fused_add_clone_mse_loss_mul_4', '''
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clone_mse_loss_mul_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_clone_mse_loss_mul_4(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 4)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = ((rindex // 4) % 16)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex // 64
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r3), None)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + 16*r0 + 64*r2), None, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp3, [RBLOCK])
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.promote_to_tensor(tl.sum(tmp4, 0))
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 256.0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.25
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp8
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp11, None)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f3/cf3mbvroqkpv6drf4jkxicpdbbtowgmjwbwegpuve7ucsmr3yhra.py
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [contiguous_1], Original ATen: [aten.clone]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   contiguous_1 => clone_1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_2,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_5 = async_compile.triton('triton_poi_fused_clone_5', '''
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_5(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0 + 4*x2 + 64*y1), xmask & ymask)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 - tmp0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y3), tmp3, xmask & ymask)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nw/cnw75sbkhrgrv3w26hu7fnsfllrqrw5ieumtedzyfcywexvfvby2.py
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [latents, commitment_loss], Original ATen: [aten.clone, aten.mse_loss, aten.mse_loss_backward]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   commitment_loss => sub_1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latents => clone
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %clone), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, 0.0078125), kwargs = {})
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_mse_loss_mse_loss_backward_6 = async_compile.triton('triton_poi_fused_clone_mse_loss_mse_loss_backward_6', '''
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mse_loss_mse_loss_backward_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_mse_loss_mse_loss_backward_6(in_out_ptr0, in_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (y0 + 16*x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0078125
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2 + 4*y3), tmp4, xmask & ymask)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2 = args
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [latents, flat_latents], Original ATen: [aten.clone, aten.view]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_view_0.run(primals_1, buf0, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.mm]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), out=buf1)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, pow_2, sum_2, add, mul, dist], Original ATen: [aten.pow, aten.sum, aten.add, aten.mul, aten.sub]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_pow_sub_sum_1.run(buf2, buf0, primals_2, 256, grid=grid(256), stream=stream0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, ), (1, ), torch.int64)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [argmin], Original ATen: [aten.argmin]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_argmin_2.run(buf2, buf3, 64, grid=grid(64), stream=stream0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf2; del buf2  # reuse
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scatter_], Original ATen: [aten.scatter]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_scatter_3.run(buf3, buf4, 256, grid=grid(256), stream=stream0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf0; del buf0  # reuse
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [quantized_latents], Original ATen: [aten.mm]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf4, primals_2, out=buf5)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((), (), torch.float32)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf6; del buf6  # reuse
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [latents, commitment_loss, mul_1, vq_loss], Original ATen: [aten.clone, aten.mse_loss, aten.mul, aten.add]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_clone_mse_loss_mul_4.run(buf9, buf5, primals_1, 1, 256, grid=grid(1), stream=stream0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous_1], Original ATen: [aten.clone]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(primals_1, buf5, buf7, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf5, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf5  # reuse
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [latents, commitment_loss], Original ATen: [aten.clone, aten.mse_loss, aten.mse_loss_backward]
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mse_loss_mse_loss_backward_6.run(buf8, primals_1, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf9, buf8, reinterpret_tensor(buf4, (4, 64), (1, 4), 0), )
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:29:17.133000 3578379 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:29:17.158000 3578379 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/fa/cfap7polda2rlw7kggnmobwlvxis3geb6dpc7spyjfh3cn2zhvvs.py
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['5_forward']
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ue/cuejrkslrjd2erzme34tstnpwqvfbnkjsttwotphjk5youa6wmx3.py
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [latents, flat_latents], Original ATen: [aten.clone, aten.view]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   flat_latents => view
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latents => clone
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clone, [-1, 4]), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_view_0 = async_compile.triton('triton_poi_fused_clone_view_0', '''
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_view_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_view_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x1 + 64*(y0 // 16) + ((y0 % 16))), xmask & ymask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp0, xmask & ymask)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qk/cqk644sk3zr7pjmqaaenk33fqi6mgdohqvdzd32c72cjzzuhf5gn.py
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, sum_1, pow_2, sum_2, add, mul, dist], Original ATen: [aten.pow, aten.sum, aten.add, aten.mul, aten.sub]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dist => sub
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%view, 2), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1], True), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_2, 2), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_2, [1]), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm, 2), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_pow_sub_sum_1 = async_compile.triton('triton_poi_fused_add_mul_pow_sub_sum_1', '''
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_pow_sub_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_pow_sub_sum_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 + tmp14
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 + tmp17
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp10 + tmp21
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 2.0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 - tmp25
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp26, xmask)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fx/cfx226r3uxlm3mkbp6dv5on76xtl6xr2fhsfnu23xq7saafbu6tm.py
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [argmin], Original ATen: [aten.argmin]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmin => argmin
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmin : [num_users=1] = call_function[target=torch.ops.aten.argmin.default](args = (%sub, 1), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_argmin_2 = async_compile.triton('triton_poi_fused_argmin_2', '''
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_argmin_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_argmin_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 < tmp17
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 < tmp32
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rb/crbjzljtzbiiilnm74ae7ol432szjykxxrzvxat3vkrai2q3dlvl.py
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scatter_], Original ATen: [aten.scatter]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scatter_ => scatter_upon_const_tensor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=2] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [64, 4], background_val: 0, dtype: torch.float32, dim: 1, selector: %unsqueeze, val: 1})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_scatter_3 = async_compile.triton('triton_poi_fused_scatter_3', '''
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_scatter_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_scatter_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp5, xmask)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vx/cvxaxzxgp5yzerpmikaechyxpdoxqrgugk74y4ptiiitq3jhpdqa.py
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [latents, commitment_loss, mul_1, vq_loss], Original ATen: [aten.clone, aten.mse_loss, aten.mul, aten.add]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   commitment_loss => mean, pow_3, sub_1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latents => clone
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   vq_loss => add_1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %clone), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.default](args = (%pow_3,), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 0.25), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mean), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_clone_mse_loss_mul_4 = async_compile.triton('triton_per_fused_add_clone_mse_loss_mul_4', '''
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clone_mse_loss_mul_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_clone_mse_loss_mul_4(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 4)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = ((rindex // 4) % 16)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex // 64
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r3), None)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + 16*r0 + 64*r2), None, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp3, [RBLOCK])
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.promote_to_tensor(tl.sum(tmp4, 0))
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 256.0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.25
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp8
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp11, None)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f3/cf3mbvroqkpv6drf4jkxicpdbbtowgmjwbwegpuve7ucsmr3yhra.py
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [contiguous_1], Original ATen: [aten.clone]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   contiguous_1 => clone_1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_2,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_5 = async_compile.triton('triton_poi_fused_clone_5', '''
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_5(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0 + 4*x2 + 64*y1), xmask & ymask)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 - tmp0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y3), tmp3, xmask & ymask)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nw/cnw75sbkhrgrv3w26hu7fnsfllrqrw5ieumtedzyfcywexvfvby2.py
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [latents, commitment_loss], Original ATen: [aten.clone, aten.mse_loss, aten.mse_loss_backward]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   commitment_loss => sub_1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latents => clone
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %clone), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, 0.0078125), kwargs = {})
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_mse_loss_mse_loss_backward_6 = async_compile.triton('triton_poi_fused_clone_mse_loss_mse_loss_backward_6', '''
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mse_loss_mse_loss_backward_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_mse_loss_mse_loss_backward_6(in_out_ptr0, in_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (y0 + 16*x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0078125
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2 + 4*y3), tmp4, xmask & ymask)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2 = args
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [latents, flat_latents], Original ATen: [aten.clone, aten.view]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_view_0.run(primals_1, buf0, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.mm]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), out=buf1)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, pow_2, sum_2, add, mul, dist], Original ATen: [aten.pow, aten.sum, aten.add, aten.mul, aten.sub]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_pow_sub_sum_1.run(buf2, buf0, primals_2, 256, grid=grid(256), stream=stream0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, ), (1, ), torch.int64)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [argmin], Original ATen: [aten.argmin]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_argmin_2.run(buf2, buf3, 64, grid=grid(64), stream=stream0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf2; del buf2  # reuse
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scatter_], Original ATen: [aten.scatter]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_scatter_3.run(buf3, buf4, 256, grid=grid(256), stream=stream0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf0; del buf0  # reuse
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [quantized_latents], Original ATen: [aten.mm]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf4, primals_2, out=buf5)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((), (), torch.float32)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf6; del buf6  # reuse
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [latents, commitment_loss, mul_1, vq_loss], Original ATen: [aten.clone, aten.mse_loss, aten.mul, aten.add]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_clone_mse_loss_mul_4.run(buf9, buf5, primals_1, 1, 256, grid=grid(1), stream=stream0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous_1], Original ATen: [aten.clone]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(primals_1, buf5, buf7, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf5, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf5  # reuse
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [latents, commitment_loss], Original ATen: [aten.clone, aten.mse_loss, aten.mse_loss_backward]
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mse_loss_mse_loss_backward_6.run(buf8, primals_1, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf9, buf8, reinterpret_tensor(buf4, (4, 64), (1, 4), 0), )
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:19:28.192000 2192191 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:19:28.201000 2192191 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/jc/cjcu5sxgn6cswxdzirzwmm7fz3tkogtcr3ljmgjyaswn3ihefmre.py
