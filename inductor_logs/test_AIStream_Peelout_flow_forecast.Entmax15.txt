V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['9_inference']
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f3/cf3mb6avrtkisakf3b5uietddb6xsyikuvtbwnqidgb7fmcpozk2.py
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1, X, X_1, sort, pow_1, cumsum_1, cumsum], Original ATen: [aten.max, aten.sub, aten.div, aten.sort, aten.pow, aten.cumsum]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   X => sub
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   X_1 => div
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cumsum => cumsum
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cumsum_1 => cumsum_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sort => sort
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%arg0_1, -1, True), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %getitem), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub, 2), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sort : [num_users=1] = call_function[target=torch.ops.aten.sort.default](args = (%div, -1, True), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem_2, 2), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum_1 : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%pow_1, -1), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%getitem_2, -1), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cumsum_div_max_pow_sort_sub_0 = async_compile.triton('triton_per_fused_cumsum_div_max_pow_sort_sub_0', '''
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 4},
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cumsum_div_max_pow_sort_sub_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cumsum_div_max_pow_sort_sub_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 4*x0), xmask, other=0.0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.5
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = r1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.int16)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp10, [XBLOCK, RBLOCK])
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15, tmp16, = triton_helpers.sort_with_index(tmp13, tmp14, None, 1, stable=False, descending=True)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp15
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17.to(tl.float32)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK, RBLOCK])
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20, = tl.associative_scan((tmp19,), 1, _triton_helper_fn_add0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp15.to(tl.float32)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.broadcast_to(tmp21, [XBLOCK, RBLOCK])
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23, = tl.associative_scan((tmp22,), 1, _triton_helper_fn_add0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 4*x0), tmp10, xmask)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 4*x0), tmp15, xmask)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + 4*x0), tmp20, xmask)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (r1 + 4*x0), tmp23, xmask)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/db/cdbwj5mhvhafkoikr3jwc4h3q6brt4xfib3q33ti3hmdwhaf7xgd.py
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean_sq, mean, pow_2, sub_1, ss, sub_2, delta, delta_nz, sqrt, tau, le, sum_1], Original ATen: [aten.div, aten.pow, aten.sub, aten.mul, aten.rsub, aten.clamp, aten.sqrt, aten.le, aten.sum]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta => div_3
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta_nz => clamp_min
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   le => le
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => div_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_sq => div_2
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sqrt => sqrt
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ss => mul_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tau => sub_3
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%cumsum_1, %permute), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%cumsum, %permute), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%div_1, 2), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_2, %pow_2), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %sub_1), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %mul_1), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_2, %permute), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%div_3, 0), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%clamp_min,), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_1, %sqrt), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Tensor](args = (%sub_3, %getitem_2), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%le, [-1]), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1 = async_compile.triton('triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1', '''
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr2 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr2 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.load(in_ptr2 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 / tmp1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 / tmp1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 * tmp2
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 * tmp6
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 - tmp7
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 / tmp1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp2 - tmp12
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 <= tmp14
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15.to(tl.int64)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 2.0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 / tmp18
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 / tmp18
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 * tmp19
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp18 * tmp23
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp1 - tmp24
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 / tmp18
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp10)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = libdevice.sqrt(tmp27)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp19 - tmp28
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 <= tmp30
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31.to(tl.int64)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp16 + tmp32
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 3.0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 / tmp35
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 / tmp35
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 * tmp36
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 - tmp39
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp35 * tmp40
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp1 - tmp41
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 / tmp35
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.maximum(tmp43, tmp10)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = libdevice.sqrt(tmp44)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp36 - tmp45
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 <= tmp47
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48.to(tl.int64)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp33 + tmp49
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = 4.0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 / tmp52
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp53 * tmp53
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 - tmp56
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp52 * tmp57
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp1 - tmp58
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp59 / tmp52
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = triton_helpers.maximum(tmp60, tmp10)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = libdevice.sqrt(tmp61)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp53 - tmp62
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp63 <= tmp64
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp65.to(tl.int64)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp50 + tmp66
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp67, xmask)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wc/cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean_sq, mean, pow_2, sub_1, ss, sub_2, delta, delta_nz, sqrt, tau, sub_4, tau_star, sub_5, clamp_1, Y], Original ATen: [aten.div, aten.pow, aten.sub, aten.mul, aten.rsub, aten.clamp, aten.sqrt, aten.gather]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   Y => pow_3
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_1 => clamp_min_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta => div_3
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta_nz => clamp_min
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => div_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_sq => div_2
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sqrt => sqrt
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ss => mul_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tau => sub_3
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tau_star => gather
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%cumsum_1, %permute), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%cumsum, %permute), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%div_1, 2), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_2, %pow_2), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %sub_1), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %mul_1), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_2, %permute), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%div_3, 0), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%clamp_min,), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_1, %sqrt), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, 1), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gather : [num_users=1] = call_function[target=torch.ops.aten.gather.default](args = (%sub_3, -1, %sub_4), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %gather), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min_1, 2), kwargs = {})
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2 = async_compile.triton('triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2', '''
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([XBLOCK], 4, tl.int32)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 < 0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp6, tmp5, tmp3)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp7) & (tmp7 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp7 < 4")
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (tmp7 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1 + tmp7
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 / tmp11
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr2 + (tmp7 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp11
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 * tmp12
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 - tmp15
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp11 * tmp16
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 1.0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 - tmp17
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 / tmp11
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 0.0
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp20, tmp21)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.sqrt(tmp22)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp12 - tmp23
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 - tmp24
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp25, tmp21)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp27, xmask)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1, X, X_1, sort, pow_1, cumsum_1, cumsum], Original ATen: [aten.max, aten.sub, aten.div, aten.sort, aten.pow, aten.cumsum]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cumsum_div_max_pow_sort_sub_0.run(arg0_1, buf0, buf1, buf3, buf4, 64, 4, grid=grid(64), stream=stream0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.int64)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean_sq, mean, pow_2, sub_1, ss, sub_2, delta, delta_nz, sqrt, tau, le, sum_1], Original ATen: [aten.div, aten.pow, aten.sub, aten.mul, aten.rsub, aten.clamp, aten.sqrt, aten.le, aten.sum]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1.run(buf4, buf3, buf1, buf5, 64, grid=grid(64), stream=stream0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf0; del buf0  # reuse
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean_sq, mean, pow_2, sub_1, ss, sub_2, delta, delta_nz, sqrt, tau, sub_4, tau_star, sub_5, clamp_1, Y], Original ATen: [aten.div, aten.pow, aten.sub, aten.mul, aten.rsub, aten.clamp, aten.sqrt, aten.gather]
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2.run(buf6, buf5, buf4, buf3, 256, grid=grid(256), stream=stream0)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, )
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:25:02.693000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:02.699000 3415184 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4z/c4zf2zhd7mq4r36lt633mpiw6rnoolmkhp7lwy42nscrm7nx4bpj.py
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['9_inference']
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f3/cf3mb6avrtkisakf3b5uietddb6xsyikuvtbwnqidgb7fmcpozk2.py
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1, X, X_1, sort, pow_1, cumsum_1, cumsum], Original ATen: [aten.max, aten.sub, aten.div, aten.sort, aten.pow, aten.cumsum]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   X => sub
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   X_1 => div
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cumsum => cumsum
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cumsum_1 => cumsum_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sort => sort
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%arg0_1, -1, True), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %getitem), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub, 2), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sort : [num_users=1] = call_function[target=torch.ops.aten.sort.default](args = (%div, -1, True), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem_2, 2), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum_1 : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%pow_1, -1), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%getitem_2, -1), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cumsum_div_max_pow_sort_sub_0 = async_compile.triton('triton_per_fused_cumsum_div_max_pow_sort_sub_0', '''
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 4},
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cumsum_div_max_pow_sort_sub_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cumsum_div_max_pow_sort_sub_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 4*x0), xmask, other=0.0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.5
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = r1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.int16)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp10, [XBLOCK, RBLOCK])
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15, tmp16, = triton_helpers.sort_with_index(tmp13, tmp14, None, 1, stable=False, descending=True)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp15
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17.to(tl.float32)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK, RBLOCK])
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20, = tl.associative_scan((tmp19,), 1, _triton_helper_fn_add0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp15.to(tl.float32)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.broadcast_to(tmp21, [XBLOCK, RBLOCK])
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23, = tl.associative_scan((tmp22,), 1, _triton_helper_fn_add0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 4*x0), tmp10, xmask)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 4*x0), tmp15, xmask)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + 4*x0), tmp20, xmask)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (r1 + 4*x0), tmp23, xmask)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/db/cdbwj5mhvhafkoikr3jwc4h3q6brt4xfib3q33ti3hmdwhaf7xgd.py
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean_sq, mean, pow_2, sub_1, ss, sub_2, delta, delta_nz, sqrt, tau, le, sum_1], Original ATen: [aten.div, aten.pow, aten.sub, aten.mul, aten.rsub, aten.clamp, aten.sqrt, aten.le, aten.sum]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta => div_3
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta_nz => clamp_min
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   le => le
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => div_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_sq => div_2
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sqrt => sqrt
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ss => mul_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tau => sub_3
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%cumsum_1, %permute), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%cumsum, %permute), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%div_1, 2), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_2, %pow_2), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %sub_1), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %mul_1), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_2, %permute), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%div_3, 0), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%clamp_min,), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_1, %sqrt), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Tensor](args = (%sub_3, %getitem_2), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%le, [-1]), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1 = async_compile.triton('triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1', '''
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr2 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr2 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.load(in_ptr2 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 / tmp1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 / tmp1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 * tmp2
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 * tmp6
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 - tmp7
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 / tmp1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp2 - tmp12
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 <= tmp14
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15.to(tl.int64)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 2.0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 / tmp18
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 / tmp18
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 * tmp19
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp18 * tmp23
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp1 - tmp24
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 / tmp18
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp10)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = libdevice.sqrt(tmp27)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp19 - tmp28
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 <= tmp30
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31.to(tl.int64)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp16 + tmp32
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 3.0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 / tmp35
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 / tmp35
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 * tmp36
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 - tmp39
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp35 * tmp40
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp1 - tmp41
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 / tmp35
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.maximum(tmp43, tmp10)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = libdevice.sqrt(tmp44)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp36 - tmp45
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 <= tmp47
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48.to(tl.int64)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp33 + tmp49
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = 4.0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 / tmp52
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp53 * tmp53
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 - tmp56
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp52 * tmp57
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp1 - tmp58
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp59 / tmp52
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = triton_helpers.maximum(tmp60, tmp10)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = libdevice.sqrt(tmp61)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp53 - tmp62
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp63 <= tmp64
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp65.to(tl.int64)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp50 + tmp66
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp67, xmask)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wc/cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean_sq, mean, pow_2, sub_1, ss, sub_2, delta, delta_nz, sqrt, tau, sub_4, tau_star, sub_5, clamp_1, Y], Original ATen: [aten.div, aten.pow, aten.sub, aten.mul, aten.rsub, aten.clamp, aten.sqrt, aten.gather]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   Y => pow_3
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_1 => clamp_min_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta => div_3
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta_nz => clamp_min
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => div_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_sq => div_2
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sqrt => sqrt
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ss => mul_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tau => sub_3
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tau_star => gather
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%cumsum_1, %permute), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%cumsum, %permute), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%div_1, 2), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_2, %pow_2), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %sub_1), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %mul_1), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_2, %permute), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%div_3, 0), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%clamp_min,), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_1, %sqrt), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, 1), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gather : [num_users=1] = call_function[target=torch.ops.aten.gather.default](args = (%sub_3, -1, %sub_4), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %gather), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min_1, 2), kwargs = {})
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2 = async_compile.triton('triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2', '''
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([XBLOCK], 4, tl.int32)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 < 0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp6, tmp5, tmp3)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp7) & (tmp7 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp7 < 4")
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (tmp7 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1 + tmp7
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 / tmp11
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr2 + (tmp7 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp11
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 * tmp12
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 - tmp15
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp11 * tmp16
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 1.0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 - tmp17
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 / tmp11
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 0.0
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp20, tmp21)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.sqrt(tmp22)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp12 - tmp23
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 - tmp24
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp25, tmp21)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp27, xmask)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1, X, X_1, sort, pow_1, cumsum_1, cumsum], Original ATen: [aten.max, aten.sub, aten.div, aten.sort, aten.pow, aten.cumsum]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cumsum_div_max_pow_sort_sub_0.run(arg0_1, buf0, buf1, buf3, buf4, 64, 4, grid=grid(64), stream=stream0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.int64)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean_sq, mean, pow_2, sub_1, ss, sub_2, delta, delta_nz, sqrt, tau, le, sum_1], Original ATen: [aten.div, aten.pow, aten.sub, aten.mul, aten.rsub, aten.clamp, aten.sqrt, aten.le, aten.sum]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clamp_div_le_mul_pow_rsub_sqrt_sub_sum_1.run(buf4, buf3, buf1, buf5, 64, grid=grid(64), stream=stream0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf0; del buf0  # reuse
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean_sq, mean, pow_2, sub_1, ss, sub_2, delta, delta_nz, sqrt, tau, sub_4, tau_star, sub_5, clamp_1, Y], Original ATen: [aten.div, aten.pow, aten.sub, aten.mul, aten.rsub, aten.clamp, aten.sqrt, aten.gather]
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2.run(buf6, buf5, buf4, buf3, 256, grid=grid(256), stream=stream0)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, )
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:14:57.241000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:57.249000 2077305 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/op/cophvk35bhs5ff2nvcoojvk43aupmc6nmzmcmkwy22br5flp53rb.py
