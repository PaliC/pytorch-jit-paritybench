V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_inference']
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/33/c33fd7riw4kdinrdlytocew3llihprvangkjczougkjq3h2jtbzc.py
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [target_mean, target], Original ATen: [aten.mean, aten.sub]
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   target => sub_1
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   target_mean => mean_1
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg1_1, [-1], True), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %mean_1), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_sub_0 = async_compile.triton('triton_poi_fused_mean_sub_0', '''
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_sub_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_sub_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 4.0
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 / tmp8
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp0 - tmp9
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp10, xmask)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gh/cghmju5pkumtnce3qxkmbukc2n6cdp7wwuafbjeoxy2pqk6em2uw.py
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, sum_1, input_mean, input_1, res, pow_2, sum_2, add, truediv, add_1, log10, losses, losses_1, neg], Original ATen: [aten.pow, aten.sum, aten.mean, aten.sub, aten.add, aten.div, aten.log10, aten.mul, aten.neg]
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => sub
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_mean => mean
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log10 => log10
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   losses => mul
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   losses_1 => mean_2
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res => sub_2
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [-1]), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [-1], True), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %mean), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, %sub_1), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_2, 2), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_2, [-1]), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_2, 1e-08), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_1, %add), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div, 1e-08), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log10 : [num_users=1] = call_function[target=torch.ops.aten.log10.default](args = (%add_1,), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%log10, 10), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%mul,), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mean_2,), kwargs = {})
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1 = async_compile.triton('triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1', '''
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (4*r0), None, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 4.0
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 / tmp18
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp11 - tmp19
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 - tmp0
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp21
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp12 - tmp19
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 - tmp2
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp24
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp14 - tmp19
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp5
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp28
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 + tmp29
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp16 - tmp19
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 - tmp8
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 * tmp32
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 + tmp33
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 1e-08
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 + tmp35
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp10 / tmp36
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = libdevice.log10(tmp38)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 10.0
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 * tmp40
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.broadcast_to(tmp41, [XBLOCK, RBLOCK])
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.sum(tmp42, 1)[:, None]
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = 64.0
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp44 / tmp45
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = -tmp46
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp47, None)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [target_mean, target], Original ATen: [aten.mean, aten.sub]
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_sub_0.run(arg1_1, buf0, 256, grid=grid(256), stream=stream0)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((), (), torch.float32)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, input_mean, input_1, res, pow_2, sum_2, add, truediv, add_1, log10, losses, losses_1, neg], Original ATen: [aten.pow, aten.sum, aten.mean, aten.sub, aten.add, aten.div, aten.log10, aten.mul, aten.neg]
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1.run(buf3, buf0, arg0_1, 1, 64, grid=grid(1), stream=stream0)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:47:59.198000 2071991 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:47:59.201000 2071991 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/t7/ct7xqjjvdooszopsurruymfj65dbeegqisv4o6vgqpubual4kaoa.py
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_inference']
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/33/c33fd7riw4kdinrdlytocew3llihprvangkjczougkjq3h2jtbzc.py
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [target_mean, target], Original ATen: [aten.mean, aten.sub]
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   target => sub_1
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   target_mean => mean_1
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg1_1, [-1], True), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %mean_1), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_sub_0 = async_compile.triton('triton_poi_fused_mean_sub_0', '''
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_sub_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_sub_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 4.0
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 / tmp8
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp0 - tmp9
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp10, xmask)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gh/cghmju5pkumtnce3qxkmbukc2n6cdp7wwuafbjeoxy2pqk6em2uw.py
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, sum_1, input_mean, input_1, res, pow_2, sum_2, add, truediv, add_1, log10, losses, losses_1, neg], Original ATen: [aten.pow, aten.sum, aten.mean, aten.sub, aten.add, aten.div, aten.log10, aten.mul, aten.neg]
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => sub
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_mean => mean
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log10 => log10
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   losses => mul
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   losses_1 => mean_2
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res => sub_2
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [-1]), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [-1], True), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %mean), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, %sub_1), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_2, 2), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_2, [-1]), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_2, 1e-08), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_1, %add), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div, 1e-08), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log10 : [num_users=1] = call_function[target=torch.ops.aten.log10.default](args = (%add_1,), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%log10, 10), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%mul,), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mean_2,), kwargs = {})
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1 = async_compile.triton('triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1', '''
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (4*r0), None, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 4.0
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 / tmp18
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp11 - tmp19
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 - tmp0
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp21
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp12 - tmp19
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 - tmp2
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp24
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp14 - tmp19
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp5
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp28
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 + tmp29
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp16 - tmp19
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 - tmp8
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 * tmp32
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 + tmp33
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 1e-08
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 + tmp35
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp10 / tmp36
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = libdevice.log10(tmp38)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 10.0
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 * tmp40
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.broadcast_to(tmp41, [XBLOCK, RBLOCK])
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.sum(tmp42, 1)[:, None]
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = 64.0
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp44 / tmp45
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = -tmp46
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp47, None)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [target_mean, target], Original ATen: [aten.mean, aten.sub]
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_sub_0.run(arg1_1, buf0, 256, grid=grid(256), stream=stream0)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((), (), torch.float32)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, input_mean, input_1, res, pow_2, sum_2, add, truediv, add_1, log10, losses, losses_1, neg], Original ATen: [aten.pow, aten.sum, aten.mean, aten.sub, aten.add, aten.div, aten.log10, aten.mul, aten.neg]
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1.run(buf3, buf0, arg0_1, 1, 64, grid=grid(1), stream=stream0)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:37:31.917000 3599018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:37:31.921000 3599018 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/j6/cj6v3ulzbohf6z63v3h2msgl7lbtyqvpp6xlbbj4odnajx472a3u.py
