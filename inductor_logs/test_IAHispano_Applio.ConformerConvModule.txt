V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/it/citpzotlmr4ui3ccgi4l2mjxk4d4labc54ljmsuombleywieb7u6.py
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.native_layer_norm]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add, rsqrt, var_mean
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_3, [2]), kwargs = {correction: 0, keepdim: True})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_0 = async_compile.triton('triton_poi_fused_native_layer_norm_0', '''
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 - tmp8
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp8
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp3 - tmp8
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 + tmp15
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp8
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp17
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 / tmp7
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-05
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.rsqrt(tmp22)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp23, xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sm/csm3kauzljvoqykmhxhxprbjlalxtsjj5hfqqm3wplqhjfb6qipp.py
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.native_layer_norm]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add, add_1, mul, mul_1, rsqrt, sub, var_mean
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_3, [2]), kwargs = {correction: 0, keepdim: True})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_3, %getitem_1), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_1), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_2), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_1 = async_compile.triton('triton_poi_fused_native_layer_norm_1', '''
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fw/cfwl6qp3u55wbqr2wwxf7ssrasr5jsbzuiqq65hicscxe76ohhtk.py
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_4, %primals_5, [1], [0], [1], False, [0], 1), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_2 = async_compile.triton('triton_poi_fused_convolution_2', '''
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/px/cpxtntgjbbcoj3wjwazenkfpenr6tnheq6l5mzungvcnap4klssj.py
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_4, %primals_5, [1], [0], [1], False, [0], 1), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_3 = async_compile.triton('triton_poi_fused_convolution_3', '''
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/up/cupufhse4zy36qesauq4ihitas443d3wfjzblk7h4n7zujgg66wv.py
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigmoid], Original ATen: [aten.sigmoid]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem_3,), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_sigmoid_4 = async_compile.triton('triton_poi_fused_sigmoid_4', '''
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sigmoid_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_sigmoid_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 32
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp1, xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3u/c3uzlwf5zwphecf23cq4kptw3gc6rmyjoakt5s4lpevmoabytdqg.py
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, x], Original ATen: [aten.mul, aten.constant_pad_nd]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => mul_2
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => constant_pad_nd
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%getitem_2, %sigmoid), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%mul_2, [15, 15], 0.0), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_constant_pad_nd_mul_5 = async_compile.triton('triton_poi_fused_constant_pad_nd_mul_5', '''
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_mul_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_constant_pad_nd_mul_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1088
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 34)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 34) % 8)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 272
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 34
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-15) + x0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + ((-15) + x0 + 4*x1 + 64*x2), tmp5 & xmask, other=0.0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + ((-15) + x0 + 4*x3), tmp5 & xmask, other=0.0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full(tmp8.shape, 0.0, tmp8.dtype)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp5, tmp8, tmp9)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp10, xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ho/chox3mwjfypq4r4qeqet2qgq2cr4w5vpowgpuizff4e5egtvrkfc.py
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, sigmoid_1, input_6], Original ATen: [aten.convolution, aten.sigmoid, aten.mul]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => mul_3
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid_1 => sigmoid_1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%constant_pad_nd, %primals_6, %primals_7, [1], [0], [1], False, [0], 8), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convolution_1,), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, %sigmoid_1), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_mul_sigmoid_6 = async_compile.triton('triton_poi_fused_convolution_mul_sigmoid_6', '''
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_mul_sigmoid_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_mul_sigmoid_6(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 8)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pr/cpro2wesbw6yk22o63sba5bzpoiytanizyu3uvchxsvunqse35ic.py
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => convolution_2
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%mul_3, %primals_8, %primals_9, [1], [0], [1], False, [0], 1), kwargs = {})
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_7 = async_compile.triton('triton_poi_fused_convolution_7', '''
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_7(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, ), (1, ))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4), (16, 4, 1))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, 4, 1), (4, 1, 1))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (8, 1, 31), (31, 31, 1))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (8, ), (1, ))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 8, 1), (8, 1, 1))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.native_layer_norm]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_0.run(primals_3, buf0, buf1, 16, grid=grid(16), stream=stream0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.native_layer_norm]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_1.run(primals_3, buf0, buf1, primals_1, primals_2, buf2, 64, grid=grid(64), stream=stream0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_2.run(buf2, buf3, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_4, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 16, 4), (64, 4, 1))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf5, primals_5, 256, grid=grid(256), stream=stream0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 8, 4), (32, 4, 1), torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigmoid], Original ATen: [aten.sigmoid]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_sigmoid_4.run(buf5, buf6, 128, grid=grid(128), stream=stream0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 8, 34), (272, 34, 1), torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, x], Original ATen: [aten.mul, aten.constant_pad_nd]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_constant_pad_nd_mul_5.run(buf5, buf6, buf7, 1088, grid=grid(1088), stream=stream0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_6, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=8, bias=None)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 8, 4), (32, 4, 1))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 8, 4), (32, 4, 1), torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, sigmoid_1, input_6], Original ATen: [aten.convolution, aten.sigmoid, aten.mul]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_mul_sigmoid_6.run(buf9, primals_7, buf10, 128, grid=grid(128), stream=stream0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_8, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 4, 4), (16, 4, 1))
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_7.run(buf12, primals_9, 64, grid=grid(64), stream=stream0)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 4, 4), (16, 1, 4), 0), primals_3, primals_4, primals_6, primals_8, reinterpret_tensor(buf2, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf5, (4, 8, 4), (64, 4, 1), 0), buf6, buf7, buf9, buf10, )
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((8, 1, 31), (31, 31, 1), device='cuda:0', dtype=torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 8, 1), (8, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:07:16.546000 516816 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:07:16.555000 516816 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3t/c3ttgask2p4faa3ftog66akhr2am24sdwsiwqzl4qrzbmm3upvww.py
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/it/citpzotlmr4ui3ccgi4l2mjxk4d4labc54ljmsuombleywieb7u6.py
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.native_layer_norm]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add, rsqrt, var_mean
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_3, [2]), kwargs = {correction: 0, keepdim: True})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_0 = async_compile.triton('triton_poi_fused_native_layer_norm_0', '''
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 - tmp8
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp8
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp3 - tmp8
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 + tmp15
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp8
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp17
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 / tmp7
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-05
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.rsqrt(tmp22)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp23, xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sm/csm3kauzljvoqykmhxhxprbjlalxtsjj5hfqqm3wplqhjfb6qipp.py
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.native_layer_norm]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add, add_1, mul, mul_1, rsqrt, sub, var_mean
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_3, [2]), kwargs = {correction: 0, keepdim: True})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_3, %getitem_1), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_1), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_2), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_1 = async_compile.triton('triton_poi_fused_native_layer_norm_1', '''
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fw/cfwl6qp3u55wbqr2wwxf7ssrasr5jsbzuiqq65hicscxe76ohhtk.py
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_4, %primals_5, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_2 = async_compile.triton('triton_poi_fused_convolution_2', '''
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/px/cpxtntgjbbcoj3wjwazenkfpenr6tnheq6l5mzungvcnap4klssj.py
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_4, %primals_5, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_3 = async_compile.triton('triton_poi_fused_convolution_3', '''
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/up/cupufhse4zy36qesauq4ihitas443d3wfjzblk7h4n7zujgg66wv.py
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigmoid], Original ATen: [aten.sigmoid]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem_3,), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_sigmoid_4 = async_compile.triton('triton_poi_fused_sigmoid_4', '''
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sigmoid_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_sigmoid_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 32
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp1, xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3u/c3uzlwf5zwphecf23cq4kptw3gc6rmyjoakt5s4lpevmoabytdqg.py
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, x], Original ATen: [aten.mul, aten.constant_pad_nd]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => mul_2
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => constant_pad_nd
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%getitem_2, %sigmoid), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%mul_2, [15, 15], 0.0), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_constant_pad_nd_mul_5 = async_compile.triton('triton_poi_fused_constant_pad_nd_mul_5', '''
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_mul_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_constant_pad_nd_mul_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1088
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 34)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 34) % 8)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 272
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 34
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-15) + x0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + ((-15) + x0 + 4*x1 + 64*x2), tmp5 & xmask, other=0.0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + ((-15) + x0 + 4*x3), tmp5 & xmask, other=0.0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full(tmp8.shape, 0.0, tmp8.dtype)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp5, tmp8, tmp9)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp10, xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ho/chox3mwjfypq4r4qeqet2qgq2cr4w5vpowgpuizff4e5egtvrkfc.py
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, sigmoid_1, input_6], Original ATen: [aten.convolution, aten.sigmoid, aten.mul]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => mul_3
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid_1 => sigmoid_1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%constant_pad_nd, %primals_6, %primals_7, [1], [0], [1], False, [0], 8), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convolution_1,), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, %sigmoid_1), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_mul_sigmoid_6 = async_compile.triton('triton_poi_fused_convolution_mul_sigmoid_6', '''
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_mul_sigmoid_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_mul_sigmoid_6(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 8)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pr/cpro2wesbw6yk22o63sba5bzpoiytanizyu3uvchxsvunqse35ic.py
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => convolution_2
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%mul_3, %primals_8, %primals_9, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_7 = async_compile.triton('triton_poi_fused_convolution_7', '''
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_7(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, ), (1, ))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4), (16, 4, 1))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, 4, 1), (4, 1, 1))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (8, 1, 31), (31, 31, 1))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (8, ), (1, ))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 8, 1), (8, 1, 1))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.native_layer_norm]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_0.run(primals_3, buf0, buf1, 16, grid=grid(16), stream=stream0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.native_layer_norm]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_1.run(primals_3, buf0, buf1, primals_1, primals_2, buf2, 64, grid=grid(64), stream=stream0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_2.run(buf2, buf3, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_4, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 16, 4), (64, 4, 1))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf5, primals_5, 256, grid=grid(256), stream=stream0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 8, 4), (32, 4, 1), torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigmoid], Original ATen: [aten.sigmoid]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_sigmoid_4.run(buf5, buf6, 128, grid=grid(128), stream=stream0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 8, 34), (272, 34, 1), torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, x], Original ATen: [aten.mul, aten.constant_pad_nd]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_constant_pad_nd_mul_5.run(buf5, buf6, buf7, 1088, grid=grid(1088), stream=stream0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_6, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=8, bias=None)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 8, 4), (32, 4, 1))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 8, 4), (32, 4, 1), torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, sigmoid_1, input_6], Original ATen: [aten.convolution, aten.sigmoid, aten.mul]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_mul_sigmoid_6.run(buf9, primals_7, buf10, 128, grid=grid(128), stream=stream0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_8, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 4, 4), (16, 4, 1))
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_7.run(buf12, primals_9, 64, grid=grid(64), stream=stream0)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 4, 4), (16, 1, 4), 0), primals_3, primals_4, primals_6, primals_8, reinterpret_tensor(buf2, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf5, (4, 8, 4), (64, 4, 1), 0), buf6, buf7, buf9, buf10, )
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((8, 1, 31), (31, 31, 1), device='cuda:0', dtype=torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 8, 1), (8, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:57:32.662000 3267157 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:32.671000 3267157 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/br/cbr74sy74lruw5yfof6p432jdcw5o42k7hxfri2zgrt5ejpjy7vo.py
