V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7t/c7tg6cvo2nxgvuh6ws5wdsqrcvp6lom4l2rrvbbi2r2dsngaxl5n.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_1, mul_1, mul_2, sub
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => relu
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_0', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/o7/co7umherztjjl4wixyu74qkhlq5aozyafblxjypboqy3d22sptwa.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => add_3, mul_4, mul_5, sub_1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => relu_1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_1', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4v/c4vyyiq7ty7k4wwiemlwwxxaelgdtjrocgm5eetnhnh3fxxqplca.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => clamp_min, convert_element_type_11, convert_element_type_8, iota, mul_12
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (1,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_8 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_8, 0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_12, 0.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_11 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min, torch.int64), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_2 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_2', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp0, None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/su/csuiher3qkoi4vqlu4twjqjvikutxroeq4vnkmn2wojcfw7uui6r.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => clamp_max_2, clamp_min, clamp_min_2, convert_element_type_8, iota, mul_12, sub_4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (1,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_8 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_8, 0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_12, 0.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_11), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_4, 0.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_3 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_3', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp0, None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/62/c62gibs4cdit3jsnoud5nwv5u5ug3kuz3hgxq5ttuz5r2jcxrlhx.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_10, x_11, out, x_13, x_14, out_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_10, add_11, add_12, mul_14, mul_15, mul_16, sub_5, sub_6, sub_8
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => add_15
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_10 => add_7, mul_10, mul_11, sub_3
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_11 => relu_3
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_13 => add_14, mul_18, mul_19, sub_9
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_14 => relu_4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_29), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_31), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=4] = call_function[target=torch.ops.aten.relu.default](args = (%add_7,), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_3, [None, None, %convert_element_type_9, %convert_element_type_11]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_3, [None, None, %convert_element_type_9, %clamp_max_1]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_3, [None, None, %clamp_max, %convert_element_type_11]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_3, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %clamp_max_2), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_14), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_2), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_15), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_11, %add_10), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %clamp_max_3), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_10, %mul_16), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_35), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_18, %unsqueeze_37), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_19, %unsqueeze_39), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_14,), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_4, %add_12), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*i64', 'in_ptr11': '*i64', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x2), xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr8 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr9 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr10 + (0))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [XBLOCK])
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr11 + (0))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.broadcast_to(tmp38, [XBLOCK])
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr12 + (0))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.broadcast_to(tmp44, [XBLOCK])
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr13 + (0))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.broadcast_to(tmp49, [XBLOCK])
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 - tmp19
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.sqrt(tmp22)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp7 / tmp23
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp9
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp20 * tmp25
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = triton_helpers.maximum(tmp16, tmp30)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([XBLOCK], 1, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 + tmp34
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.where(tmp36, tmp35, tmp33)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp34
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.where(tmp41, tmp40, tmp39)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp17 - tmp17
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp43 * tmp45
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp17 + tmp46
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 - tmp47
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp48 * tmp50
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp47 + tmp51
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp31 + tmp52
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp53, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bj/cbjorvxc3eqphtqizc2odhiskwmxlkakaqidhvhnonzjmr2fpo24.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten._to_copy]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => convert_element_type_15
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_15 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_5 = async_compile.triton('triton_poi_fused__to_copy_5', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uh/cuhtdfvqja5t44jibacjgvwqhllkth7f5tgw4wxyqyukms4coyte.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => clamp_max_6, clamp_min_4, clamp_min_6, convert_element_type_14, iota_2, mul_20, sub_10
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_2 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (2,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_14 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_2, torch.float32), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_14, 0.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_4 : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_20, 0.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_4, %convert_element_type_17), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_6 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_10, 0.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_6 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_6, 1.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_6 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_6', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/46/c46ijc5cqdiqf273dffga2jwraqled6xgmkcavchigqg75worpzy.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2, x_16, x_17, out_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_18, add_19, add_20, mul_22, mul_23, mul_24, sub_11, sub_12, sub_14
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => add_23
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_16 => add_22, mul_26, mul_27, sub_15
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_17 => relu_5
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_15, [None, None, %convert_element_type_15, %convert_element_type_17]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_15, [None, None, %convert_element_type_15, %clamp_max_5]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_15, [None, None, %clamp_max_4, %convert_element_type_17]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_15, [None, None, %clamp_max_4, %clamp_max_5]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_6), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_22), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %clamp_max_6), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_23), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_14 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_19, %add_18), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_24 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_14, %clamp_max_7), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_20 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_18, %mul_24), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_15, %unsqueeze_43), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_27 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_26, %unsqueeze_45), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_22 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_27, %unsqueeze_47), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_22,), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_5, %add_20), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*i64', 'in_ptr11': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 2) % 2)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = ((xindex // 4) % 4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x5), xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr6 + (x3), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr7 + (x3), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr8 + (x3), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr9 + (x3), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr10 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr11 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp9 - tmp9
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 + tmp16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 - tmp19
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 1e-05
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = libdevice.sqrt(tmp23)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 1, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 / tmp24
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 1.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp20 * tmp28
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1], 0, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.maximum(tmp34, tmp33)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 + tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp38, tmp37, tmp36)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp17 - tmp17
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 * tmp41
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp17 + tmp42
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp35 + tmp43
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x5), tmp44, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lz/clz3wnzsiiicdw5qzyweqwoicegmpsdaaiyxoqmy5gof7n45hz34.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten._to_copy]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => convert_element_type_21
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_21 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_4, torch.int64), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_8 = async_compile.triton('triton_poi_fused__to_copy_8', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_8(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mg/cmgkt2xfwymnqchrf7po5xcsi7tusremib5aiprut4vecyjocecw.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.add, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => add_24, clamp_max_8
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_21, 1), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_8 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_24, 1), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_9 = async_compile.triton('triton_poi_fused_add_clamp_9', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_9(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.minimum(tmp8, tmp7)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yb/cybze5mghmgjrnsr2ymyqnsnfwq4dqq3gzkscny7ptjkalqd6ycn.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => clamp_max_10, clamp_min_10, clamp_min_8, convert_element_type_20, iota_4, mul_28, sub_16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_4 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_20 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_4, torch.float32), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_20, 0.3333333333333333), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_8 : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_28, 0.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_16 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_8, %convert_element_type_23), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_10 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_16, 0.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_10 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_10, 1.0), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_10 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_10', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_10(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp8, tmp4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lt/cltnfohd4bxuff2cvikcyhen73kk6y73et42zthcvovbptkivjna.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.mean]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => mean
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [-1, -2], True), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_11 = async_compile.triton('triton_per_fused_mean_11', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_11', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_11(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6c/c6c2cqzysoxddjq3ma7kvhop4rf26yi2oibewcqpfcczm7uxt5iq.py
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_4, x_19, x_20, out_5, x_22, x_23, out_6], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => _unsafe_index_10, _unsafe_index_11, _unsafe_index_8, _unsafe_index_9, add_26, add_27, add_28, mul_30, mul_31, mul_32, sub_17, sub_18, sub_20
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_5 => mul_36
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_6 => add_33
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_19 => add_30, mul_34, mul_35, sub_21
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_20 => relu_6
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_22 => add_32, mul_38, mul_39, sub_22
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_23 => relu_7
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_8 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_23, [None, None, %convert_element_type_21, %convert_element_type_23]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_9 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_23, [None, None, %convert_element_type_21, %clamp_max_9]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_10 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_23, [None, None, %clamp_max_8, %convert_element_type_23]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_11 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_23, [None, None, %clamp_max_8, %clamp_max_9]), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_17 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_9, %_unsafe_index_8), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_17, %clamp_max_10), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_26 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_8, %mul_30), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_18 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_11, %_unsafe_index_10), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_18, %clamp_max_10), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_27 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_10, %mul_31), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_20 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_27, %add_26), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_32 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_20, %clamp_max_11), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_28 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_26, %mul_32), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_6, %unsqueeze_49), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_21, %unsqueeze_51), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_34, %unsqueeze_53), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_30 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_35, %unsqueeze_55), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_6 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_30,), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_36 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%relu_6, %add_28), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_22 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_7, %unsqueeze_57), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_38 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_22, %unsqueeze_59), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_39 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_38, %unsqueeze_61), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_32 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_39, %unsqueeze_63), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_7 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_32,), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_33 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_7, %mul_36), kwargs = {})
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12', '''
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = ((xindex // 16) % 4)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr7 + (x2), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr8 + (x6), xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr9 + (x4), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr10 + (x4), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr11 + (x4), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr12 + (x4), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 2, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (tmp8 + 2*tmp4 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (tmp13 + 2*tmp4 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 - tmp9
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp9 + tmp17
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp1
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < 0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(tmp21, tmp20, tmp19)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr2 + (tmp8 + 2*tmp22 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr2 + (tmp13 + 2*tmp22 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp23
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 + tmp26
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp18
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp18 + tmp30
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 - tmp34
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 1e-05
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 + tmp37
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = libdevice.sqrt(tmp38)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1], 1, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 / tmp39
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 1.0
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 * tmp42
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp35 * tmp43
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp44 * tmp45
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 + tmp47
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.full([1], 0, tl.int32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp49, tmp48)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 * tmp31
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp32 + tmp51
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x6), tmp31, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp52, xmask)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41 = args
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4, 5, 5), (100, 25, 5, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 4, 7, 7), (196, 49, 7, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (4, ), (1, ))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_2, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 2, 2), (16, 4, 2, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_0.run(buf0, primals_3, primals_4, primals_5, primals_6, buf1, 64, grid=grid(64), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_7, stride=(2, 2), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf2, primals_8, primals_9, primals_10, primals_11, buf3, 16, grid=grid(16), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_12, stride=(2, 2), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7, x_8], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf4, primals_13, primals_14, primals_15, primals_16, buf5, 16, grid=grid(16), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten.convolution]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_17, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_2.run(buf10, 1, grid=grid(1), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.add, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_2.run(buf11, 1, grid=grid(1), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_3.run(buf12, 1, grid=grid(1), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.sub, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_3.run(buf13, 1, grid=grid(1), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf3, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf7; del buf7  # reuse
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10, x_11, out, x_13, x_14, out_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4.run(buf15, buf6, primals_18, primals_19, primals_20, primals_21, buf14, primals_23, primals_24, primals_25, primals_26, buf10, buf11, buf12, buf13, 16, grid=grid(16), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((1, 1), (1, 1), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten._to_copy]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_2.run(buf8, 1, grid=grid(1), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((1, 1), (1, 1), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.add, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_2.run(buf9, 1, grid=grid(1), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((2, 1), (1, 1), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten._to_copy]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_5.run(buf16, 2, grid=grid(2), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((2, 1), (1, 1), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.add, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_5.run(buf17, 2, grid=grid(2), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_5.run(buf18, 2, grid=grid(2), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.add, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_5.run(buf19, 2, grid=grid(2), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((2, ), (1, ), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_6.run(buf20, 2, grid=grid(2), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((2, 1), (1, 1), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.sub, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_6.run(buf22, 2, grid=grid(2), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_15], Original ATen: [aten.convolution]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf1, primals_27, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 4, 2, 2), (16, 4, 2, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf21; del buf21  # reuse
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2, x_16, x_17, out_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7.run(buf24, buf16, buf18, buf15, buf19, buf20, buf23, primals_28, primals_29, primals_30, primals_31, buf17, buf22, 64, grid=grid(64), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten._to_copy]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_8.run(buf25, 4, grid=grid(4), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.add, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_9.run(buf26, 4, grid=grid(4), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_8.run(buf27, 4, grid=grid(4), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.add, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_9.run(buf28, 4, grid=grid(4), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_10.run(buf29, 4, grid=grid(4), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.sub, aten.clamp]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_10.run(buf31, 4, grid=grid(4), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_18], Original ATen: [aten.convolution]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = extern_kernels.convolution(primals_1, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf33, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = buf15; del buf15  # reuse
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = reinterpret_tensor(buf34, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf34  # reuse
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.mean]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_11.run(buf35, primals_1, 16, 16, grid=grid(16), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_21], Original ATen: [aten.convolution]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf35, primals_37, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_22, x_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf36, primals_38, primals_39, primals_40, primals_41, buf37, 16, grid=grid(16), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = buf30; del buf30  # reuse
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4, x_19, x_20, out_5, x_22, x_23, out_6], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12.run(buf32, buf25, buf27, buf24, buf28, buf29, buf26, buf31, buf37, buf33, primals_33, primals_34, primals_35, primals_36, buf38, 256, grid=grid(256), stream=stream0)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf24
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf37
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf38, primals_1, primals_2, primals_3, primals_4, primals_5, primals_7, primals_8, primals_9, primals_10, primals_12, primals_13, primals_14, primals_15, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, buf0, buf1, buf2, buf3, buf4, buf5, buf6, buf8, buf9, buf10, buf11, buf12, buf13, buf14, buf16, buf17, buf18, buf19, buf20, buf22, buf23, buf25, buf26, buf27, buf28, buf29, buf31, buf32, buf33, buf35, buf36, )
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4, 5, 5), (100, 25, 5, 1), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 4, 7, 7), (196, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41])
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:11:58.880000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:11:58.904000 3347018 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3o/c3oavbbj7n2h4tlwv6tkcsolvjtxu5w7n7klxntv7jrqdzd7mgyg.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7t/c7tg6cvo2nxgvuh6ws5wdsqrcvp6lom4l2rrvbbi2r2dsngaxl5n.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_1, mul_1, mul_2, sub
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => relu
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_0', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/o7/co7umherztjjl4wixyu74qkhlq5aozyafblxjypboqy3d22sptwa.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => add_3, mul_4, mul_5, sub_1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => relu_1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_1', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4v/c4vyyiq7ty7k4wwiemlwwxxaelgdtjrocgm5eetnhnh3fxxqplca.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => clamp_min, convert_element_type_11, convert_element_type_8, iota, mul_12
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (1,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_8 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_8, 0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_12, 0.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_11 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min, torch.int64), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_2 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_2', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp0, None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/su/csuiher3qkoi4vqlu4twjqjvikutxroeq4vnkmn2wojcfw7uui6r.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => clamp_max_2, clamp_min, clamp_min_2, convert_element_type_8, iota, mul_12, sub_4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (1,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_8 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_8, 0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_12, 0.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_11), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_4, 0.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_3 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_3', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp0, None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/62/c62gibs4cdit3jsnoud5nwv5u5ug3kuz3hgxq5ttuz5r2jcxrlhx.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_10, x_11, out, x_13, x_14, out_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_10, add_11, add_12, mul_14, mul_15, mul_16, sub_5, sub_6, sub_8
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => add_15
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_10 => add_7, mul_10, mul_11, sub_3
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_11 => relu_3
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_13 => add_14, mul_18, mul_19, sub_9
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_14 => relu_4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_29), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_31), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=4] = call_function[target=torch.ops.aten.relu.default](args = (%add_7,), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_3, [None, None, %convert_element_type_9, %convert_element_type_11]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_3, [None, None, %convert_element_type_9, %clamp_max_1]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_3, [None, None, %clamp_max, %convert_element_type_11]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_3, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %clamp_max_2), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_14), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_2), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_15), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_11, %add_10), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %clamp_max_3), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_10, %mul_16), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_35), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_18, %unsqueeze_37), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_19, %unsqueeze_39), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_14,), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_4, %add_12), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*i64', 'in_ptr11': '*i64', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x2), xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr8 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr9 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr10 + (0))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [XBLOCK])
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr11 + (0))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.broadcast_to(tmp38, [XBLOCK])
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr12 + (0))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.broadcast_to(tmp44, [XBLOCK])
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr13 + (0))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.broadcast_to(tmp49, [XBLOCK])
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 - tmp19
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.sqrt(tmp22)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp7 / tmp23
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp9
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp20 * tmp25
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = triton_helpers.maximum(tmp16, tmp30)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([XBLOCK], 1, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 + tmp34
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.where(tmp36, tmp35, tmp33)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp34
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.where(tmp41, tmp40, tmp39)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp17 - tmp17
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp43 * tmp45
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp17 + tmp46
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 - tmp47
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp48 * tmp50
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp47 + tmp51
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp31 + tmp52
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp53, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bj/cbjorvxc3eqphtqizc2odhiskwmxlkakaqidhvhnonzjmr2fpo24.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten._to_copy]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => convert_element_type_15
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_15 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_5 = async_compile.triton('triton_poi_fused__to_copy_5', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/uh/cuhtdfvqja5t44jibacjgvwqhllkth7f5tgw4wxyqyukms4coyte.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => clamp_max_6, clamp_min_4, clamp_min_6, convert_element_type_14, iota_2, mul_20, sub_10
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_2 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (2,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_14 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_2, torch.float32), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_14, 0.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_4 : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_20, 0.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_4, %convert_element_type_17), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_6 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_10, 0.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_6 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_6, 1.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_6 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_6', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/46/c46ijc5cqdiqf273dffga2jwraqled6xgmkcavchigqg75worpzy.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2, x_16, x_17, out_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_18, add_19, add_20, mul_22, mul_23, mul_24, sub_11, sub_12, sub_14
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => add_23
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_16 => add_22, mul_26, mul_27, sub_15
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_17 => relu_5
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_15, [None, None, %convert_element_type_15, %convert_element_type_17]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_15, [None, None, %convert_element_type_15, %clamp_max_5]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_15, [None, None, %clamp_max_4, %convert_element_type_17]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_15, [None, None, %clamp_max_4, %clamp_max_5]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_6), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_22), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %clamp_max_6), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_23), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_14 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_19, %add_18), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_24 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_14, %clamp_max_7), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_20 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_18, %mul_24), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_15, %unsqueeze_43), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_27 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_26, %unsqueeze_45), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_22 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_27, %unsqueeze_47), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_22,), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_5, %add_20), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*i64', 'in_ptr11': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 2) % 2)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = ((xindex // 4) % 4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x5), xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr6 + (x3), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr7 + (x3), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr8 + (x3), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr9 + (x3), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr10 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr11 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp9 - tmp9
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 + tmp16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 - tmp19
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 1e-05
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = libdevice.sqrt(tmp23)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 1, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 / tmp24
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 1.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp20 * tmp28
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1], 0, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.maximum(tmp34, tmp33)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 + tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp38, tmp37, tmp36)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp17 - tmp17
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 * tmp41
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp17 + tmp42
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp35 + tmp43
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x5), tmp44, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lz/clz3wnzsiiicdw5qzyweqwoicegmpsdaaiyxoqmy5gof7n45hz34.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten._to_copy]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => convert_element_type_21
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_21 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_4, torch.int64), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_8 = async_compile.triton('triton_poi_fused__to_copy_8', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_8(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mg/cmgkt2xfwymnqchrf7po5xcsi7tusremib5aiprut4vecyjocecw.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.add, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => add_24, clamp_max_8
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_21, 1), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_8 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_24, 1), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_9 = async_compile.triton('triton_poi_fused_add_clamp_9', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_9(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.minimum(tmp8, tmp7)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yb/cybze5mghmgjrnsr2ymyqnsnfwq4dqq3gzkscny7ptjkalqd6ycn.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => clamp_max_10, clamp_min_10, clamp_min_8, convert_element_type_20, iota_4, mul_28, sub_16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_4 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_20 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_4, torch.float32), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_20, 0.3333333333333333), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_8 : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_28, 0.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_16 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_8, %convert_element_type_23), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_10 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_16, 0.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_10 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_10, 1.0), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_10 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_10', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_10(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp8, tmp4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lt/cltnfohd4bxuff2cvikcyhen73kk6y73et42zthcvovbptkivjna.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.mean]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => mean
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [-1, -2], True), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_11 = async_compile.triton('triton_per_fused_mean_11', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_11', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_11(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6c/c6c2cqzysoxddjq3ma7kvhop4rf26yi2oibewcqpfcczm7uxt5iq.py
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_4, x_19, x_20, out_5, x_22, x_23, out_6], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => _unsafe_index_10, _unsafe_index_11, _unsafe_index_8, _unsafe_index_9, add_26, add_27, add_28, mul_30, mul_31, mul_32, sub_17, sub_18, sub_20
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_5 => mul_36
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_6 => add_33
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_19 => add_30, mul_34, mul_35, sub_21
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_20 => relu_6
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_22 => add_32, mul_38, mul_39, sub_22
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_23 => relu_7
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_8 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_23, [None, None, %convert_element_type_21, %convert_element_type_23]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_9 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_23, [None, None, %convert_element_type_21, %clamp_max_9]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_10 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_23, [None, None, %clamp_max_8, %convert_element_type_23]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_11 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_23, [None, None, %clamp_max_8, %clamp_max_9]), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_17 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_9, %_unsafe_index_8), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_17, %clamp_max_10), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_26 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_8, %mul_30), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_18 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_11, %_unsafe_index_10), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_18, %clamp_max_10), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_27 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_10, %mul_31), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_20 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_27, %add_26), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_32 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_20, %clamp_max_11), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_28 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_26, %mul_32), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_6, %unsqueeze_49), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_21, %unsqueeze_51), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_34, %unsqueeze_53), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_30 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_35, %unsqueeze_55), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_6 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_30,), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_36 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%relu_6, %add_28), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_22 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_7, %unsqueeze_57), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_38 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_22, %unsqueeze_59), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_39 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_38, %unsqueeze_61), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_32 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_39, %unsqueeze_63), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_7 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_32,), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_33 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_7, %mul_36), kwargs = {})
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12', '''
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = ((xindex // 16) % 4)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr7 + (x2), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr8 + (x6), xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr9 + (x4), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr10 + (x4), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr11 + (x4), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr12 + (x4), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 2, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (tmp8 + 2*tmp4 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (tmp13 + 2*tmp4 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 - tmp9
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp9 + tmp17
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp1
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < 0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(tmp21, tmp20, tmp19)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr2 + (tmp8 + 2*tmp22 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr2 + (tmp13 + 2*tmp22 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp23
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 + tmp26
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp18
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp18 + tmp30
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 - tmp34
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 1e-05
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 + tmp37
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = libdevice.sqrt(tmp38)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1], 1, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 / tmp39
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 1.0
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 * tmp42
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp35 * tmp43
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp44 * tmp45
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 + tmp47
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.full([1], 0, tl.int32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp49, tmp48)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 * tmp31
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp32 + tmp51
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x6), tmp31, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp52, xmask)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41 = args
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4, 5, 5), (100, 25, 5, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 4, 7, 7), (196, 49, 7, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (4, ), (1, ))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_2, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 2, 2), (16, 4, 2, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_0.run(buf0, primals_3, primals_4, primals_5, primals_6, buf1, 64, grid=grid(64), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_7, stride=(2, 2), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf2, primals_8, primals_9, primals_10, primals_11, buf3, 16, grid=grid(16), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_12, stride=(2, 2), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7, x_8], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf4, primals_13, primals_14, primals_15, primals_16, buf5, 16, grid=grid(16), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten.convolution]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_17, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_2.run(buf10, 1, grid=grid(1), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.add, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_2.run(buf11, 1, grid=grid(1), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_3.run(buf12, 1, grid=grid(1), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.sub, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_3.run(buf13, 1, grid=grid(1), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf3, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf7; del buf7  # reuse
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10, x_11, out, x_13, x_14, out_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_4.run(buf15, buf6, primals_18, primals_19, primals_20, primals_21, buf14, primals_23, primals_24, primals_25, primals_26, buf10, buf11, buf12, buf13, 16, grid=grid(16), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((1, 1), (1, 1), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten._to_copy]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_2.run(buf8, 1, grid=grid(1), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((1, 1), (1, 1), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.add, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_2.run(buf9, 1, grid=grid(1), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((2, 1), (1, 1), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten._to_copy]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_5.run(buf16, 2, grid=grid(2), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((2, 1), (1, 1), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.add, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_5.run(buf17, 2, grid=grid(2), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_5.run(buf18, 2, grid=grid(2), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.add, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_5.run(buf19, 2, grid=grid(2), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((2, ), (1, ), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_6.run(buf20, 2, grid=grid(2), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((2, 1), (1, 1), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.sub, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_6.run(buf22, 2, grid=grid(2), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_15], Original ATen: [aten.convolution]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf1, primals_27, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 4, 2, 2), (16, 4, 2, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf21; del buf21  # reuse
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2, x_16, x_17, out_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_7.run(buf24, buf16, buf18, buf15, buf19, buf20, buf23, primals_28, primals_29, primals_30, primals_31, buf17, buf22, 64, grid=grid(64), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten._to_copy]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_8.run(buf25, 4, grid=grid(4), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.add, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_9.run(buf26, 4, grid=grid(4), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_8.run(buf27, 4, grid=grid(4), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.add, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_9.run(buf28, 4, grid=grid(4), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_10.run(buf29, 4, grid=grid(4), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.sub, aten.clamp]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_10.run(buf31, 4, grid=grid(4), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_18], Original ATen: [aten.convolution]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = extern_kernels.convolution(primals_1, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf33, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = buf15; del buf15  # reuse
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = reinterpret_tensor(buf34, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf34  # reuse
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.mean]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_11.run(buf35, primals_1, 16, 16, grid=grid(16), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_21], Original ATen: [aten.convolution]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf35, primals_37, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_22, x_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf36, primals_38, primals_39, primals_40, primals_41, buf37, 16, grid=grid(16), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = buf30; del buf30  # reuse
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4, x_19, x_20, out_5, x_22, x_23, out_6], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_12.run(buf32, buf25, buf27, buf24, buf28, buf29, buf26, buf31, buf37, buf33, primals_33, primals_34, primals_35, primals_36, buf38, 256, grid=grid(256), stream=stream0)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf24
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf37
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf38, primals_1, primals_2, primals_3, primals_4, primals_5, primals_7, primals_8, primals_9, primals_10, primals_12, primals_13, primals_14, primals_15, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, buf0, buf1, buf2, buf3, buf4, buf5, buf6, buf8, buf9, buf10, buf11, buf12, buf13, buf14, buf16, buf17, buf18, buf19, buf20, buf22, buf23, buf25, buf26, buf27, buf28, buf29, buf31, buf32, buf33, buf35, buf36, )
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4, 5, 5), (100, 25, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 4, 7, 7), (196, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41])
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:01:20.124000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:01:20.147000 906920 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ny/cny2a47ivdkd5uckwso5fjs7ak7ocjvgrra3smhmcddbokpww4k4.py
