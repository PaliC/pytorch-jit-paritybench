V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/k7/ck7puy6axkf25sf5rgwfawhaahf4bbuhv6cuakgjvb7qul3k5cl3.py
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu1, mu2, mul_3, mul_1, mul_2], Original ATen: [aten.convolution, aten.mul]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu1 => convolution
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu2 => convolution_1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%arg0_1, %arg1_1, None, [1, 1], [5, 5], [1, 1], False, [0, 0], 4), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%arg2_1, %arg1_1, None, [1, 1], [5, 5], [1, 1], False, [0, 0], 4), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg2_1), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg0_1), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg2_1, %arg2_1), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_mul_0 = async_compile.triton('triton_poi_fused_convolution_mul_0', '''
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_mul_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_mul_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, out_ptr3, out_ptr4, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2 + 16*y3), xmask & ymask)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp0
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 4*x2 + 64*y1), tmp1, xmask & ymask)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (y0 + 4*x2 + 64*y1), tmp2, xmask & ymask)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (y0 + 4*x2 + 64*y1), tmp3, xmask & ymask)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (y0 + 4*x2 + 64*y1), tmp4, xmask & ymask)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tm/ctmaprbis5w5wypjqj4dsjodv6snu43auxfmkthlhiupvee4tw45.py
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu1_mu2, mul_4, add, sigma12, mul_5, add_1, mul_6, mu1_sq, mu2_sq, add_2, add_3, sigma1_sq, sigma2_sq, add_4, add_5, mul_7, ssim_map, mean], Original ATen: [aten.mul, aten.add, aten.sub, aten.pow, aten.div, aten.mean]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu1_mu2 => mul
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu1_sq => pow_1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu2_sq => pow_2
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_6
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_7
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma12 => sub_2
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma1_sq => sub
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma2_sq => sub_1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ssim_map => div
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, %convolution_1), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, 2), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, 0.0001), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %mul), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, 2), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, 0.0009), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, %add_1), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%convolution, 2), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%convolution_1, 2), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, 0.0001), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %pow_1), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %pow_2), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub, %sub_1), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, 0.0009), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, %add_5), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_6, %mul_7), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%div,), kwargs = {})
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_mean_mul_pow_sub_1 = async_compile.triton('triton_per_fused_add_div_mean_mul_pow_sub_1', '''
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_mean_mul_pow_sub_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_mean_mul_pow_sub_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, rnumel):
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (r0), None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (r0), None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (r0), None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 2.0
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0001
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 - tmp2
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp3
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0009
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 * tmp11
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 * tmp0
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp1 * tmp1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp5
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 - tmp13
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 - tmp14
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp10
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp16 * tmp22
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp12 / tmp23
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [RBLOCK])
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.promote_to_tensor(tl.sum(tmp25, 0))
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 256.0
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 / tmp28
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp29, None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 1, 11, 11), (121, 121, 11, 1))
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu1, mu2, mul_3, mul_1, mul_2], Original ATen: [aten.convolution, aten.mul]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_mul_0.run(arg0_1, arg2_1, buf0, buf2, buf4, buf6, buf8, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu1], Original ATen: [aten.convolution]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4, 4), (64, 1, 16, 4))
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu2], Original ATen: [aten.convolution]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 4, 4, 4), (64, 1, 16, 4))
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_3, conv2d_4], Original ATen: [aten.mul, aten.convolution]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 4, 4), (64, 1, 16, 4))
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, conv2d_2], Original ATen: [aten.mul, aten.convolution]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf6, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 4, 4, 4), (64, 1, 16, 4))
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, conv2d_3], Original ATen: [aten.mul, aten.convolution]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 4, 4, 4), (64, 1, 16, 4))
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((), (), torch.float32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf10; del buf10  # reuse
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu1_mu2, mul_4, add, sigma12, mul_5, add_1, mul_6, mu1_sq, mu2_sq, add_2, add_3, sigma1_sq, sigma2_sq, add_4, add_5, mul_7, ssim_map, mean], Original ATen: [aten.mul, aten.add, aten.sub, aten.pow, aten.div, aten.mean]
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_mean_mul_pow_sub_1.run(buf11, buf1, buf3, buf5, buf7, buf9, 1, 256, grid=grid(1), stream=stream0)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf11, )
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 1, 11, 11), (121, 121, 11, 1), device='cuda:0', dtype=torch.float32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:21:33.684000 3845413 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:33.688000 3845413 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/n6/cn67cow5u754zjvlzpbcglaoftkxm6zuzfmc6wbpi2rd2v3htvhh.py
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/k7/ck7puy6axkf25sf5rgwfawhaahf4bbuhv6cuakgjvb7qul3k5cl3.py
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu1, mu2, mul_3, mul_1, mul_2], Original ATen: [aten.convolution, aten.mul]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu1 => convolution
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu2 => convolution_1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%arg0_1, %arg1_1, None, [1, 1], [5, 5], [1, 1], False, [0, 0], 4), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%arg2_1, %arg1_1, None, [1, 1], [5, 5], [1, 1], False, [0, 0], 4), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg2_1), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg0_1), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg2_1, %arg2_1), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_mul_0 = async_compile.triton('triton_poi_fused_convolution_mul_0', '''
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_mul_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_mul_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, out_ptr3, out_ptr4, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2 + 16*y3), xmask & ymask)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp0
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 * tmp1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 4*x2 + 64*y1), tmp1, xmask & ymask)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (y0 + 4*x2 + 64*y1), tmp2, xmask & ymask)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (y0 + 4*x2 + 64*y1), tmp3, xmask & ymask)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (y0 + 4*x2 + 64*y1), tmp4, xmask & ymask)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tm/ctmaprbis5w5wypjqj4dsjodv6snu43auxfmkthlhiupvee4tw45.py
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu1_mu2, mul_4, add, sigma12, mul_5, add_1, mul_6, mu1_sq, mu2_sq, add_2, add_3, sigma1_sq, sigma2_sq, add_4, add_5, mul_7, ssim_map, mean], Original ATen: [aten.mul, aten.add, aten.sub, aten.pow, aten.div, aten.mean]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu1_mu2 => mul
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu1_sq => pow_1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu2_sq => pow_2
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_6
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_7
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma12 => sub_2
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma1_sq => sub
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma2_sq => sub_1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ssim_map => div
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, %convolution_1), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, 2), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, 0.0001), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %mul), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, 2), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, 0.0009), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, %add_1), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%convolution, 2), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%convolution_1, 2), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, 0.0001), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %pow_1), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %pow_2), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub, %sub_1), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, 0.0009), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, %add_5), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_6, %mul_7), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%div,), kwargs = {})
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_mean_mul_pow_sub_1 = async_compile.triton('triton_per_fused_add_div_mean_mul_pow_sub_1', '''
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_mean_mul_pow_sub_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_mean_mul_pow_sub_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, rnumel):
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (r0), None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (r0), None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (r0), None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 2.0
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0001
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 - tmp2
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp3
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0009
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 * tmp11
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 * tmp0
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp1 * tmp1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp5
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 - tmp13
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 - tmp14
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp10
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp16 * tmp22
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp12 / tmp23
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [RBLOCK])
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.promote_to_tensor(tl.sum(tmp25, 0))
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 256.0
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 / tmp28
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp29, None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 1, 11, 11), (121, 121, 11, 1))
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu1, mu2, mul_3, mul_1, mul_2], Original ATen: [aten.convolution, aten.mul]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_mul_0.run(arg0_1, arg2_1, buf0, buf2, buf4, buf6, buf8, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu1], Original ATen: [aten.convolution]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4, 4), (64, 1, 16, 4))
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu2], Original ATen: [aten.convolution]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 4, 4, 4), (64, 1, 16, 4))
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_3, conv2d_4], Original ATen: [aten.mul, aten.convolution]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 4, 4), (64, 1, 16, 4))
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, conv2d_2], Original ATen: [aten.mul, aten.convolution]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf6, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 4, 4, 4), (64, 1, 16, 4))
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, conv2d_3], Original ATen: [aten.mul, aten.convolution]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, arg1_1, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 4, 4, 4), (64, 1, 16, 4))
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((), (), torch.float32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf10; del buf10  # reuse
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu1_mu2, mul_4, add, sigma12, mul_5, add_1, mul_6, mu1_sq, mu2_sq, add_2, add_3, sigma1_sq, sigma2_sq, add_4, add_5, mul_7, ssim_map, mean], Original ATen: [aten.mul, aten.add, aten.sub, aten.pow, aten.div, aten.mean]
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_mean_mul_pow_sub_1.run(buf11, buf1, buf3, buf5, buf7, buf9, 1, 256, grid=grid(1), stream=stream0)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf11, )
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 1, 11, 11), (121, 121, 11, 1), device='cuda:0', dtype=torch.float32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:10:24.047000 1137208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:24.051000 1137208 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/aj/cajet6cuk7ntesftyshgtisbcfissxuvoigkyc2qwinvryegchxk.py
