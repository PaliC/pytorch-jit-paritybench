V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qh/cqhfhuqz2sib3ublo5xr75i74altlle67ijgifr4plz2uucgm6nd.py
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_tensor_1
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_1, %primals_3), kwargs = {})
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_1,), kwargs = {})
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_0 = async_compile.triton('triton_poi_fused_addmm_relu_0', '''
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ye/cye64ackwipj6u2cqps7x24wgwnxtvmsoxdtuocbd4yogbdr4ubq.py
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, anchor], Original ATen: [aten.addmm, aten.add]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   anchor => add
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_tensor
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_5), kwargs = {})
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %add_tensor), kwargs = {})
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_1 = async_compile.triton('triton_poi_fused_add_addmm_1', '''
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fn/cfnrlteaneranlftdb3i257vcjen2ofpc3un7qrsgvpssdckocui.py
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => getitem_1
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_1 : [num_users=1] = call_function[target=operator.getitem](args = (%max_1, 1), kwargs = {})
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_2 = async_compile.triton('triton_poi_fused_max_2', '''
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 > tmp17
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 > tmp32
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/az/cazk2qgbn2e7nm2lbtv5wfrx7jwdakv7soiylxnfioxbxdl2tlvo.py
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1, logits_1], Original ATen: [aten.max, aten.sub]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits_1 => sub
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=2] = call_function[target=torch.ops.aten.max.dim](args = (%mm_1, 1, True), kwargs = {})
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mm_1, %getitem), kwargs = {})
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_sub_3 = async_compile.triton('triton_poi_fused_max_sub_3', '''
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_sub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_sub_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4), (4, 1))
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(primals_1, reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), out=buf0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_0.run(buf1, primals_3, 16, grid=grid(16), stream=stream0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf1, reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf2)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, anchor], Original ATen: [aten.addmm, aten.add]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_1.run(buf3, primals_1, primals_5, 16, grid=grid(16), stream=stream0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pred], Original ATen: [aten.mm]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf3, reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf4)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.mm]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf4, reinterpret_tensor(primals_7, (4, 4), (1, 4), 0), out=buf5)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_2.run(buf5, buf6, 4, grid=grid(4), stream=stream0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf4; del buf4  # reuse
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1, logits_1], Original ATen: [aten.max, aten.sub]
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_sub_3.run(buf5, buf7, 16, grid=grid(16), stream=stream0)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_1, buf1, buf3, buf6, primals_7, primals_6, primals_4, )
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:01:17.013000 988400 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:17.018000 988400 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bx/cbxhb6crvcsudsefhcgktciopfajdznp4fepcke7qgcfnxfsq75r.py
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qh/cqhfhuqz2sib3ublo5xr75i74altlle67ijgifr4plz2uucgm6nd.py
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_tensor_1
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_1, %primals_3), kwargs = {})
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_1,), kwargs = {})
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_0 = async_compile.triton('triton_poi_fused_addmm_relu_0', '''
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ye/cye64ackwipj6u2cqps7x24wgwnxtvmsoxdtuocbd4yogbdr4ubq.py
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, anchor], Original ATen: [aten.addmm, aten.add]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   anchor => add
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_tensor
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_5), kwargs = {})
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %add_tensor), kwargs = {})
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_1 = async_compile.triton('triton_poi_fused_add_addmm_1', '''
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fn/cfnrlteaneranlftdb3i257vcjen2ofpc3un7qrsgvpssdckocui.py
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => getitem_1
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_1 : [num_users=1] = call_function[target=operator.getitem](args = (%max_1, 1), kwargs = {})
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_2 = async_compile.triton('triton_poi_fused_max_2', '''
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 > tmp17
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 > tmp32
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/az/cazk2qgbn2e7nm2lbtv5wfrx7jwdakv7soiylxnfioxbxdl2tlvo.py
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1, logits_1], Original ATen: [aten.max, aten.sub]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits_1 => sub
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=2] = call_function[target=torch.ops.aten.max.dim](args = (%mm_1, 1, True), kwargs = {})
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mm_1, %getitem), kwargs = {})
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_sub_3 = async_compile.triton('triton_poi_fused_max_sub_3', '''
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_sub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_sub_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4), (4, 1))
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(primals_1, reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), out=buf0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_0.run(buf1, primals_3, 16, grid=grid(16), stream=stream0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf1, reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf2)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, anchor], Original ATen: [aten.addmm, aten.add]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_1.run(buf3, primals_1, primals_5, 16, grid=grid(16), stream=stream0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pred], Original ATen: [aten.mm]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf3, reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf4)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.mm]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf4, reinterpret_tensor(primals_7, (4, 4), (1, 4), 0), out=buf5)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_2.run(buf5, buf6, 4, grid=grid(4), stream=stream0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf4; del buf4  # reuse
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1, logits_1], Original ATen: [aten.max, aten.sub]
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_sub_3.run(buf5, buf7, 16, grid=grid(16), stream=stream0)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_1, buf1, buf3, buf6, primals_7, primals_6, primals_4, )
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:50:27.945000 2291034 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:27.951000 2291034 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/gd/cgd6dnesulb5jcmxdu5v654jywbuumggaculv5bobmujd52vyngt.py
