V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['143_forward']
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7h/c7hll3p3g7bjftvtdrnoa63dt2shyegjqqioaxie3e2g5evcofwu.py
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 2048
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 512)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 512
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), None, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 512*x2 + 2097152*y1), tmp0, None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [channel_wq_2], Original ATen: [aten._softmax]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   channel_wq_2 => amax, div, exp, sub, sum_1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_1, [1], True), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__softmax_1 = async_compile.triton('triton_red_fused__softmax_1', '''
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 4096},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__softmax_1(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp5 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tmp0 + tmp2
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = triton_helpers.maximum(_tmp5, tmp4)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp5 = tl.where(rmask & xmask, tmp6, _tmp5)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.max2(_tmp5, 1)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (0))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp14 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tl.load(in_out_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp7 + tmp9
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tmp10 - tmp5
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp12 = tl_math.exp(tmp11)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp15 = _tmp14 + tmp13
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp14 = tl.where(rmask & xmask, tmp15, _tmp14)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.sum(_tmp14, 1)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (0))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp16 = tl.load(in_out_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp19 = tmp16 + tmp18
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = tmp19 - tmp5
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp21 = tl_math.exp(tmp20)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp22 = tmp21 / tmp14
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr0 + (r1 + 4096*x0), tmp22, rmask & xmask)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rb/crbgxxbe4gipc7e23jtxwua55srfmdpppcqiabflolf2bokj35ui.py
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [channel_wv], Original ATen: [aten.convolution]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   channel_wv => convolution
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_2 = async_compile.triton('triton_poi_fused_convolution_2', '''
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 4096}, tile_hint=TileHint.DEFAULT,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_2(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 1048576*y1), None, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4096*y3), tmp2, None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vt/cvth7t3ljnwyljpowry5j3invlzo3hoibuwypgxnrinwsueprmxl.py
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_2, layer_norm, sigmoid], Original ATen: [aten.convolution, aten.native_layer_norm, aten.sigmoid]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_2 => convolution_2
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm => add, add_1, mul, mul_1, rsqrt, sub_1, var_mean
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_6, %primals_7, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%permute, [2]), kwargs = {correction: 0, keepdim: True})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%permute, %getitem_1), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_8), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_9), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_1,), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_convolution_native_layer_norm_sigmoid_3 = async_compile.triton('triton_per_fused_convolution_native_layer_norm_sigmoid_3', '''
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 512},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_convolution_native_layer_norm_sigmoid_3', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 4, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_convolution_native_layer_norm_sigmoid_3(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, rnumel):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 512
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 512
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 512*x0), None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), None, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr2 + (r1), None, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp3, [RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.promote_to_tensor(tl.sum(tmp5, 0))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 512, tl.int32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 - tmp10
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.promote_to_tensor(tl.sum(tmp13, 0))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 512.0
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 / tmp16
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 1e-05
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.rsqrt(tmp19)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp2 - tmp10
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp20
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp23
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sigmoid(tmp26)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 512*x0), tmp2, None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (x0), tmp20, None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 512*x0), tmp27, None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uf/cufw522jr3xubexovqctxx734wbnbgxdjra5vq6ikh7czmam6ttu.py
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [spatial_wq, spatial_wq_1], Original ATen: [aten.convolution, aten.mean]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq => convolution_4
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq_1 => mean
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_12, %primals_13, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%convolution_4, [-1, -2], True), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_convolution_mean_4 = async_compile.triton('triton_red_fused_convolution_mean_4', '''
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768, 'r': 128},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_mean_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_convolution_mean_4(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 256*r2 + 32768*x1), rmask, eviction_policy='evict_first', other=0.0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 + tmp1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask, tmp5, _tmp4)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7a/c7ahtqi6blhudzo6kbl2zsc26p42zjvnps3piqeqejtrr6gdwzbi.py
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [spatial_wq, spatial_wq_1], Original ATen: [aten.convolution, aten.mean]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq => convolution_4
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq_1 => mean
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_12, %primals_13, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%convolution_4, [-1, -2], True), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_convolution_mean_5 = async_compile.triton('triton_per_fused_convolution_mean_5', '''
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 32},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_convolution_mean_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_convolution_mean_5(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 32
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 256*r2 + 8192*x1), xmask, other=0.0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gp/cgpjhkncq5wkx4x5xxxiqqac26zosppkxp32agp7fnelsftbzbnl.py
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [spatial_wq_3], Original ATen: [aten._softmax]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq_3 => amax_1, div_1, exp_1, sub_2, sum_2
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_8, [-1], True), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_8, %amax_1), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_2), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_6 = async_compile.triton('triton_per_fused__softmax_6', '''
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 256},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_6(in_out_ptr0, xnumel, rnumel):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 256*x0), None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 4096.0
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 / tmp1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp3, 0))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 - tmp5
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [RBLOCK])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.promote_to_tensor(tl.sum(tmp8, 0))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 / tmp10
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 256*x0), tmp11, None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/b5/cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [channel_out, spatial_weight, spatial_out, out], Original ATen: [aten.mul, aten.sigmoid, aten.add]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   channel_out => mul_2
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => add_2
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_out => mul_3
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_weight => sigmoid_1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_6, %primals_1), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%view_12,), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %primals_1), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %mul_2), kwargs = {})
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_7 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_7', '''
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16384, 'x': 512}, tile_hint=TileHint.DEFAULT,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_7(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16384
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4096
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4096)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y3), None, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x2 + 512*y3), xmask, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x2 + 512*y1), xmask, eviction_policy='evict_last')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp2
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 + tmp5
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4096*x2 + 2097152*y1), tmp6, xmask)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 512, 64, 64), (2097152, 4096, 64, 1))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 512, 1, 1), (512, 1, 1, 1))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 512, 1, 1), (512, 1, 1, 1))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, ), (1, ))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (512, 256, 1, 1), (256, 1, 1, 1))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (512, ), (1, ))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (512, ), (1, ))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (512, ), (1, ))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 512, 1, 1), (512, 1, 1, 1))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (256, 512, 1, 1), (512, 1, 1, 1))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 512, 64, 64), (2097152, 1, 32768, 512), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 2048, 4096, grid=grid(2048, 4096), stream=stream0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_wv], Original ATen: [aten.convolution]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 256, 64, 64), (1048576, 1, 16384, 256))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_wq], Original ATen: [aten.convolution]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf0, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 64, 64), (4096, 1, 64, 1))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf2, (4, 4096, 1), (4096, 1, 1), 0); del buf2  # reuse
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_wq_2], Original ATen: [aten._softmax]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__softmax_1.run(buf5, primals_5, 4, 4096, grid=grid(4), stream=stream0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 256, 64, 64), (1048576, 4096, 64, 1), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_wv], Original ATen: [aten.convolution]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_2.run(buf1, primals_3, buf6, 1024, 4096, grid=grid(1024, 4096), stream=stream0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 256, 1), (256, 1, 1), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.bmm]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf6, (4, 256, 4096), (1048576, 4096, 1), 0), buf5, out=buf7)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(reinterpret_tensor(buf7, (4, 256, 1, 1), (256, 1, 1, 1), 0), primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 512, 1, 1), (512, 1, 1, 1))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf8, (4, 512, 1, 1), (512, 1, 512, 512), 0); del buf8  # reuse
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 1, 1), (1, 1, 1), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf11, (4, 1, 1), (1, 1, 1), 0); del buf11  # reuse
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 1, 512), (512, 2048, 1), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2, layer_norm, sigmoid], Original ATen: [aten.convolution, aten.native_layer_norm, aten.sigmoid]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_convolution_native_layer_norm_sigmoid_3.run(buf9, buf13, primals_7, primals_8, primals_9, buf10, buf14, 4, 512, grid=grid(4), stream=stream0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wv], Original ATen: [aten.convolution]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf0, primals_10, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 256, 64, 64), (1048576, 1, 16384, 256))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wq], Original ATen: [aten.convolution]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf0, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 256, 64, 64), (1048576, 1, 16384, 256))
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 256, 1, 1, 32), (8192, 1, 32768, 32768, 256), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wq, spatial_wq_1], Original ATen: [aten.convolution, aten.mean]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_convolution_mean_4.run(buf16, primals_13, buf17, 32768, 128, grid=grid(32768), stream=stream0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 256, 1, 1), (256, 1, 1024, 1024), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wq, spatial_wq_1], Original ATen: [aten.convolution, aten.mean]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_convolution_mean_5.run(buf17, buf18, 1024, 32, grid=grid(1024), stream=stream0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = reinterpret_tensor(buf18, (4, 1, 256), (256, 256, 1), 0); del buf18  # reuse
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wq_3], Original ATen: [aten._softmax]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_6.run(buf21, 4, 256, grid=grid(4), stream=stream0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = reinterpret_tensor(buf16, (4, 256, 64, 64), (1048576, 4096, 64, 1), 0); del buf16  # reuse
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wv], Original ATen: [aten.convolution]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_2.run(buf15, primals_11, buf22, 1024, 4096, grid=grid(1024, 4096), stream=stream0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 1, 4096), (4096, 4096, 1), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wz], Original ATen: [aten.bmm]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(buf21, reinterpret_tensor(buf22, (4, 256, 4096), (1048576, 4096, 1), 0), out=buf23)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 512, 64, 64), (2097152, 4096, 64, 1), torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_out, spatial_weight, spatial_out, out], Original ATen: [aten.mul, aten.sigmoid, aten.add]
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_7.run(buf23, buf0, buf14, buf24, 16384, 512, grid=grid(16384, 512), stream=stream0)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf24, buf0, primals_2, primals_4, primals_6, primals_8, primals_9, primals_10, primals_12, buf5, reinterpret_tensor(buf7, (4, 256, 1, 1), (256, 1, 1, 1), 0), buf9, buf10, buf13, buf21, buf23, reinterpret_tensor(buf22, (4, 4096, 256), (1048576, 1, 4096), 0), reinterpret_tensor(buf6, (4, 4096, 256), (1048576, 1, 4096), 0), )
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 512, 64, 64), (2097152, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((512, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:44:22.015000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:22.027000 435219 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ie/ciezhfvq6f4htyelbnvb6tknajhxucnu7ds53b4biupkp5q6azul.py
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['143_forward']
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7h/c7hll3p3g7bjftvtdrnoa63dt2shyegjqqioaxie3e2g5evcofwu.py
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 2048
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 512)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 512
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), None, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 512*x2 + 2097152*y1), tmp0, None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [channel_wq_2], Original ATen: [aten._softmax]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   channel_wq_2 => amax, div, exp, sub, sum_1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_1, [1], True), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__softmax_1 = async_compile.triton('triton_red_fused__softmax_1', '''
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 4096},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__softmax_1(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp5 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tmp0 + tmp2
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = triton_helpers.maximum(_tmp5, tmp4)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp5 = tl.where(rmask & xmask, tmp6, _tmp5)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.max2(_tmp5, 1)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (0))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp14 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tl.load(in_out_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp7 + tmp9
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tmp10 - tmp5
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp12 = tl_math.exp(tmp11)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp15 = _tmp14 + tmp13
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp14 = tl.where(rmask & xmask, tmp15, _tmp14)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.sum(_tmp14, 1)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (0))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp16 = tl.load(in_out_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp19 = tmp16 + tmp18
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = tmp19 - tmp5
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp21 = tl_math.exp(tmp20)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp22 = tmp21 / tmp14
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr0 + (r1 + 4096*x0), tmp22, rmask & xmask)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rb/crbgxxbe4gipc7e23jtxwua55srfmdpppcqiabflolf2bokj35ui.py
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [channel_wv], Original ATen: [aten.convolution]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   channel_wv => convolution
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_2 = async_compile.triton('triton_poi_fused_convolution_2', '''
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 4096}, tile_hint=TileHint.DEFAULT,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_2(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 1048576*y1), None, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4096*y3), tmp2, None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vt/cvth7t3ljnwyljpowry5j3invlzo3hoibuwypgxnrinwsueprmxl.py
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_2, layer_norm, sigmoid], Original ATen: [aten.convolution, aten.native_layer_norm, aten.sigmoid]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_2 => convolution_2
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm => add, add_1, mul, mul_1, rsqrt, sub_1, var_mean
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_6, %primals_7, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%permute, [2]), kwargs = {correction: 0, keepdim: True})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%permute, %getitem_1), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_8), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_9), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_1,), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_convolution_native_layer_norm_sigmoid_3 = async_compile.triton('triton_per_fused_convolution_native_layer_norm_sigmoid_3', '''
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 512},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_convolution_native_layer_norm_sigmoid_3', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 4, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_convolution_native_layer_norm_sigmoid_3(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, rnumel):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 512
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 512
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 512*x0), None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), None, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr2 + (r1), None, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp3, [RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.promote_to_tensor(tl.sum(tmp5, 0))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 512, tl.int32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 - tmp10
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.promote_to_tensor(tl.sum(tmp13, 0))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 512.0
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 / tmp16
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 1e-05
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.rsqrt(tmp19)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp2 - tmp10
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp20
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp23
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sigmoid(tmp26)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 512*x0), tmp2, None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (x0), tmp20, None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 512*x0), tmp27, None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/uf/cufw522jr3xubexovqctxx734wbnbgxdjra5vq6ikh7czmam6ttu.py
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [spatial_wq, spatial_wq_1], Original ATen: [aten.convolution, aten.mean]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq => convolution_4
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq_1 => mean
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_12, %primals_13, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%convolution_4, [-1, -2], True), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_convolution_mean_4 = async_compile.triton('triton_red_fused_convolution_mean_4', '''
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768, 'r': 128},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_mean_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_convolution_mean_4(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 256*r2 + 32768*x1), rmask, eviction_policy='evict_first', other=0.0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask, tmp5, _tmp4)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7a/c7ahtqi6blhudzo6kbl2zsc26p42zjvnps3piqeqejtrr6gdwzbi.py
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [spatial_wq, spatial_wq_1], Original ATen: [aten.convolution, aten.mean]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq => convolution_4
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq_1 => mean
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_12, %primals_13, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%convolution_4, [-1, -2], True), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_convolution_mean_5 = async_compile.triton('triton_per_fused_convolution_mean_5', '''
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 32},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_convolution_mean_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_convolution_mean_5(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 32
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 256*r2 + 8192*x1), xmask, other=0.0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gp/cgpjhkncq5wkx4x5xxxiqqac26zosppkxp32agp7fnelsftbzbnl.py
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [spatial_wq_3], Original ATen: [aten._softmax]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_wq_3 => amax_1, div_1, exp_1, sub_2, sum_2
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_8, [-1], True), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_8, %amax_1), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_2), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_6 = async_compile.triton('triton_per_fused__softmax_6', '''
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 256},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_6(in_out_ptr0, xnumel, rnumel):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 256*x0), None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 4096.0
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 / tmp1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp3, 0))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 - tmp5
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [RBLOCK])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.promote_to_tensor(tl.sum(tmp8, 0))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 / tmp10
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 256*x0), tmp11, None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/b5/cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [channel_out, spatial_weight, spatial_out, out], Original ATen: [aten.mul, aten.sigmoid, aten.add]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   channel_out => mul_2
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => add_2
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_out => mul_3
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   spatial_weight => sigmoid_1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_6, %primals_1), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%view_12,), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %primals_1), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %mul_2), kwargs = {})
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_7 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_7', '''
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16384, 'x': 512}, tile_hint=TileHint.DEFAULT,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_7(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16384
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4096
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4096)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y3), None, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x2 + 512*y3), xmask, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x2 + 512*y1), xmask, eviction_policy='evict_last')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp2
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 + tmp5
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4096*x2 + 2097152*y1), tmp6, xmask)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 512, 64, 64), (2097152, 4096, 64, 1))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 512, 1, 1), (512, 1, 1, 1))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 512, 1, 1), (512, 1, 1, 1))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, ), (1, ))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (512, 256, 1, 1), (256, 1, 1, 1))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (512, ), (1, ))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (512, ), (1, ))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (512, ), (1, ))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 512, 1, 1), (512, 1, 1, 1))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (256, 512, 1, 1), (512, 1, 1, 1))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 512, 64, 64), (2097152, 1, 32768, 512), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 2048, 4096, grid=grid(2048, 4096), stream=stream0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_wv], Original ATen: [aten.convolution]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 256, 64, 64), (1048576, 1, 16384, 256))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_wq], Original ATen: [aten.convolution]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf0, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 64, 64), (4096, 1, 64, 1))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf2, (4, 4096, 1), (4096, 1, 1), 0); del buf2  # reuse
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_wq_2], Original ATen: [aten._softmax]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__softmax_1.run(buf5, primals_5, 4, 4096, grid=grid(4), stream=stream0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 256, 64, 64), (1048576, 4096, 64, 1), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_wv], Original ATen: [aten.convolution]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_2.run(buf1, primals_3, buf6, 1024, 4096, grid=grid(1024, 4096), stream=stream0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 256, 1), (256, 1, 1), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.bmm]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf6, (4, 256, 4096), (1048576, 4096, 1), 0), buf5, out=buf7)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(reinterpret_tensor(buf7, (4, 256, 1, 1), (256, 1, 1, 1), 0), primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 512, 1, 1), (512, 1, 1, 1))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf8, (4, 512, 1, 1), (512, 1, 512, 512), 0); del buf8  # reuse
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 1, 1), (1, 1, 1), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf11, (4, 1, 1), (1, 1, 1), 0); del buf11  # reuse
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 1, 512), (512, 2048, 1), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2, layer_norm, sigmoid], Original ATen: [aten.convolution, aten.native_layer_norm, aten.sigmoid]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_convolution_native_layer_norm_sigmoid_3.run(buf9, buf13, primals_7, primals_8, primals_9, buf10, buf14, 4, 512, grid=grid(4), stream=stream0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wv], Original ATen: [aten.convolution]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf0, primals_10, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 256, 64, 64), (1048576, 1, 16384, 256))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wq], Original ATen: [aten.convolution]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf0, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 256, 64, 64), (1048576, 1, 16384, 256))
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 256, 1, 1, 32), (8192, 1, 32768, 32768, 256), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wq, spatial_wq_1], Original ATen: [aten.convolution, aten.mean]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_convolution_mean_4.run(buf16, primals_13, buf17, 32768, 128, grid=grid(32768), stream=stream0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 256, 1, 1), (256, 1, 1024, 1024), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wq, spatial_wq_1], Original ATen: [aten.convolution, aten.mean]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_convolution_mean_5.run(buf17, buf18, 1024, 32, grid=grid(1024), stream=stream0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = reinterpret_tensor(buf18, (4, 1, 256), (256, 256, 1), 0); del buf18  # reuse
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wq_3], Original ATen: [aten._softmax]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_6.run(buf21, 4, 256, grid=grid(4), stream=stream0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = reinterpret_tensor(buf16, (4, 256, 64, 64), (1048576, 4096, 64, 1), 0); del buf16  # reuse
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wv], Original ATen: [aten.convolution]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_2.run(buf15, primals_11, buf22, 1024, 4096, grid=grid(1024, 4096), stream=stream0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 1, 4096), (4096, 4096, 1), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [spatial_wz], Original ATen: [aten.bmm]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(buf21, reinterpret_tensor(buf22, (4, 256, 4096), (1048576, 4096, 1), 0), out=buf23)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 512, 64, 64), (2097152, 4096, 64, 1), torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [channel_out, spatial_weight, spatial_out, out], Original ATen: [aten.mul, aten.sigmoid, aten.add]
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_7.run(buf23, buf0, buf14, buf24, 16384, 512, grid=grid(16384, 512), stream=stream0)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf24, buf0, primals_2, primals_4, primals_6, primals_8, primals_9, primals_10, primals_12, buf5, reinterpret_tensor(buf7, (4, 256, 1, 1), (256, 1, 1, 1), 0), buf9, buf10, buf13, buf21, buf23, reinterpret_tensor(buf22, (4, 4096, 256), (1048576, 1, 4096), 0), reinterpret_tensor(buf6, (4, 4096, 256), (1048576, 1, 4096), 0), )
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 512, 64, 64), (2097152, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((512, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:33:11.543000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:33:11.564000 1734606 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ya/cyasfjr6ja2mpp7eba5yyvxy2mowk52cpesh3hv7zze272hr6tdu.py
