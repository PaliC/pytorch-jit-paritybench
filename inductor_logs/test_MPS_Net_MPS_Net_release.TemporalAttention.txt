V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5y/c5yae4hr5h3kig2tu473jo62mpa4oqii5e67ru2odoc6v65v325r.py
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.tanh]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_tensor_1
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => tanh
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_1, %primals_5), kwargs = {})
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%add_tensor_1,), kwargs = {})
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_tanh_0 = async_compile.triton('triton_poi_fused_addmm_tanh_0', '''
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_tanh_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_tanh_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp3, xmask)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xr/cxrklpiwlpjgbhhhja3wvocyrupquix4lfmbifkekgm4jb5pjkcl.py
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_6, scores], Original ATen: [aten.tanh, aten._softmax]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => tanh_2
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scores => amax, exp, sub
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh_2 : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%addmm_3,), kwargs = {})
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%tanh_2, [-1], True), kwargs = {})
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%tanh_2, %amax), kwargs = {})
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_tanh_1 = async_compile.triton('triton_poi_fused__softmax_tanh_1', '''
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_tanh_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_tanh_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.tanh(tmp4)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp3, tmp5)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.tanh(tmp7)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp6, tmp8)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp9, tmp11)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp1 - tmp12
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp14, xmask)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zi/czinljuloc2z2riyf53vwrvrfylnsnra652riff7hlx7iljjugoe.py
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scores], Original ATen: [aten._softmax]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scores => div, sum_1
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_2 = async_compile.triton('triton_poi_fused__softmax_2', '''
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 4), (4, 1))
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, 1024), (1024, 1))
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, ), (1, ))
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, 256), (256, 1))
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, ), (1, ))
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 256), (256, 1))
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 256), (256, 1), torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.addmm]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_3, reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), reinterpret_tensor(primals_2, (4, 256), (1, 4), 0), alpha=1, beta=1, out=buf0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (4, 1024), (1024, 1), 0), reinterpret_tensor(primals_4, (1024, 256), (1, 1024), 0), out=buf1)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.tanh]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_tanh_0.run(buf2, primals_5, 1024, grid=grid(1024), stream=stream0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf2, reinterpret_tensor(primals_6, (256, 256), (1, 256), 0), out=buf3)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.addmm, aten.tanh]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_tanh_0.run(buf4, primals_7, 1024, grid=grid(1024), stream=stream0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.addmm]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_9, buf4, reinterpret_tensor(primals_8, (256, 4), (1, 256), 0), alpha=1, beta=1, out=buf5)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6, scores], Original ATen: [aten.tanh, aten._softmax]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_tanh_1.run(buf5, buf6, 16, grid=grid(16), stream=stream0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scores], Original ATen: [aten._softmax]
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_2.run(buf6, buf7, 16, grid=grid(16), stream=stream0)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), reinterpret_tensor(buf0, (4, 1024), (1024, 1), 0), buf2, buf4, buf5, buf7, primals_8, primals_6, primals_4, )
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:28:37.706000 1269386 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:28:37.710000 1269386 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/up/cupuo75ipce5ebiqf65of4vfvto2favgmdnxrdgdqrksc3a2j3pd.py
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5y/c5yae4hr5h3kig2tu473jo62mpa4oqii5e67ru2odoc6v65v325r.py
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.tanh]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_tensor_1
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => tanh
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_1, %primals_5), kwargs = {})
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%add_tensor_1,), kwargs = {})
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_tanh_0 = async_compile.triton('triton_poi_fused_addmm_tanh_0', '''
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_tanh_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_tanh_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp3, xmask)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xr/cxrklpiwlpjgbhhhja3wvocyrupquix4lfmbifkekgm4jb5pjkcl.py
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_6, scores], Original ATen: [aten.tanh, aten._softmax]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => tanh_2
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scores => amax, exp, sub
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh_2 : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%addmm_3,), kwargs = {})
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%tanh_2, [-1], True), kwargs = {})
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%tanh_2, %amax), kwargs = {})
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_tanh_1 = async_compile.triton('triton_poi_fused__softmax_tanh_1', '''
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_tanh_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_tanh_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.tanh(tmp4)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp3, tmp5)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.tanh(tmp7)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp6, tmp8)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp9, tmp11)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp1 - tmp12
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp14, xmask)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zi/czinljuloc2z2riyf53vwrvrfylnsnra652riff7hlx7iljjugoe.py
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scores], Original ATen: [aten._softmax]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scores => div, sum_1
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_2 = async_compile.triton('triton_poi_fused__softmax_2', '''
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 4), (4, 1))
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, 1024), (1024, 1))
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, ), (1, ))
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, 256), (256, 1))
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, ), (1, ))
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 256), (256, 1))
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 256), (256, 1), torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.addmm]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_3, reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), reinterpret_tensor(primals_2, (4, 256), (1, 4), 0), alpha=1, beta=1, out=buf0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (4, 1024), (1024, 1), 0), reinterpret_tensor(primals_4, (1024, 256), (1, 1024), 0), out=buf1)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.tanh]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_tanh_0.run(buf2, primals_5, 1024, grid=grid(1024), stream=stream0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf2, reinterpret_tensor(primals_6, (256, 256), (1, 256), 0), out=buf3)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.addmm, aten.tanh]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_tanh_0.run(buf4, primals_7, 1024, grid=grid(1024), stream=stream0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.addmm]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_9, buf4, reinterpret_tensor(primals_8, (256, 4), (1, 256), 0), alpha=1, beta=1, out=buf5)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6, scores], Original ATen: [aten.tanh, aten._softmax]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_tanh_1.run(buf5, buf6, 16, grid=grid(16), stream=stream0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scores], Original ATen: [aten._softmax]
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_2.run(buf6, buf7, 16, grid=grid(16), stream=stream0)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), reinterpret_tensor(buf0, (4, 1024), (1024, 1), 0), buf2, buf4, buf5, buf7, primals_8, primals_6, primals_4, )
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:18:47.314000 3832069 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:18:47.319000 3832069 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/os/cos232nzjtbq5t4swo5kx2bgg3gueiqjm4t2xcw6yqoqusaf7otu.py
