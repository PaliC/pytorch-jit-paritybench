V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f3/cf3m2wsdqlw7oz4p7x3lsp4vng4tvzzsiypmequmq5umk23bvskx.py
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, delta, lt, truediv_1, sub_7, pow_4, add_2, log_1, mul_6, sub_1, pow_1, add, truediv, mul, sub_2, mul_1, sub_3, sub_4, pow_2, mul_2, A, mul_7, mul_4, sub_5, pow_3, add_1, log, mul_5, C, sub_8, losses, loss, mul_8], Original ATen: [aten.sub, aten.abs, aten.lt, aten.div, aten.rsub, aten.pow, aten.add, aten.log, aten.mul, aten.reciprocal, aten.where, aten.mean]
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A => mul_4
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   C => sub_6
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta => abs_1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_1 => log_1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => mean
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   losses => where
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   lt => lt
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_3
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_5
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_6
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_7
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_8
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_8 => mul_9
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_4
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_8 => sub_8
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => mul, reciprocal
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %arg0_1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 0.5), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%abs_1, 1.0), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Tensor](args = (%div, %sub_7), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_4, 1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_2,), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%log_1, 14.0), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Scalar](args = (0.5, %sub_1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, 1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %reciprocal : [num_users=1] = call_function[target=torch.ops.aten.reciprocal.default](args = (%add,), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%reciprocal, 1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, 14.0), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %sub_2), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_3, 1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Scalar](args = (0.5, %sub_4), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %pow_2), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, 1.0), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %abs_1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, 0.5), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Scalar](args = (0.5, %sub_5), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_3, 1), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_1,), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%log, 14.0), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_5, %mul_6), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_8, %sub_6), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %mul_7, %sub_8), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where,), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0 = async_compile.triton('triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0', '''
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel):
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.abs(tmp2)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.5
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1.0
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 * tmp6
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 2.1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 - tmp0
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.pow(tmp7, tmp9)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp6
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.log(tmp11)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 14.0
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.pow(tmp4, tmp9)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp6
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp6
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp13
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp9
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp9 - tmp6
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.pow(tmp4, tmp22)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 * tmp23
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp6
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp3
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp4
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.log(tmp16)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp13
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp27 - tmp29
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp26 - tmp30
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp5, tmp14, tmp31)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [RBLOCK])
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.promote_to_tensor(tl.sum(tmp33, 0))
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = 256.0
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 / tmp36
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 * tmp6
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp38, None)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, delta, lt, truediv_1, sub_7, pow_4, add_2, log_1, mul_6, sub_1, pow_1, add, truediv, mul, sub_2, mul_1, sub_3, sub_4, pow_2, mul_2, A, mul_7, mul_4, sub_5, pow_3, add_1, log, mul_5, C, sub_8, losses, loss, mul_8], Original ATen: [aten.sub, aten.abs, aten.lt, aten.div, aten.rsub, aten.pow, aten.add, aten.log, aten.mul, aten.reciprocal, aten.where, aten.mean]
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0.run(buf2, arg1_1, arg0_1, 1, 256, grid=grid(1), stream=stream0)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:18:06.076000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:18:06.078000 859334 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/g6/cg6vi6i4bbgzoxchxhwjqhrgtfo3rttuwdaris3nylnv6l3nrcmp.py
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f3/cf3m2wsdqlw7oz4p7x3lsp4vng4tvzzsiypmequmq5umk23bvskx.py
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, delta, lt, truediv_1, sub_7, pow_4, add_2, log_1, mul_6, sub_1, pow_1, add, truediv, mul, sub_2, mul_1, sub_3, sub_4, pow_2, mul_2, A, mul_7, mul_4, sub_5, pow_3, add_1, log, mul_5, C, sub_8, losses, loss, mul_8], Original ATen: [aten.sub, aten.abs, aten.lt, aten.div, aten.rsub, aten.pow, aten.add, aten.log, aten.mul, aten.reciprocal, aten.where, aten.mean]
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A => mul_4
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   C => sub_6
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   delta => abs_1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_1 => log_1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => mean
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   losses => where
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   lt => lt
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_3
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_5
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_6
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_7
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_8
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_8 => mul_9
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_4
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_8 => sub_8
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => mul, reciprocal
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %arg0_1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 0.5), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%abs_1, 1.0), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Tensor](args = (%div, %sub_7), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_4, 1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_2,), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%log_1, 14.0), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Scalar](args = (0.5, %sub_1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, 1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %reciprocal : [num_users=1] = call_function[target=torch.ops.aten.reciprocal.default](args = (%add,), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%reciprocal, 1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, 14.0), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %sub_2), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_3, 1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Scalar](args = (0.5, %sub_4), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %pow_2), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, 1.0), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %abs_1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, 0.5), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (2.1, %arg1_1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Scalar](args = (0.5, %sub_5), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_3, 1), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_1,), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%log, 14.0), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_5, %mul_6), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_8, %sub_6), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %mul_7, %sub_8), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where,), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0 = async_compile.triton('triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0', '''
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel):
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.abs(tmp2)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.5
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1.0
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 * tmp6
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 2.1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 - tmp0
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.pow(tmp7, tmp9)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp6
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.log(tmp11)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 14.0
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.pow(tmp4, tmp9)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp6
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp6
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp13
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp9
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp9 - tmp6
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.pow(tmp4, tmp22)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 * tmp23
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp6
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp3
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp4
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.log(tmp16)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp13
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp27 - tmp29
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp26 - tmp30
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp5, tmp14, tmp31)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [RBLOCK])
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.promote_to_tensor(tl.sum(tmp33, 0))
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = 256.0
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 / tmp36
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 * tmp6
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp38, None)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, delta, lt, truediv_1, sub_7, pow_4, add_2, log_1, mul_6, sub_1, pow_1, add, truediv, mul, sub_2, mul_1, sub_3, sub_4, pow_2, mul_2, A, mul_7, mul_4, sub_5, pow_3, add_1, log, mul_5, C, sub_8, losses, loss, mul_8], Original ATen: [aten.sub, aten.abs, aten.lt, aten.div, aten.rsub, aten.pow, aten.add, aten.log, aten.mul, aten.reciprocal, aten.where, aten.mean]
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_abs_add_div_log_lt_mean_mul_pow_reciprocal_rsub_sub_where_0.run(buf2, arg1_1, arg0_1, 1, 256, grid=grid(1), stream=stream0)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:08:26.847000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:08:26.850000 3568094 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/fu/cfuwnhz6424kdd6hli2coyluhv7t2utsa46icypul2xj4jvna5tj.py
