V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ia/ciab7ms6gmuzr63qs5gv2lfghnik2fb76jh3xfpqgieel3lxo263.py
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [org_mean], Original ATen: [aten.mean]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   org_mean => mean
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [1], True), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_0 = async_compile.triton('triton_poi_fused_mean_0', '''
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mx/cmxjc23obfwct3hf4s3ixfln7oro2d6jwhw54pjo3srjrfb6leyi.py
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [org_mean, org_pool], Original ATen: [aten.mean, aten.avg_pool2d]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   org_mean => mean
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   org_pool => avg_pool2d
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [1], True), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=4] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%mean, [4, 4], [4, 4]), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_mean_1 = async_compile.triton('triton_poi_fused_avg_pool2d_mean_1', '''
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_mean_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_mean_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp8
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp10
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp12
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp14
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp16
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp18
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp20
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp22
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp24
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp26
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp28
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.0625
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp32, xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f6/cf6lmdishv5rf7qoohsqrezbjymgzfsalxargbemoktgsfuhvril.py
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, D_left, sub_1, D_right, add, sub_2, D_up, add_1, sub_3, D_down, E], Original ATen: [aten.sub, aten.pow, aten.add]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   D_down => pow_4
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   D_left => pow_1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   D_right => pow_2
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   D_up => pow_3
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   E => add_2
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %convolution_4), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %convolution_5), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %convolution_6), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_2, 2), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add, %pow_3), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %convolution_7), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_3, 2), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %pow_4), kwargs = {})
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_pow_sub_2 = async_compile.triton('triton_poi_fused_add_pow_sub_2', '''
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_pow_sub_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_pow_sub_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, xnumel, XBLOCK : tl.constexpr):
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x0), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr3 + (x0), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr4 + (x0), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr5 + (x0), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr6 + (x0), xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 + tmp12
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 - tmp15
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp18, xmask)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1 = args
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg4_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg5_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [org_mean], Original ATen: [aten.mean]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_0.run(arg0_1, buf0, 64, grid=grid(64), stream=stream0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 1, 1, 1), (1, 1, 1, 1), torch.float32)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [org_mean, org_pool], Original ATen: [aten.mean, aten.avg_pool2d]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_mean_1.run(buf0, buf1, 4, grid=grid(4), stream=stream0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_org_letf], Original ATen: [aten.convolution]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf0; del buf0  # reuse
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [enhance_mean], Original ATen: [aten.mean]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_0.run(arg1_1, buf3, 64, grid=grid(64), stream=stream0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1, 1, 1), (1, 1, 1, 1), torch.float32)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [enhance_mean, enhance_pool], Original ATen: [aten.mean, aten.avg_pool2d]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_mean_1.run(buf3, buf4, 4, grid=grid(4), stream=stream0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_enhance_letf], Original ATen: [aten.convolution]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_org_right], Original ATen: [aten.convolution]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf1, arg3_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_enhance_right], Original ATen: [aten.convolution]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf4, arg3_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_org_up], Original ATen: [aten.convolution]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf1, arg4_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_enhance_up], Original ATen: [aten.convolution]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf4, arg4_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg4_1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_org_down], Original ATen: [aten.convolution]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf1, arg5_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_enhance_down], Original ATen: [aten.convolution]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf4, arg5_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg5_1
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf2; del buf2  # reuse
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, D_left, sub_1, D_right, add, sub_2, D_up, add_1, sub_3, D_down, E], Original ATen: [aten.sub, aten.pow, aten.add]
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_pow_sub_2.run(buf12, buf5, buf6, buf7, buf8, buf9, buf10, buf11, 4, grid=grid(4), stream=stream0)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg4_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg5_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1])
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:58:44.522000 2810475 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:58:44.527000 2810475 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bt/cbt3cvicqjewx7k2kiaobwin2moull3hh44c7hvm3yuezlzniafo.py
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ia/ciab7ms6gmuzr63qs5gv2lfghnik2fb76jh3xfpqgieel3lxo263.py
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [org_mean], Original ATen: [aten.mean]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   org_mean => mean
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [1], True), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_0 = async_compile.triton('triton_poi_fused_mean_0', '''
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mx/cmxjc23obfwct3hf4s3ixfln7oro2d6jwhw54pjo3srjrfb6leyi.py
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [org_mean, org_pool], Original ATen: [aten.mean, aten.avg_pool2d]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   org_mean => mean
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   org_pool => avg_pool2d
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [1], True), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=4] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%mean, [4, 4], [4, 4]), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_mean_1 = async_compile.triton('triton_poi_fused_avg_pool2d_mean_1', '''
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_mean_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_mean_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp8
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp10
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp12
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp14
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp16
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp18
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp20
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp22
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp24
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp26
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp28
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.0625
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp32, xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f6/cf6lmdishv5rf7qoohsqrezbjymgzfsalxargbemoktgsfuhvril.py
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, D_left, sub_1, D_right, add, sub_2, D_up, add_1, sub_3, D_down, E], Original ATen: [aten.sub, aten.pow, aten.add]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   D_down => pow_4
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   D_left => pow_1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   D_right => pow_2
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   D_up => pow_3
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   E => add_2
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %convolution_4), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %convolution_5), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %convolution_6), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_2, 2), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add, %pow_3), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %convolution_7), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_3, 2), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %pow_4), kwargs = {})
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_pow_sub_2 = async_compile.triton('triton_poi_fused_add_pow_sub_2', '''
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_pow_sub_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_pow_sub_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, xnumel, XBLOCK : tl.constexpr):
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x0), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr3 + (x0), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr4 + (x0), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr5 + (x0), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr6 + (x0), xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 + tmp12
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 - tmp15
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp18, xmask)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1 = args
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg4_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg5_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [org_mean], Original ATen: [aten.mean]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_0.run(arg0_1, buf0, 64, grid=grid(64), stream=stream0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 1, 1, 1), (1, 1, 1, 1), torch.float32)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [org_mean, org_pool], Original ATen: [aten.mean, aten.avg_pool2d]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_mean_1.run(buf0, buf1, 4, grid=grid(4), stream=stream0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_org_letf], Original ATen: [aten.convolution]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf0; del buf0  # reuse
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [enhance_mean], Original ATen: [aten.mean]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_0.run(arg1_1, buf3, 64, grid=grid(64), stream=stream0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1, 1, 1), (1, 1, 1, 1), torch.float32)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [enhance_mean, enhance_pool], Original ATen: [aten.mean, aten.avg_pool2d]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_mean_1.run(buf3, buf4, 4, grid=grid(4), stream=stream0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_enhance_letf], Original ATen: [aten.convolution]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_org_right], Original ATen: [aten.convolution]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf1, arg3_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_enhance_right], Original ATen: [aten.convolution]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf4, arg3_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_org_up], Original ATen: [aten.convolution]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf1, arg4_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_enhance_up], Original ATen: [aten.convolution]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf4, arg4_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg4_1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_org_down], Original ATen: [aten.convolution]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf1, arg5_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [D_enhance_down], Original ATen: [aten.convolution]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf4, arg5_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg5_1
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf2; del buf2  # reuse
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, D_left, sub_1, D_right, add, sub_2, D_up, add_1, sub_3, D_down, E], Original ATen: [aten.sub, aten.pow, aten.add]
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_pow_sub_2.run(buf12, buf5, buf6, buf7, buf8, buf9, buf10, buf11, 4, grid=grid(4), stream=stream0)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg4_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg5_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1])
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:48:21.031000 594306 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:48:21.038000 594306 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/z6/cz6hbdicdwj3eonllspadobjxozdx6h6sejx5aq7wojrkzrjmp36.py
