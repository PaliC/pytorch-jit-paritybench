V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/44/c44dxcxm3ws4vhjk4j5c3khip3vnhch3vxdvpahk7njs63z2q2s3.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv => mul, sum_1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %primals_1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_0 = async_compile.triton('triton_per_fused_mv_0', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 64},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_0(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 48
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 48*r1), xmask, other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(xmask, tmp3, 0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sum(tmp5, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/55/c55xxydm5i63fm4jdjgadukifnxduljmljqbreaju4emzdbtpyx3.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm, add, truediv], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm => pow_1, pow_2, sum_2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, None), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_2, 1e-12), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_1, %add), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_1 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_1', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_1(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 48
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), rmask, other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask, tmp2, 0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 1e-12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 / tmp8
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp9, rmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z7/cz7g3vpbhlnavjxq7jhsljwwmfd55nslndyfwqakxmpes6xy45qw.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_1 => mul_1, sum_3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %div), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_2 = async_compile.triton('triton_per_fused_mv_2', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 64},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_2(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 48
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 48*x0), rmask & xmask, other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(rmask & xmask, tmp3, 0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sum(tmp5, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sn/csnbxz4shohgcnrmnxbm7kp3cqgyujxwhz4cewqbmky3bwj43yre.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_1, add_1, truediv_1], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_1 => pow_3, pow_4, sum_4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div_1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_3, 2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, None), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_4, 0.5), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_4, 1e-12), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_3, %add_1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_3 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_3', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_3(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp2, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp8, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ur/cur45pvs7adohknqvggwxyy2g5zhtxdpz6ig34cgqh65ufimkcbj.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma], Original ATen: [aten.dot]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma => mul_3, sum_6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_1, %sum_3), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_3,), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_4 = async_compile.triton('triton_per_fused_dot_4', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_4(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp3, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uk/cukp4llnppuogr4ruaizsz7kfqvlktxnqo7354k36bvtjfu67ero.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_3 => mul_5, sum_7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_1, %primals_6), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_5, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_5 = async_compile.triton('triton_red_fused_mv_5', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 128},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_5(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 1024*r1), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kz/ckzfiuuzikavsuwzsaz4adl3ue7lfhbpkdzs4mnqaq56mmu2pc4i.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_2, add_2, truediv_3], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_2 => pow_5, pow_6, sum_8
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_7, 2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_8 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_5, None), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_8, 0.5), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_6, 1e-12), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_7, %add_2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_6 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_6', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 1024},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_6(in_ptr0, out_ptr1, xnumel, rnumel):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 1024
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.promote_to_tensor(tl.sum(tmp2, 0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp8, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/u6/cu6pzzm2bagemecf3w4ge23r2xoodc24s5ayzipbhbnolzgtmg5n.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_4], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_4 => mul_6, sum_9
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %div_3), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_9 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_6, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_7 = async_compile.triton('triton_per_fused_mv_7', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 1024},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_7(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 1024
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 1024*x0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4g/c4giscxvz5477wuheqnz353l5irhaz45ps6aqbfw2wdljqinjtnp.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_3, add_3, truediv_4], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_3 => pow_7, pow_8, sum_10
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_4 => div_4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_9, 2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_10 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_7, None), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_8 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_10, 0.5), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_8, 1e-12), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_4 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_9, %add_3), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_8 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_8', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 128},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_8(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 128
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp2, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp8, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qr/cqrv7dboopgkpj7zezglg465koqsnzpaox7mln27opodtybtd4ra.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_1], Original ATen: [aten.dot]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_1 => mul_8, sum_12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_4, %sum_9), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_12 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_8,), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_9 = async_compile.triton('triton_per_fused_dot_9', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 128},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_9(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 128
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp3, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/px/cpxw7hmetu5hhj3vwyfimf55ac2jdiiyyidcdspt55ggdeq3h25f.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_2], Original ATen: [aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_2 => div_2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_3, %expand), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_10 = async_compile.triton('triton_poi_fused_div_10', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_10(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3072
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fw/cfw7jdg4b4m2uc67bkgr2tqdnhyaixyjpodrleikmahglctf6bp4.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_6], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_6 => mul_10, sum_13
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, %primals_10), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_13 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_10, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_11 = async_compile.triton('triton_red_fused_mv_11', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096, 'r': 128},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_11(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2048)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 2048
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 2048*r2 + 262144*x1), rmask, eviction_policy='evict_first', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 128*x1), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask, tmp5, _tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zn/czn34aklman37iexlfbeggy6ul33xymjvfzv66kpcl46hneexrhq.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_6], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_6 => mul_10, sum_13
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, %primals_10), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_13 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_10, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_12 = async_compile.triton('triton_per_fused_mv_12', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048, 'r': 2},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_12(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 2048*r1), xmask, other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/se/csevn7jesfap2zpy256tlfgrrompnj3snej2hpejdm3upfia6bb3.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_4, add_4, truediv_6], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_4 => pow_10, pow_9, sum_14
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_6 => div_6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_9 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_13, 2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_14 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_9, None), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_10 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_14, 0.5), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_10, 1e-12), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_6 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_13, %add_4), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_add_div_linalg_vector_norm_13 = async_compile.triton('triton_red_fused_add_div_linalg_vector_norm_13', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 2048},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_div_linalg_vector_norm_13', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_add_div_linalg_vector_norm_13(in_out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2048
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp3 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tmp0 * tmp0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp3 = tl.where(rmask, tmp4, _tmp3)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tl.load(in_out_ptr0 + (r0), rmask, eviction_policy='evict_first', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = libdevice.sqrt(tmp3)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = 1e-12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tmp6 + tmp7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp5 / tmp8
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr0 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp9, rmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uj/cujfmyv7pgqry5gz4yyg5akvuwwpcfstygnb6nor6awewwh5i4p5.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_7], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_7 => mul_11, sum_15
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_6, %div_6), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_15 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_11, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_14 = async_compile.triton('triton_red_fused_mv_14', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 2048},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_14(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2048
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 2048*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yl/cyl3gabdebre2ifagpmmzrzopjgzu6n5wokeceg2wumnlobqpfki.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_5, add_5, truediv_7], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_5 => pow_11, pow_12, sum_16
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_7 => div_7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_11 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_15, 2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_16 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_11, None), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_12 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_16, 0.5), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_12, 1e-12), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_7 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_15, %add_5), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_15 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_15', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_15(in_ptr0, out_ptr1, xnumel, rnumel):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.promote_to_tensor(tl.sum(tmp2, 0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp8, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5b/c5bjwyk7a6dtuel3j2tcwizxzum6ghbscuftwdxas67kepxbhiou.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_2], Original ATen: [aten.dot]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_2 => mul_13, sum_18
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_7, %sum_15), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_18 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_13,), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_16 = async_compile.triton('triton_per_fused_dot_16', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_16', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_16(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vk/cvk6asbcvxzxztzzdeew7rzs5i3mcoao7jedehyufacvrjfj54nt.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_9], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_9 => mul_16, sum_20
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_5, %primals_21), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_20 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_16, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_17 = async_compile.triton('triton_red_fused_mv_17', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384, 'r': 128},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_17', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_17(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4096
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 4096*r2 + 524288*x1), rmask, eviction_policy='evict_first', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 128*x1), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask, tmp5, _tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vn/cvnoqhbqgtsjxpbsuvydxyy44ryzzh65ceylphtkxniznw2uqe6h.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_9], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_9 => mul_16, sum_20
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_5, %primals_21), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_20 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_16, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_18 = async_compile.triton('triton_per_fused_mv_18', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096, 'r': 4},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_18(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4096*r1), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(tmp1, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ur/curj5qog6snqcertnjymad3u5tbytlcfzcpssambjwtg5ytw5gi4.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_6, add_7, truediv_9], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_6 => pow_13, pow_14, sum_21
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_9 => div_10
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_13 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_20, 2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_21 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_13, None), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_14 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_21, 0.5), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_14, 1e-12), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_10 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_20, %add_7), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_add_div_linalg_vector_norm_19 = async_compile.triton('triton_red_fused_add_div_linalg_vector_norm_19', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 4096},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_div_linalg_vector_norm_19', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_add_div_linalg_vector_norm_19(in_out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp3 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tmp0 * tmp0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp3 = tl.where(rmask, tmp4, _tmp3)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tl.load(in_out_ptr0 + (r0), rmask, eviction_policy='evict_first', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = libdevice.sqrt(tmp3)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = 1e-12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tmp6 + tmp7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp5 / tmp8
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr0 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp9, rmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/o7/co7uttb6hfl3bor3vmwvughai5ulppgh2ixothufmj6rwt3iydur.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_10], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_10 => mul_17, sum_22
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_13, %div_10), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_22 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_17, [1]), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_20 = async_compile.triton('triton_red_fused_mv_20', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512, 'r': 4096},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_20', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_20(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yh/cyheuhtbglj2opfbcmtf3c3dhabmr6znxa3b6qmfdsntyayxfgld.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_7, add_8, truediv_10], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_8 => add_8
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_7 => pow_15, pow_16, sum_23
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_10 => div_11
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_15 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_22, 2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_23 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_15, None), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_16 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_23, 0.5), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_16, 1e-12), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_11 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_22, %add_8), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_21 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_21', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 512},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_21', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_21(in_ptr0, out_ptr1, xnumel, rnumel):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 512
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 512
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.promote_to_tensor(tl.sum(tmp2, 0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp8, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sg/csgm3e3dvnn6iwwphqeuhfgoxhscqf7hj53ryu5kmhuzevcurwwn.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_3], Original ATen: [aten.dot]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_3 => mul_19, sum_25
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_11, %sum_22), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_25 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_19,), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_22 = async_compile.triton('triton_per_fused_dot_22', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 512},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_22', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_22(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 512
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 512
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vl/cvlm4isuf2m2vo3i7zn4edvyyco2ws4poyliu4suzxmw5t6vhdxv.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_5], Original ATen: [aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_5 => div_5
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_5 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_8, %expand_1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_23 = async_compile.triton('triton_poi_fused_div_23', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_23', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_23(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 131072
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kj/ckjvz7ybzypba2tijugax7i5q3wn3dg6qhprcgkqsu53ap7rumsf.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => gt, mul_4, where
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_5, %div_2, %primals_4, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul_4), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_24 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_24', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_24', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_24(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 1024) % 64)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/p7/cp7xx7u2sei3vymch5bxi2rvarwhzmi5w2zytd5m5svk6mlvn43k.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution_1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => gt_1, mul_9, where_1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where, %div_5, %primals_9, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_9), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_25 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_25', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_25', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_25(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 131072
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 128)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ih/cihgrdsroy4bf757sef3ypwqeuobqwa2dpji6rmtt4hwc52sdqjn.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_8], Original ATen: [aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_8 => div_8
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_8 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_12, %expand_2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_26 = async_compile.triton('triton_poi_fused_div_26', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_26', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_26(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3z/c3zce7ovoi4xdvpmyvg64avpmxt5k3h6lei3nasmivxt7q4htoqz.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_2, mul_14, where_2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where_1, %div_8, %primals_13, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_2, 0), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_2, 0.1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %convolution_2, %mul_14), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_27 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_27', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_27', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_27(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 256)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ox/coxqmjdcs5opkryjht32t5iqqc3ulcfk6okdu4dzuh4vkdufjfsx.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_3 => convolution_3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_2, %primals_14, %primals_15, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_28 = async_compile.triton('triton_poi_fused_convolution_28', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_28', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_28(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j6/cj6cpm4t7rhmjkqm7wctiijrqmrowetbjgck3mduxviueeehbg3s.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attention], Original ATen: [aten._softmax]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attention => amax, div_9, exp, sub, sum_19
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%bmm, [-1], True), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%bmm, %amax), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_19 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_9 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_19), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_29 = async_compile.triton('triton_per_fused__softmax_29', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 64},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_29', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_29(in_out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 64*x0), xmask, other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 - tmp4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp7, 0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 / tmp10
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 64*x0), tmp11, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l3/cl344w4utgujynqayptfc5vdyg3ao6eohxs4gmfelgyzvj5xvh7q.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_5 => convolution_5
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_2, %primals_18, %primals_19, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_30 = async_compile.triton('triton_poi_fused_convolution_30', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_30', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_30(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 256)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sh/cshgjckcsrvtyp472khnp7pp2h3yefxzj2pcjyun2bvlfhk7yqci.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, out_2], Original ATen: [aten.mul, aten.add]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_15
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_20, %view_12), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_15, %where_2), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_31 = async_compile.triton('triton_poi_fused_add_mul_31', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_31', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_31(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ji/cjil5gp7r7k4ej2ttjvqbzpxtsrx2qsaiqrjazlttfhlcxtl5goh.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_11], Original ATen: [aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_11 => div_12
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_12 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_23, %expand_3), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_32 = async_compile.triton('triton_poi_fused_div_32', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_32', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_32(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2097152
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7q/c7qpucy7z63ecoa6hmwb7zjvalwyek7jtp5ppkejf6pik5vaaeer.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => convolution_6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => gt_3, mul_20, where_3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_6 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%add_6, %div_12, %primals_24, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_6, 0), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_6, 0.1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %convolution_6, %mul_20), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_33 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_33', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_33', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_33(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 512)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ht/cht2hlcgppenowhxghgpidnu66eztefpnzec2zzxxjcmwcp56ayt.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_7 => convolution_7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_7 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_3, %primals_25, %primals_26, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_34 = async_compile.triton('triton_poi_fused_convolution_34', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_34', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_34(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 64)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fc/cfcruenzn2ktluz6aoyioduojm2tqw3zykmhd4fozg32f2saeju7.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attention_1], Original ATen: [aten._softmax]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attention_1 => amax_1, div_13, exp_1, sub_1, sum_26
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%bmm_2, [-1], True), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%bmm_2, %amax_1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_26 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_13 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_26), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_35 = async_compile.triton('triton_per_fused__softmax_35', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 16},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_35', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_35(in_out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 - tmp4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp7, 0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 / tmp10
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 16*x0), tmp11, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fr/cfr5tmaep224kuuoajqgplwcia2pz5zvfyollmyt3fxjvyhyitd3.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_9], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_9 => convolution_9
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_9 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_3, %primals_29, %primals_30, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_36 = async_compile.triton('triton_poi_fused_convolution_36', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_36', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_36(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 512)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hi/chi6cl6wr7qzcs4zizwksldomo3lbttezxuxaabwo7xne6fzta3h.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_1, out_5], Original ATen: [aten.mul, aten.add]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_21
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_5 => add_9
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_31, %view_19), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_21, %where_3), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_37 = async_compile.triton('triton_poi_fused_add_mul_37', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_37', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_37(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x0), None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uv/cuvhnccowqwhwumosgt3b55xrxhsmnkrzkybyaaynstsen5iwn3e.py
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => convolution_10
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_10 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%add_9, %primals_32, %primals_33, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_38 = async_compile.triton('triton_poi_fused_convolution_38', '''
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_38', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_38(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33 = args
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (48, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (64, 3, 4, 4), (48, 16, 4, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (128, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1024, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (128, 64, 4, 4), (1024, 16, 4, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (128, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (2048, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (256, 128, 4, 4), (2048, 16, 4, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (32, 256, 1, 1), (256, 1, 1, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (32, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (32, 256, 1, 1), (256, 1, 1, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (32, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (256, 256, 1, 1), (256, 1, 1, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (256, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (1, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (512, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4096, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (512, 256, 4, 4), (4096, 16, 4, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (512, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (64, 512, 1, 1), (512, 1, 1, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (64, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (64, 512, 1, 1), (512, 1, 1, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (64, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (512, 512, 1, 1), (512, 1, 1, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (512, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (1, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (1, 512, 4, 4), (8192, 16, 4, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (1, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((48, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_0.run(primals_3, primals_1, buf0, 48, 64, grid=grid(48), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((48, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm, add, truediv], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_1.run(buf0, buf2, 1, 48, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_2.run(primals_3, buf2, buf3, 64, 48, grid=grid(64), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf77 = torch.ops.aten.set_.source_Tensor(primals_2, buf2)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf77, (48, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_1, add_1, truediv_1], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_3.run(buf3, buf5, 1, 64, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((), (), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma], Original ATen: [aten.dot]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_4.run(buf5, buf3, buf6, 1, 64, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf72 = torch.ops.aten.set_.source_Tensor(primals_1, buf5)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf72, (64, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((1024, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_5.run(primals_8, primals_6, buf11, 1024, 128, grid=grid(1024), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((1024, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_2, add_2, truediv_3], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_6.run(buf11, buf13, 1, 1024, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((128, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_4], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_7.run(primals_8, buf13, buf14, 128, 1024, grid=grid(128), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf86 = torch.ops.aten.set_.source_Tensor(primals_7, buf13)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf86, (1024, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((128, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_3, add_3, truediv_4], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_8.run(buf14, buf16, 1, 128, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((), (), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_1], Original ATen: [aten.dot]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_9.run(buf16, buf14, buf17, 1, 128, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf81 = torch.ops.aten.set_.source_Tensor(primals_6, buf16)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf81, (128, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((64, 3, 4, 4), (48, 16, 4, 1), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_2], Original ATen: [aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_10.run(primals_3, buf6, buf7, 3072, grid=grid(3072), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((2048, 2), (1, 2048), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_6], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_11.run(primals_12, primals_10, buf22, 4096, 128, grid=grid(4096), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((2048, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_6], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_12.run(buf22, buf23, 2048, 2, grid=grid(2048), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = buf23; del buf23  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_4, add_4, truediv_6], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_add_div_linalg_vector_norm_13.run(buf25, 1, 2048, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_7], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_14.run(primals_12, buf25, buf26, 256, 2048, grid=grid(256), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf95 = torch.ops.aten.set_.source_Tensor(primals_11, buf25)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf95, (2048, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_5, add_5, truediv_7], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_15.run(buf26, buf28, 1, 256, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((), (), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_2], Original ATen: [aten.dot]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_16.run(buf28, buf26, buf29, 1, 256, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf90 = torch.ops.aten.set_.source_Tensor(primals_10, buf28)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf90, (256, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = empty_strided_cuda((4096, 4), (1, 4096), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_9], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_17.run(primals_23, primals_21, buf46, 16384, 128, grid=grid(16384), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = reinterpret_tensor(buf22, (4096, ), (1, ), 0); del buf22  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_9], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_18.run(buf46, buf47, 4096, 4, grid=grid(4096), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = buf47; del buf47  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_6, add_7, truediv_9], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_add_div_linalg_vector_norm_19.run(buf49, 1, 4096, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = empty_strided_cuda((512, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_10], Original ATen: [aten.mv]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_20.run(primals_23, buf49, buf50, 512, 4096, grid=grid(512), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf104 = torch.ops.aten.set_.source_Tensor(primals_22, buf49)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf104, (4096, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = empty_strided_cuda((512, ), (1, ), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_7, add_8, truediv_10], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_21.run(buf50, buf52, 1, 512, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = empty_strided_cuda((), (), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_3], Original ATen: [aten.dot]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_22.run(buf52, buf50, buf53, 1, 512, grid=grid(1), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf50
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf99 = torch.ops.aten.set_.source_Tensor(primals_21, buf52)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf99, (512, ), (1, ))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((128, 64, 4, 4), (1024, 16, 4, 1), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_5], Original ATen: [aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_23.run(primals_8, buf17, buf18, 131072, grid=grid(131072), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(primals_5, buf7, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 64, 32, 32), (65536, 1024, 32, 1), torch.bool)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf8; del buf8  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_24.run(buf10, primals_4, buf9, 262144, grid=grid(262144), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf10, buf18, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 128, 16, 16), (32768, 256, 16, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 128, 16, 16), (32768, 256, 16, 1), torch.bool)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf19; del buf19  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_25.run(buf21, primals_9, buf20, 131072, grid=grid(131072), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((256, 128, 4, 4), (2048, 16, 4, 1), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_8], Original ATen: [aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_26.run(primals_12, buf29, buf30, 524288, grid=grid(524288), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = extern_kernels.convolution(buf21, buf30, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf31, (4, 256, 8, 8), (16384, 64, 8, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((4, 256, 8, 8), (16384, 64, 8, 1), torch.bool)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = buf31; del buf31  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_27.run(buf33, primals_13, buf32, 65536, grid=grid(65536), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = extern_kernels.convolution(buf33, primals_14, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf34, (4, 32, 8, 8), (2048, 64, 8, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = buf34; del buf34  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_28.run(buf35, primals_15, 8192, grid=grid(8192), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf33, primals_16, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 32, 8, 8), (2048, 64, 8, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf36; del buf36  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_28.run(buf37, primals_17, 8192, grid=grid(8192), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = reinterpret_tensor(buf46, (4, 64, 64), (4096, 64, 1), 0); del buf46  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [energy], Original ATen: [aten.bmm]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf35, (4, 64, 32), (2048, 1, 64), 0), reinterpret_tensor(buf37, (4, 32, 64), (2048, 64, 1), 0), out=buf38)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = buf38; del buf38  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attention], Original ATen: [aten._softmax]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_29.run(buf41, 256, 64, grid=grid(256), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = extern_kernels.convolution(buf33, primals_18, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf42, (4, 256, 8, 8), (16384, 64, 8, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = buf42; del buf42  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_30.run(buf43, primals_19, 65536, grid=grid(65536), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = empty_strided_cuda((4, 256, 64), (16384, 64, 1), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.bmm]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf43, (4, 256, 64), (16384, 64, 1), 0), reinterpret_tensor(buf41, (4, 64, 64), (4096, 1, 64), 0), out=buf44)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = empty_strided_cuda((4, 256, 8, 8), (16384, 64, 8, 1), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, out_2], Original ATen: [aten.mul, aten.add]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_31.run(primals_20, buf44, buf33, buf45, 65536, grid=grid(65536), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = empty_strided_cuda((512, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_11], Original ATen: [aten.div]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_32.run(primals_23, buf53, buf54, 2097152, grid=grid(2097152), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = extern_kernels.convolution(buf45, buf54, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf55, (4, 512, 4, 4), (8192, 16, 4, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = empty_strided_cuda((4, 512, 4, 4), (8192, 16, 4, 1), torch.bool)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = buf55; del buf55  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_33.run(buf57, primals_24, buf56, 32768, grid=grid(32768), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_24
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = extern_kernels.convolution(buf57, primals_25, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf58, (4, 64, 4, 4), (1024, 16, 4, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = buf58; del buf58  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_34.run(buf59, primals_26, 4096, grid=grid(4096), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_8], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = extern_kernels.convolution(buf57, primals_27, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf60, (4, 64, 4, 4), (1024, 16, 4, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf61 = buf60; del buf60  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_8], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_34.run(buf61, primals_28, 4096, grid=grid(4096), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_28
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf62 = reinterpret_tensor(buf11, (4, 16, 16), (256, 16, 1), 0); del buf11  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [energy_1], Original ATen: [aten.bmm]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf59, (4, 16, 64), (1024, 1, 16), 0), reinterpret_tensor(buf61, (4, 64, 16), (1024, 16, 1), 0), out=buf62)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf65 = buf62; del buf62  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attention_1], Original ATen: [aten._softmax]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_35.run(buf65, 64, 16, grid=grid(64), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_9], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf66 = extern_kernels.convolution(buf57, primals_29, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf66, (4, 512, 4, 4), (8192, 16, 4, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf67 = buf66; del buf66  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_9], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_36.run(buf67, primals_30, 32768, grid=grid(32768), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_30
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf68 = empty_strided_cuda((4, 512, 16), (8192, 16, 1), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_3], Original ATen: [aten.bmm]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf67, (4, 512, 16), (8192, 16, 1), 0), reinterpret_tensor(buf65, (4, 16, 16), (256, 1, 16), 0), out=buf68)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf69 = empty_strided_cuda((4, 512, 4, 4), (8192, 16, 4, 1), torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, out_5], Original ATen: [aten.mul, aten.add]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_37.run(primals_31, buf68, buf57, buf69, 32768, grid=grid(32768), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf70 = extern_kernels.convolution(buf69, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf70, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf71 = reinterpret_tensor(buf70, (4, 1, 1, 1), (1, 4, 4, 4), 0); del buf70  # reuse
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_38.run(buf71, primals_33, 4, grid=grid(4), stream=stream0)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf71, (4, ), (1, ), 0), buf41, buf65, buf7, buf18, buf30, buf54, primals_3, primals_5, primals_8, primals_12, primals_14, primals_16, primals_18, primals_20, primals_23, primals_25, primals_27, primals_29, primals_31, primals_32, buf2, buf5, buf6, buf7, buf9, buf10, buf13, buf16, buf17, buf18, buf20, buf21, buf25, buf28, buf29, buf30, buf32, buf33, buf41, buf44, buf45, buf49, buf52, buf53, buf54, buf56, buf57, buf65, buf68, buf69, reinterpret_tensor(buf67, (4, 16, 512), (8192, 1, 16), 0), reinterpret_tensor(buf59, (4, 64, 16), (1024, 16, 1), 0), reinterpret_tensor(buf61, (4, 16, 64), (1024, 1, 16), 0), reinterpret_tensor(buf43, (4, 64, 256), (16384, 1, 64), 0), reinterpret_tensor(buf35, (4, 32, 64), (2048, 64, 1), 0), reinterpret_tensor(buf37, (4, 64, 32), (2048, 1, 64), 0), )
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((64, 3, 4, 4), (48, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((128, 64, 4, 4), (1024, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((2048, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((256, 128, 4, 4), (2048, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((32, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((32, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((256, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4096, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((512, 256, 4, 4), (4096, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((64, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((64, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((512, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((1, 512, 4, 4), (8192, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33])
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:36:50.390000 3191473 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:50.434000 3191473 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xy/cxyalb46v5njmbtf33rshisjulbqgglz2kczdetpv3lh46ezjg2m.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/44/c44dxcxm3ws4vhjk4j5c3khip3vnhch3vxdvpahk7njs63z2q2s3.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv => mul, sum_1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %primals_1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_0 = async_compile.triton('triton_per_fused_mv_0', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 64},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_0(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 48
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 48*r1), xmask, other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(xmask, tmp3, 0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sum(tmp5, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/55/c55xxydm5i63fm4jdjgadukifnxduljmljqbreaju4emzdbtpyx3.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm, add, truediv], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm => pow_1, pow_2, sum_2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, None), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_2, 1e-12), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_1, %add), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_1 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_1', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_1(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 48
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), rmask, other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask, tmp2, 0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 1e-12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 / tmp8
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp9, rmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z7/cz7g3vpbhlnavjxq7jhsljwwmfd55nslndyfwqakxmpes6xy45qw.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_1 => mul_1, sum_3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %div), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_2 = async_compile.triton('triton_per_fused_mv_2', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 64},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_2(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 48
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 48*x0), rmask & xmask, other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(rmask & xmask, tmp3, 0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sum(tmp5, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sn/csnbxz4shohgcnrmnxbm7kp3cqgyujxwhz4cewqbmky3bwj43yre.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_1, add_1, truediv_1], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_1 => pow_3, pow_4, sum_4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div_1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_3, 2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, None), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_4, 0.5), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_4, 1e-12), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_3, %add_1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_3 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_3', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_3(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp2, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp8, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ur/cur45pvs7adohknqvggwxyy2g5zhtxdpz6ig34cgqh65ufimkcbj.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma], Original ATen: [aten.dot]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma => mul_3, sum_6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_1, %sum_3), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_3,), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_4 = async_compile.triton('triton_per_fused_dot_4', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_4(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp3, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/uk/cukp4llnppuogr4ruaizsz7kfqvlktxnqo7354k36bvtjfu67ero.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_3 => mul_5, sum_7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_1, %primals_6), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_5, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_5 = async_compile.triton('triton_red_fused_mv_5', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 128},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_5(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 1024*r1), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kz/ckzfiuuzikavsuwzsaz4adl3ue7lfhbpkdzs4mnqaq56mmu2pc4i.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_2, add_2, truediv_3], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_2 => pow_5, pow_6, sum_8
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_7, 2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_8 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_5, None), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_8, 0.5), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_6, 1e-12), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_7, %add_2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_6 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_6', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 1024},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_6(in_ptr0, out_ptr1, xnumel, rnumel):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 1024
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.promote_to_tensor(tl.sum(tmp2, 0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp8, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/u6/cu6pzzm2bagemecf3w4ge23r2xoodc24s5ayzipbhbnolzgtmg5n.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_4], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_4 => mul_6, sum_9
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %div_3), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_9 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_6, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_7 = async_compile.triton('triton_per_fused_mv_7', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 1024},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_7(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 1024
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 1024*x0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4g/c4giscxvz5477wuheqnz353l5irhaz45ps6aqbfw2wdljqinjtnp.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_3, add_3, truediv_4], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_3 => pow_7, pow_8, sum_10
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_4 => div_4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_9, 2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_10 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_7, None), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_8 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_10, 0.5), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_8, 1e-12), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_4 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_9, %add_3), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_8 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_8', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 128},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_8(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 128
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp2, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp8, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qr/cqrv7dboopgkpj7zezglg465koqsnzpaox7mln27opodtybtd4ra.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_1], Original ATen: [aten.dot]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_1 => mul_8, sum_12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_4, %sum_9), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_12 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_8,), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_9 = async_compile.triton('triton_per_fused_dot_9', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 128},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_9(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 128
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp3, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/px/cpxw7hmetu5hhj3vwyfimf55ac2jdiiyyidcdspt55ggdeq3h25f.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_2], Original ATen: [aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_2 => div_2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_3, %expand), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_10 = async_compile.triton('triton_poi_fused_div_10', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_10(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3072
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fw/cfw7jdg4b4m2uc67bkgr2tqdnhyaixyjpodrleikmahglctf6bp4.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_6], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_6 => mul_10, sum_13
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, %primals_10), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_13 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_10, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_11 = async_compile.triton('triton_red_fused_mv_11', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096, 'r': 128},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_11(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2048)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 2048
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 2048*r2 + 262144*x1), rmask, eviction_policy='evict_first', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 128*x1), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask, tmp5, _tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zn/czn34aklman37iexlfbeggy6ul33xymjvfzv66kpcl46hneexrhq.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_6], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_6 => mul_10, sum_13
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, %primals_10), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_13 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_10, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_12 = async_compile.triton('triton_per_fused_mv_12', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048, 'r': 2},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_12(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 2048*r1), xmask, other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/se/csevn7jesfap2zpy256tlfgrrompnj3snej2hpejdm3upfia6bb3.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_4, add_4, truediv_6], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_4 => pow_10, pow_9, sum_14
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_6 => div_6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_9 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_13, 2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_14 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_9, None), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_10 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_14, 0.5), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_10, 1e-12), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_6 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_13, %add_4), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_add_div_linalg_vector_norm_13 = async_compile.triton('triton_red_fused_add_div_linalg_vector_norm_13', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 2048},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_div_linalg_vector_norm_13', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_add_div_linalg_vector_norm_13(in_out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2048
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp3 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tmp0 * tmp0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp3 = tl.where(rmask, tmp4, _tmp3)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tl.load(in_out_ptr0 + (r0), rmask, eviction_policy='evict_first', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = libdevice.sqrt(tmp3)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = 1e-12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tmp6 + tmp7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp5 / tmp8
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr0 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp9, rmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/uj/cujfmyv7pgqry5gz4yyg5akvuwwpcfstygnb6nor6awewwh5i4p5.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_7], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_7 => mul_11, sum_15
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_6, %div_6), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_15 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_11, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_14 = async_compile.triton('triton_red_fused_mv_14', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 2048},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_14(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2048
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 2048*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yl/cyl3gabdebre2ifagpmmzrzopjgzu6n5wokeceg2wumnlobqpfki.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_5, add_5, truediv_7], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_5 => pow_11, pow_12, sum_16
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_7 => div_7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_11 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_15, 2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_16 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_11, None), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_12 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_16, 0.5), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_12, 1e-12), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_7 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_15, %add_5), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_15 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_15', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_15(in_ptr0, out_ptr1, xnumel, rnumel):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.promote_to_tensor(tl.sum(tmp2, 0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp8, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5b/c5bjwyk7a6dtuel3j2tcwizxzum6ghbscuftwdxas67kepxbhiou.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_2], Original ATen: [aten.dot]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_2 => mul_13, sum_18
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_7, %sum_15), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_18 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_13,), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_16 = async_compile.triton('triton_per_fused_dot_16', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_16', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_16(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vk/cvk6asbcvxzxztzzdeew7rzs5i3mcoao7jedehyufacvrjfj54nt.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_9], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_9 => mul_16, sum_20
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_5, %primals_21), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_20 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_16, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_17 = async_compile.triton('triton_red_fused_mv_17', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384, 'r': 128},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_17', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_17(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4096
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 4096*r2 + 524288*x1), rmask, eviction_policy='evict_first', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 128*x1), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask, tmp5, _tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vn/cvnoqhbqgtsjxpbsuvydxyy44ryzzh65ceylphtkxniznw2uqe6h.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_9], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_9 => mul_16, sum_20
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_5, %primals_21), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_20 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_16, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_18 = async_compile.triton('triton_per_fused_mv_18', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096, 'r': 4},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_18(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4096*r1), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(tmp1, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ur/curj5qog6snqcertnjymad3u5tbytlcfzcpssambjwtg5ytw5gi4.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_6, add_7, truediv_9], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_6 => pow_13, pow_14, sum_21
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_9 => div_10
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_13 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_20, 2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_21 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_13, None), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_14 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_21, 0.5), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_14, 1e-12), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_10 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_20, %add_7), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_add_div_linalg_vector_norm_19 = async_compile.triton('triton_red_fused_add_div_linalg_vector_norm_19', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 4096},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_div_linalg_vector_norm_19', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_add_div_linalg_vector_norm_19(in_out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp3 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tmp0 * tmp0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp3 = tl.where(rmask, tmp4, _tmp3)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tl.load(in_out_ptr0 + (r0), rmask, eviction_policy='evict_first', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = libdevice.sqrt(tmp3)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = 1e-12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tmp6 + tmp7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp5 / tmp8
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr0 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp9, rmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/o7/co7uttb6hfl3bor3vmwvughai5ulppgh2ixothufmj6rwt3iydur.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_10], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_10 => mul_17, sum_22
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_13, %div_10), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_22 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_17, [1]), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_20 = async_compile.triton('triton_red_fused_mv_20', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512, 'r': 4096},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_20', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_20(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yh/cyheuhtbglj2opfbcmtf3c3dhabmr6znxa3b6qmfdsntyayxfgld.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_7, add_8, truediv_10], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_8 => add_8
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_7 => pow_15, pow_16, sum_23
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_10 => div_11
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_15 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_22, 2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_23 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_15, None), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_16 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_23, 0.5), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_16, 1e-12), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_11 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_22, %add_8), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_linalg_vector_norm_21 = async_compile.triton('triton_per_fused_add_div_linalg_vector_norm_21', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 512},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_linalg_vector_norm_21', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_linalg_vector_norm_21(in_ptr0, out_ptr1, xnumel, rnumel):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 512
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 512
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.promote_to_tensor(tl.sum(tmp2, 0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp8, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sg/csgm3e3dvnn6iwwphqeuhfgoxhscqf7hj53ryu5kmhuzevcurwwn.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_3], Original ATen: [aten.dot]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_3 => mul_19, sum_25
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_11, %sum_22), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_25 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_19,), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_22 = async_compile.triton('triton_per_fused_dot_22', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 512},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_22', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_22(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 512
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 512
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vl/cvlm4isuf2m2vo3i7zn4edvyyco2ws4poyliu4suzxmw5t6vhdxv.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_5], Original ATen: [aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_5 => div_5
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_5 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_8, %expand_1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_23 = async_compile.triton('triton_poi_fused_div_23', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_23', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_23(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 131072
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kj/ckjvz7ybzypba2tijugax7i5q3wn3dg6qhprcgkqsu53ap7rumsf.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => gt, mul_4, where
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_5, %div_2, %primals_4, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul_4), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_24 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_24', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_24', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_24(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 1024) % 64)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/p7/cp7xx7u2sei3vymch5bxi2rvarwhzmi5w2zytd5m5svk6mlvn43k.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution_1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => gt_1, mul_9, where_1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where, %div_5, %primals_9, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_9), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_25 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_25', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_25', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_25(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 131072
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 128)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ih/cihgrdsroy4bf757sef3ypwqeuobqwa2dpji6rmtt4hwc52sdqjn.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_8], Original ATen: [aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_8 => div_8
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_8 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_12, %expand_2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_26 = async_compile.triton('triton_poi_fused_div_26', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_26', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_26(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3z/c3zce7ovoi4xdvpmyvg64avpmxt5k3h6lei3nasmivxt7q4htoqz.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_2, mul_14, where_2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where_1, %div_8, %primals_13, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_2, 0), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_2, 0.1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %convolution_2, %mul_14), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_27 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_27', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_27', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_27(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 256)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ox/coxqmjdcs5opkryjht32t5iqqc3ulcfk6okdu4dzuh4vkdufjfsx.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_3 => convolution_3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_2, %primals_14, %primals_15, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_28 = async_compile.triton('triton_poi_fused_convolution_28', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_28', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_28(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/j6/cj6cpm4t7rhmjkqm7wctiijrqmrowetbjgck3mduxviueeehbg3s.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attention], Original ATen: [aten._softmax]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attention => amax, div_9, exp, sub, sum_19
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%bmm, [-1], True), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%bmm, %amax), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_19 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_9 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_19), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_29 = async_compile.triton('triton_per_fused__softmax_29', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 64},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_29', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_29(in_out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 64*x0), xmask, other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 - tmp4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp7, 0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 / tmp10
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 64*x0), tmp11, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/l3/cl344w4utgujynqayptfc5vdyg3ao6eohxs4gmfelgyzvj5xvh7q.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_5 => convolution_5
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_2, %primals_18, %primals_19, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_30 = async_compile.triton('triton_poi_fused_convolution_30', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_30', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_30(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 256)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sh/cshgjckcsrvtyp472khnp7pp2h3yefxzj2pcjyun2bvlfhk7yqci.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, out_2], Original ATen: [aten.mul, aten.add]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_15
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_20, %view_12), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_15, %where_2), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_31 = async_compile.triton('triton_poi_fused_add_mul_31', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_31', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_31(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ji/cjil5gp7r7k4ej2ttjvqbzpxtsrx2qsaiqrjazlttfhlcxtl5goh.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_11], Original ATen: [aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_11 => div_12
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_12 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_23, %expand_3), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_32 = async_compile.triton('triton_poi_fused_div_32', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_32', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_32(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2097152
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7q/c7qpucy7z63ecoa6hmwb7zjvalwyek7jtp5ppkejf6pik5vaaeer.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => convolution_6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => gt_3, mul_20, where_3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_6 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%add_6, %div_12, %primals_24, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_6, 0), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_6, 0.1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %convolution_6, %mul_20), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_33 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_33', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_33', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_33(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 512)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ht/cht2hlcgppenowhxghgpidnu66eztefpnzec2zzxxjcmwcp56ayt.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_7 => convolution_7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_7 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_3, %primals_25, %primals_26, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_34 = async_compile.triton('triton_poi_fused_convolution_34', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_34', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_34(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 64)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fc/cfcruenzn2ktluz6aoyioduojm2tqw3zykmhd4fozg32f2saeju7.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attention_1], Original ATen: [aten._softmax]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attention_1 => amax_1, div_13, exp_1, sub_1, sum_26
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%bmm_2, [-1], True), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%bmm_2, %amax_1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_26 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_13 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_26), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_35 = async_compile.triton('triton_per_fused__softmax_35', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 16},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_35', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_35(in_out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 - tmp4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp7, 0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 / tmp10
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 16*x0), tmp11, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fr/cfr5tmaep224kuuoajqgplwcia2pz5zvfyollmyt3fxjvyhyitd3.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_9], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_9 => convolution_9
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_9 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_3, %primals_29, %primals_30, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_36 = async_compile.triton('triton_poi_fused_convolution_36', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_36', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_36(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 512)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hi/chi6cl6wr7qzcs4zizwksldomo3lbttezxuxaabwo7xne6fzta3h.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_1, out_5], Original ATen: [aten.mul, aten.add]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_21
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_5 => add_9
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_31, %view_19), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_21, %where_3), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_37 = async_compile.triton('triton_poi_fused_add_mul_37', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_37', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_37(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x0), None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/uv/cuvhnccowqwhwumosgt3b55xrxhsmnkrzkybyaaynstsen5iwn3e.py
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => convolution_10
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_10 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%add_9, %primals_32, %primals_33, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_38 = async_compile.triton('triton_poi_fused_convolution_38', '''
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_38', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_38(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33 = args
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (48, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (64, 3, 4, 4), (48, 16, 4, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (128, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1024, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (128, 64, 4, 4), (1024, 16, 4, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (128, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (2048, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (256, 128, 4, 4), (2048, 16, 4, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (32, 256, 1, 1), (256, 1, 1, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (32, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (32, 256, 1, 1), (256, 1, 1, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (32, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (256, 256, 1, 1), (256, 1, 1, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (256, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (1, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (512, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4096, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (512, 256, 4, 4), (4096, 16, 4, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (512, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (64, 512, 1, 1), (512, 1, 1, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (64, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (64, 512, 1, 1), (512, 1, 1, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (64, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (512, 512, 1, 1), (512, 1, 1, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (512, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (1, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (1, 512, 4, 4), (8192, 16, 4, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (1, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((48, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_0.run(primals_3, primals_1, buf0, 48, 64, grid=grid(48), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((48, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm, add, truediv], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_1.run(buf0, buf2, 1, 48, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_2.run(primals_3, buf2, buf3, 64, 48, grid=grid(64), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf77 = torch.ops.aten.set_.source_Tensor(primals_2, buf2)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf77, (48, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_1, add_1, truediv_1], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_3.run(buf3, buf5, 1, 64, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((), (), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma], Original ATen: [aten.dot]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_4.run(buf5, buf3, buf6, 1, 64, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf72 = torch.ops.aten.set_.source_Tensor(primals_1, buf5)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf72, (64, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((1024, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_5.run(primals_8, primals_6, buf11, 1024, 128, grid=grid(1024), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((1024, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_2, add_2, truediv_3], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_6.run(buf11, buf13, 1, 1024, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((128, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_4], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_7.run(primals_8, buf13, buf14, 128, 1024, grid=grid(128), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf86 = torch.ops.aten.set_.source_Tensor(primals_7, buf13)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf86, (1024, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((128, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_3, add_3, truediv_4], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_8.run(buf14, buf16, 1, 128, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((), (), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_1], Original ATen: [aten.dot]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_9.run(buf16, buf14, buf17, 1, 128, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf81 = torch.ops.aten.set_.source_Tensor(primals_6, buf16)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf81, (128, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((64, 3, 4, 4), (48, 16, 4, 1), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_2], Original ATen: [aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_10.run(primals_3, buf6, buf7, 3072, grid=grid(3072), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((2048, 2), (1, 2048), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_6], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_11.run(primals_12, primals_10, buf22, 4096, 128, grid=grid(4096), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((2048, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_6], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_12.run(buf22, buf23, 2048, 2, grid=grid(2048), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = buf23; del buf23  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_4, add_4, truediv_6], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_add_div_linalg_vector_norm_13.run(buf25, 1, 2048, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_7], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_14.run(primals_12, buf25, buf26, 256, 2048, grid=grid(256), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf95 = torch.ops.aten.set_.source_Tensor(primals_11, buf25)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf95, (2048, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_5, add_5, truediv_7], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_15.run(buf26, buf28, 1, 256, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((), (), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_2], Original ATen: [aten.dot]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_16.run(buf28, buf26, buf29, 1, 256, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf90 = torch.ops.aten.set_.source_Tensor(primals_10, buf28)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf90, (256, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = empty_strided_cuda((4096, 4), (1, 4096), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_9], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_17.run(primals_23, primals_21, buf46, 16384, 128, grid=grid(16384), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = reinterpret_tensor(buf22, (4096, ), (1, ), 0); del buf22  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_9], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_18.run(buf46, buf47, 4096, 4, grid=grid(4096), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = buf47; del buf47  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_6, add_7, truediv_9], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_add_div_linalg_vector_norm_19.run(buf49, 1, 4096, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = empty_strided_cuda((512, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_10], Original ATen: [aten.mv]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_20.run(primals_23, buf49, buf50, 512, 4096, grid=grid(512), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf104 = torch.ops.aten.set_.source_Tensor(primals_22, buf49)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf104, (4096, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = empty_strided_cuda((512, ), (1, ), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_7, add_8, truediv_10], Original ATen: [aten.linalg_vector_norm, aten.add, aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_linalg_vector_norm_21.run(buf50, buf52, 1, 512, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = empty_strided_cuda((), (), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_3], Original ATen: [aten.dot]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_22.run(buf52, buf50, buf53, 1, 512, grid=grid(1), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf50
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf99 = torch.ops.aten.set_.source_Tensor(primals_21, buf52)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf99, (512, ), (1, ))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((128, 64, 4, 4), (1024, 16, 4, 1), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_5], Original ATen: [aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_23.run(primals_8, buf17, buf18, 131072, grid=grid(131072), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(primals_5, buf7, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 64, 32, 32), (65536, 1024, 32, 1), torch.bool)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf8; del buf8  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_24.run(buf10, primals_4, buf9, 262144, grid=grid(262144), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf10, buf18, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 128, 16, 16), (32768, 256, 16, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 128, 16, 16), (32768, 256, 16, 1), torch.bool)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf19; del buf19  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_25.run(buf21, primals_9, buf20, 131072, grid=grid(131072), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((256, 128, 4, 4), (2048, 16, 4, 1), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_8], Original ATen: [aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_26.run(primals_12, buf29, buf30, 524288, grid=grid(524288), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = extern_kernels.convolution(buf21, buf30, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf31, (4, 256, 8, 8), (16384, 64, 8, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((4, 256, 8, 8), (16384, 64, 8, 1), torch.bool)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = buf31; del buf31  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_27.run(buf33, primals_13, buf32, 65536, grid=grid(65536), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = extern_kernels.convolution(buf33, primals_14, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf34, (4, 32, 8, 8), (2048, 64, 8, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = buf34; del buf34  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_28.run(buf35, primals_15, 8192, grid=grid(8192), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf33, primals_16, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 32, 8, 8), (2048, 64, 8, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf36; del buf36  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_28.run(buf37, primals_17, 8192, grid=grid(8192), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = reinterpret_tensor(buf46, (4, 64, 64), (4096, 64, 1), 0); del buf46  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [energy], Original ATen: [aten.bmm]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf35, (4, 64, 32), (2048, 1, 64), 0), reinterpret_tensor(buf37, (4, 32, 64), (2048, 64, 1), 0), out=buf38)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = buf38; del buf38  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attention], Original ATen: [aten._softmax]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_29.run(buf41, 256, 64, grid=grid(256), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = extern_kernels.convolution(buf33, primals_18, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf42, (4, 256, 8, 8), (16384, 64, 8, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = buf42; del buf42  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_30.run(buf43, primals_19, 65536, grid=grid(65536), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = empty_strided_cuda((4, 256, 64), (16384, 64, 1), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.bmm]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf43, (4, 256, 64), (16384, 64, 1), 0), reinterpret_tensor(buf41, (4, 64, 64), (4096, 1, 64), 0), out=buf44)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = empty_strided_cuda((4, 256, 8, 8), (16384, 64, 8, 1), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, out_2], Original ATen: [aten.mul, aten.add]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_31.run(primals_20, buf44, buf33, buf45, 65536, grid=grid(65536), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = empty_strided_cuda((512, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_11], Original ATen: [aten.div]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_32.run(primals_23, buf53, buf54, 2097152, grid=grid(2097152), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = extern_kernels.convolution(buf45, buf54, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf55, (4, 512, 4, 4), (8192, 16, 4, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = empty_strided_cuda((4, 512, 4, 4), (8192, 16, 4, 1), torch.bool)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = buf55; del buf55  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_33.run(buf57, primals_24, buf56, 32768, grid=grid(32768), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_24
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = extern_kernels.convolution(buf57, primals_25, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf58, (4, 64, 4, 4), (1024, 16, 4, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = buf58; del buf58  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_34.run(buf59, primals_26, 4096, grid=grid(4096), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_8], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = extern_kernels.convolution(buf57, primals_27, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf60, (4, 64, 4, 4), (1024, 16, 4, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf61 = buf60; del buf60  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_8], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_34.run(buf61, primals_28, 4096, grid=grid(4096), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_28
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf62 = reinterpret_tensor(buf11, (4, 16, 16), (256, 16, 1), 0); del buf11  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [energy_1], Original ATen: [aten.bmm]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf59, (4, 16, 64), (1024, 1, 16), 0), reinterpret_tensor(buf61, (4, 64, 16), (1024, 16, 1), 0), out=buf62)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf65 = buf62; del buf62  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attention_1], Original ATen: [aten._softmax]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_35.run(buf65, 64, 16, grid=grid(64), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_9], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf66 = extern_kernels.convolution(buf57, primals_29, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf66, (4, 512, 4, 4), (8192, 16, 4, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf67 = buf66; del buf66  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_9], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_36.run(buf67, primals_30, 32768, grid=grid(32768), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_30
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf68 = empty_strided_cuda((4, 512, 16), (8192, 16, 1), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_3], Original ATen: [aten.bmm]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf67, (4, 512, 16), (8192, 16, 1), 0), reinterpret_tensor(buf65, (4, 16, 16), (256, 1, 16), 0), out=buf68)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf69 = empty_strided_cuda((4, 512, 4, 4), (8192, 16, 4, 1), torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, out_5], Original ATen: [aten.mul, aten.add]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_37.run(primals_31, buf68, buf57, buf69, 32768, grid=grid(32768), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf70 = extern_kernels.convolution(buf69, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf70, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf71 = reinterpret_tensor(buf70, (4, 1, 1, 1), (1, 4, 4, 4), 0); del buf70  # reuse
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_38.run(buf71, primals_33, 4, grid=grid(4), stream=stream0)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf71, (4, ), (1, ), 0), buf41, buf65, buf7, buf18, buf30, buf54, primals_3, primals_5, primals_8, primals_12, primals_14, primals_16, primals_18, primals_20, primals_23, primals_25, primals_27, primals_29, primals_31, primals_32, buf2, buf5, buf6, buf7, buf9, buf10, buf13, buf16, buf17, buf18, buf20, buf21, buf25, buf28, buf29, buf30, buf32, buf33, buf41, buf44, buf45, buf49, buf52, buf53, buf54, buf56, buf57, buf65, buf68, buf69, reinterpret_tensor(buf67, (4, 16, 512), (8192, 1, 16), 0), reinterpret_tensor(buf59, (4, 64, 16), (1024, 16, 1), 0), reinterpret_tensor(buf61, (4, 16, 64), (1024, 1, 16), 0), reinterpret_tensor(buf43, (4, 64, 256), (16384, 1, 64), 0), reinterpret_tensor(buf35, (4, 32, 64), (2048, 64, 1), 0), reinterpret_tensor(buf37, (4, 64, 32), (2048, 1, 64), 0), )
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((64, 3, 4, 4), (48, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((128, 64, 4, 4), (1024, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((2048, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((256, 128, 4, 4), (2048, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((32, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((32, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((256, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4096, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((512, 256, 4, 4), (4096, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((64, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((64, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((512, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((1, 512, 4, 4), (8192, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33])
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:25:33.133000 652044 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:33.176000 652044 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/6y/c6y2gq6nnd6io7o4bepfp3gai2cm3j46vzmfesh2nokvsg6nhjep.py
