V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['71_forward']
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/iy/ciyh66aljetjvn65ipmg4vtc34yhxldiha4kdslyluhg22znffwh.py
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten._to_copy]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => convert_element_type_1
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=7] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_0 = async_compile.triton('triton_poi_fused__to_copy_0', '''
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/n7/cn7wqwhpkhpjvfhiih6w5orq5d54m6qrecv5df6xlxut6qdp5qfi.py
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.add, aten.clamp]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => add_1, clamp_max
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_1, 3), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_1 = async_compile.triton('triton_poi_fused_add_clamp_1', '''
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 1, tl.int64)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 3, tl.int64)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/24/c24ew2k4tsepqcqhj6fozuqhgkyt2dzes54scenv7ggxirsoo2yb.py
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => add, clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul_1, sub, sub_2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (2,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type, 0.5), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, 2.0), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_1, 0.5), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0.0), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2', '''
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 - tmp10
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp7)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.minimum(tmp12, tmp13)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nv/cnvmzlnd7p4w7bgm4gxacx3whyzcnbnscludijwy3woecz2ty2ga.py
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d, out, out_1, x], Original ATen: [aten.convolution, aten.leaky_relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => gt, mul, where
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_4, add_5, add_6, mul_3, mul_4, mul_5, sub_3, sub_4, sub_6
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_11, add_12, add_13, mul_10, mul_11, mul_9, sub_10, sub_11, sub_13
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.2), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %clamp_max_2), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_3), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_2), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_4), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %add_4), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_3), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %mul_5), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_3, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_3, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_3, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_3, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %clamp_max_2), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_9), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_2), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_10), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_12, %add_11), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %clamp_max_3), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %mul_11), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3 = async_compile.triton('triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3', '''
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'in_ptr5': '*fp32', 'in_ptr6': '*i64', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, xnumel, XBLOCK : tl.constexpr):
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 2) % 2)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4) % 4)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 4, tl.int32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (tmp8 + 4*tmp4 + 16*x5), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 > tmp12
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp11 * tmp14
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp13, tmp11, tmp15)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp1
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 < 0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp19, tmp18, tmp17)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr2 + (tmp20 + 4*tmp4 + 16*x5), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp10
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 > tmp12
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp14
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp23, tmp22, tmp24)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 - tmp16
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp16 + tmp28
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp1
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 < 0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp32, tmp31, tmp30)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr2 + (tmp8 + 4*tmp33 + 16*x5), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp10
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 > tmp12
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 * tmp14
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp36, tmp35, tmp37)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr2 + (tmp20 + 4*tmp33 + 16*x5), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp10
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 > tmp12
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 * tmp14
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp41, tmp40, tmp42)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 - tmp38
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 * tmp27
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp38 + tmp45
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 - tmp29
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 * tmp48
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp29 + tmp49
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr8 + (tmp8 + 4*tmp4 + 16*x5), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr8 + (tmp20 + 4*tmp4 + 16*x5), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 - tmp51
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 * tmp27
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp51 + tmp54
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr8 + (tmp8 + 4*tmp33 + 16*x5), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr8 + (tmp20 + 4*tmp33 + 16*x5), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 - tmp56
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 * tmp27
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp56 + tmp59
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 - tmp55
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 * tmp48
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp55 + tmp62
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp50, xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (x4), tmp63, xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vs/cvs2kuh7xxq7cteeuwfuyebhzqabehscxpsleqxfjqob6c5ehwqn.py
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_1, out_2, out_3], Original ATen: [aten.convolution, aten.leaky_relu, aten.add, aten.leaky_relu_backward]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_1 => convolution_1
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => gt_1, mul_6, where_1
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => add_14
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%add_6, %primals_4, %primals_5, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.2), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_6), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_1, %convolution_2), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_1, 0), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4 = async_compile.triton('triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4', '''
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 > tmp3
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp9, xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sc/csc3tzodtcx27woulvjnedlbazmkewlvxl2hjpvuyutluos5thut.py
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d, out], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => gt, mul, where
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.2), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where, 0), kwargs = {})
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5', '''
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 > tmp3
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, xmask)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6 = args
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((2, 1), (1, 1), torch.int64)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten._to_copy]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_0.run(buf1, 2, grid=grid(2), stream=stream0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((2, 1), (1, 1), torch.int64)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.add, aten.clamp]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_1.run(buf2, 2, grid=grid(2), stream=stream0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_0.run(buf3, 2, grid=grid(2), stream=stream0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.add, aten.clamp]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_1.run(buf4, 2, grid=grid(2), stream=stream0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((2, ), (1, ), torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2.run(buf5, 2, grid=grid(2), stream=stream0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((2, 1), (1, 1), torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.sub, aten.clamp]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2.run(buf7, 2, grid=grid(2), stream=stream0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf6; del buf6  # reuse
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d, out, out_1, x], Original ATen: [aten.convolution, aten.leaky_relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3.run(buf9, buf12, buf1, buf3, buf0, primals_2, buf4, buf5, buf2, buf7, primals_3, 64, grid=grid(64), stream=stream0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 4, 2, 2), (16, 4, 2, 1))
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [skip], Original ATen: [aten.convolution]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 4, 2, 2), (16, 4, 2, 1))
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = buf13; del buf13  # reuse
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.bool)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1, out_2, out_3], Original ATen: [aten.convolution, aten.leaky_relu, aten.add, aten.leaky_relu_backward]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4.run(buf14, buf10, primals_5, buf15, 64, grid=grid(64), stream=stream0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d, out], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf0, primals_2, buf16, 256, grid=grid(256), stream=stream0)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf14, primals_1, primals_3, primals_4, primals_6, buf1, buf2, buf3, buf4, buf5, buf7, buf9, buf12, buf15, buf16, )
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6])
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:54:47.100000 2390417 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:54:47.112000 2390417 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/a5/ca5ps4bx4tewrliorgswzytb67dglav6oejzysnpudhaienpkz53.py
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['71_forward']
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/iy/ciyh66aljetjvn65ipmg4vtc34yhxldiha4kdslyluhg22znffwh.py
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten._to_copy]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => convert_element_type_1
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=7] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_0 = async_compile.triton('triton_poi_fused__to_copy_0', '''
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/n7/cn7wqwhpkhpjvfhiih6w5orq5d54m6qrecv5df6xlxut6qdp5qfi.py
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.add, aten.clamp]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => add_1, clamp_max
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_1, 3), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_1 = async_compile.triton('triton_poi_fused_add_clamp_1', '''
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 1, tl.int64)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 3, tl.int64)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/24/c24ew2k4tsepqcqhj6fozuqhgkyt2dzes54scenv7ggxirsoo2yb.py
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => add, clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul_1, sub, sub_2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (2,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type, 0.5), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, 2.0), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_1, 0.5), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0.0), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2', '''
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 - tmp10
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp7)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.minimum(tmp12, tmp13)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nv/cnvmzlnd7p4w7bgm4gxacx3whyzcnbnscludijwy3woecz2ty2ga.py
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d, out, out_1, x], Original ATen: [aten.convolution, aten.leaky_relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => gt, mul, where
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_4, add_5, add_6, mul_3, mul_4, mul_5, sub_3, sub_4, sub_6
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_11, add_12, add_13, mul_10, mul_11, mul_9, sub_10, sub_11, sub_13
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.2), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %clamp_max_2), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_3), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_2), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_4), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %add_4), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_3), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %mul_5), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_3, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_3, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_3, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_3, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %clamp_max_2), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_9), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_2), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_10), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_12, %add_11), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %clamp_max_3), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %mul_11), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3 = async_compile.triton('triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3', '''
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'in_ptr5': '*fp32', 'in_ptr6': '*i64', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, xnumel, XBLOCK : tl.constexpr):
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 2) % 2)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4) % 4)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 4, tl.int32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (tmp8 + 4*tmp4 + 16*x5), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 > tmp12
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp11 * tmp14
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp13, tmp11, tmp15)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp1
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 < 0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp19, tmp18, tmp17)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr2 + (tmp20 + 4*tmp4 + 16*x5), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp10
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 > tmp12
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp14
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp23, tmp22, tmp24)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 - tmp16
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp16 + tmp28
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp1
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 < 0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp32, tmp31, tmp30)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr2 + (tmp8 + 4*tmp33 + 16*x5), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp10
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 > tmp12
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 * tmp14
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp36, tmp35, tmp37)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr2 + (tmp20 + 4*tmp33 + 16*x5), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp10
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 > tmp12
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 * tmp14
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp41, tmp40, tmp42)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 - tmp38
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 * tmp27
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp38 + tmp45
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 - tmp29
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 * tmp48
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp29 + tmp49
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr8 + (tmp8 + 4*tmp4 + 16*x5), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr8 + (tmp20 + 4*tmp4 + 16*x5), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 - tmp51
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 * tmp27
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp51 + tmp54
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr8 + (tmp8 + 4*tmp33 + 16*x5), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr8 + (tmp20 + 4*tmp33 + 16*x5), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 - tmp56
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 * tmp27
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp56 + tmp59
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 - tmp55
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 * tmp48
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp55 + tmp62
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp50, xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (x4), tmp63, xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vs/cvs2kuh7xxq7cteeuwfuyebhzqabehscxpsleqxfjqob6c5ehwqn.py
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_1, out_2, out_3], Original ATen: [aten.convolution, aten.leaky_relu, aten.add, aten.leaky_relu_backward]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_1 => convolution_1
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => gt_1, mul_6, where_1
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => add_14
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%add_6, %primals_4, %primals_5, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.2), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_6), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_1, %convolution_2), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_1, 0), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4 = async_compile.triton('triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4', '''
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 > tmp3
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp9, xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sc/csc3tzodtcx27woulvjnedlbazmkewlvxl2hjpvuyutluos5thut.py
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d, out], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => gt, mul, where
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.2), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where, 0), kwargs = {})
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5', '''
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 > tmp3
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, xmask)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6 = args
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((2, 1), (1, 1), torch.int64)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten._to_copy]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_0.run(buf1, 2, grid=grid(2), stream=stream0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((2, 1), (1, 1), torch.int64)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.add, aten.clamp]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_1.run(buf2, 2, grid=grid(2), stream=stream0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_0.run(buf3, 2, grid=grid(2), stream=stream0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.add, aten.clamp]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_1.run(buf4, 2, grid=grid(2), stream=stream0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((2, ), (1, ), torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2.run(buf5, 2, grid=grid(2), stream=stream0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((2, 1), (1, 1), torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.sub, aten.clamp]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_2.run(buf7, 2, grid=grid(2), stream=stream0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf6; del buf6  # reuse
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d, out, out_1, x], Original ATen: [aten.convolution, aten.leaky_relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_convolution_leaky_relu_mul_sub_3.run(buf9, buf12, buf1, buf3, buf0, primals_2, buf4, buf5, buf2, buf7, primals_3, 64, grid=grid(64), stream=stream0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 4, 2, 2), (16, 4, 2, 1))
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [skip], Original ATen: [aten.convolution]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 4, 2, 2), (16, 4, 2, 1))
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = buf13; del buf13  # reuse
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 4, 2, 2), (16, 4, 2, 1), torch.bool)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1, out_2, out_3], Original ATen: [aten.convolution, aten.leaky_relu, aten.add, aten.leaky_relu_backward]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_4.run(buf14, buf10, primals_5, buf15, 64, grid=grid(64), stream=stream0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d, out], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf0, primals_2, buf16, 256, grid=grid(256), stream=stream0)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf14, primals_1, primals_3, primals_4, primals_6, buf1, buf2, buf3, buf4, buf5, buf7, buf9, buf12, buf15, buf16, )
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6])
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:44:32.411000 409561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:44:32.422000 409561 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/zf/czfpslatowhfsk2xwgtmgswyzexiieauwi5tlsdbp2d6r63bnxy2.py
