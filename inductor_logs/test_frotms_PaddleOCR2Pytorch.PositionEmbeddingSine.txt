V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['49_inference']
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wg/cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_embed], Original ATen: [aten.cumsum]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_embed => cumsum
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%arg0_1, 1), kwargs = {dtype: torch.float32})
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cumsum_0 = async_compile.triton('triton_per_fused_cumsum_0', '''
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 4},
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cumsum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cumsum_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*r2 + 16*x1), xmask, other=0.0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3, = tl.associative_scan((tmp2,), 1, _triton_helper_fn_add0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 4*r2 + 16*x1), tmp3, xmask)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/e3/ce3uzcejywe7g3wr2tneqam2gso66qphwtgpqveot3ayctvo3e3v.py
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_embed], Original ATen: [aten.cumsum]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_embed => cumsum_1
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum_1 : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%arg0_1, 2), kwargs = {dtype: torch.float32})
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cumsum_1 = async_compile.triton('triton_per_fused_cumsum_1', '''
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 4},
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cumsum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cumsum_1(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 4*x0), xmask, other=0.0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3, = tl.associative_scan((tmp2,), 1, _triton_helper_fn_add0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 4*x0), tmp3, xmask)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7z/c7zm4nxxj6x35opozupbku7qxg4jxmo7jmj2nkdfxzddlxcpbu7q.py
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat_2
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view_1, %view], 3), kwargs = {})
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 128
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 64, tl.int64)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = ((x0) % 2)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 0, tl.int64)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int64)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp4
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (x1), tmp10, eviction_policy='evict_last', other=0.0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 2*((((x0) // 2) % 32))
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.5
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.floor(tmp15)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 2.0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 0.015625
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 10000.0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.pow(tmp21, tmp20)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp11 / tmp22
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl_math.sin(tmp23)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp5 >= tmp8
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1], 2, tl.int64)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp5 < tmp28
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp27 & tmp4
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (x1), tmp30, eviction_policy='evict_last', other=0.0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1 + 2*((((x0) // 2) % 32))
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32.to(tl.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 0.5
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 * tmp34
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = libdevice.floor(tmp35)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 2.0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 0.015625
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = 10000.0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = libdevice.pow(tmp41, tmp40)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp31 / tmp42
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl_math.cos(tmp43)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full(tmp44.shape, 0.0, tmp44.dtype)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp30, tmp44, tmp45)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp9, tmp26, tmp46)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.full(tmp47.shape, 0.0, tmp47.dtype)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp4, tmp47, tmp48)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp0 >= tmp3
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.full([1], 128, tl.int64)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp0 < tmp51
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = (((-64) + x0) % 2)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full([1], 0, tl.int64)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 >= tmp54
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.full([1], 1, tl.int64)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp53 < tmp56
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 & tmp50
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr1 + (x1), tmp58, eviction_policy='evict_last', other=0.0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = 2*(((((-64) + x0) // 2) % 32))
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60.to(tl.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = 0.5
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 * tmp62
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = libdevice.floor(tmp63)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = 2.0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 * tmp65
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = 0.015625
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 * tmp67
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = 10000.0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = libdevice.pow(tmp69, tmp68)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp59 / tmp70
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl_math.sin(tmp71)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.full(tmp72.shape, 0.0, tmp72.dtype)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.where(tmp58, tmp72, tmp73)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp53 >= tmp56
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.full([1], 2, tl.int64)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp53 < tmp76
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp75 & tmp50
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.load(in_ptr1 + (x1), tmp78, eviction_policy='evict_last', other=0.0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = 1 + 2*(((((-64) + x0) // 2) % 32))
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp80.to(tl.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = 0.5
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp81 * tmp82
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = libdevice.floor(tmp83)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = 2.0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 * tmp85
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = 0.015625
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp86 * tmp87
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = 10000.0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = libdevice.pow(tmp89, tmp88)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp79 / tmp90
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl_math.cos(tmp91)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.full(tmp92.shape, 0.0, tmp92.dtype)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tl.where(tmp78, tmp92, tmp93)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.where(tmp57, tmp74, tmp94)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.full(tmp95.shape, 0.0, tmp95.dtype)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp50, tmp95, tmp96)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.where(tmp4, tmp49, tmp97)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp98, None)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_embed], Original ATen: [aten.cumsum]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cumsum_0.run(arg0_1, buf0, 16, 4, grid=grid(16), stream=stream0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_embed], Original ATen: [aten.cumsum]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cumsum_1.run(arg0_1, buf1, 16, 4, grid=grid(16), stream=stream0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 128), (2048, 512, 128, 1), torch.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(buf0, buf1, buf2, 8192, grid=grid(8192), stream=stream0)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf2, (4, 128, 4, 4), (2048, 1, 512, 128), 0), )
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:19:44.148000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:44.152000 2798527 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/y6/cy6dyk2riez7f5nclc2z3uzj2ritymdfdcyxjr3ukshy6v5vt2si.py
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['49_inference']
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wg/cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_embed], Original ATen: [aten.cumsum]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_embed => cumsum
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%arg0_1, 1), kwargs = {dtype: torch.float32})
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cumsum_0 = async_compile.triton('triton_per_fused_cumsum_0', '''
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 4},
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cumsum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cumsum_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*r2 + 16*x1), xmask, other=0.0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3, = tl.associative_scan((tmp2,), 1, _triton_helper_fn_add0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 4*r2 + 16*x1), tmp3, xmask)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/e3/ce3uzcejywe7g3wr2tneqam2gso66qphwtgpqveot3ayctvo3e3v.py
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_embed], Original ATen: [aten.cumsum]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_embed => cumsum_1
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum_1 : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%arg0_1, 2), kwargs = {dtype: torch.float32})
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cumsum_1 = async_compile.triton('triton_per_fused_cumsum_1', '''
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 4},
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cumsum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cumsum_1(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 4*x0), xmask, other=0.0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3, = tl.associative_scan((tmp2,), 1, _triton_helper_fn_add0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 4*x0), tmp3, xmask)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7z/c7zm4nxxj6x35opozupbku7qxg4jxmo7jmj2nkdfxzddlxcpbu7q.py
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat_2
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view_1, %view], 3), kwargs = {})
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 128
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 64, tl.int64)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = ((x0) % 2)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 0, tl.int64)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int64)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp4
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (x1), tmp10, eviction_policy='evict_last', other=0.0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 2*((((x0) // 2) % 32))
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.5
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.floor(tmp15)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 2.0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 0.015625
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 10000.0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.pow(tmp21, tmp20)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp11 / tmp22
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl_math.sin(tmp23)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp5 >= tmp8
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1], 2, tl.int64)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp5 < tmp28
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp27 & tmp4
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (x1), tmp30, eviction_policy='evict_last', other=0.0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1 + 2*((((x0) // 2) % 32))
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32.to(tl.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 0.5
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 * tmp34
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = libdevice.floor(tmp35)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 2.0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 0.015625
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = 10000.0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = libdevice.pow(tmp41, tmp40)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp31 / tmp42
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl_math.cos(tmp43)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full(tmp44.shape, 0.0, tmp44.dtype)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp30, tmp44, tmp45)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp9, tmp26, tmp46)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.full(tmp47.shape, 0.0, tmp47.dtype)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp4, tmp47, tmp48)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp0 >= tmp3
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.full([1], 128, tl.int64)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp0 < tmp51
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = (((-64) + x0) % 2)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full([1], 0, tl.int64)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 >= tmp54
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.full([1], 1, tl.int64)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp53 < tmp56
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 & tmp50
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr1 + (x1), tmp58, eviction_policy='evict_last', other=0.0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = 2*(((((-64) + x0) // 2) % 32))
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60.to(tl.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = 0.5
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 * tmp62
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = libdevice.floor(tmp63)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = 2.0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 * tmp65
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = 0.015625
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 * tmp67
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = 10000.0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = libdevice.pow(tmp69, tmp68)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp59 / tmp70
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl_math.sin(tmp71)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.full(tmp72.shape, 0.0, tmp72.dtype)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.where(tmp58, tmp72, tmp73)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp53 >= tmp56
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.full([1], 2, tl.int64)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp53 < tmp76
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp75 & tmp50
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.load(in_ptr1 + (x1), tmp78, eviction_policy='evict_last', other=0.0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = 1 + 2*(((((-64) + x0) // 2) % 32))
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp80.to(tl.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = 0.5
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp81 * tmp82
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = libdevice.floor(tmp83)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = 2.0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 * tmp85
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = 0.015625
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp86 * tmp87
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = 10000.0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = libdevice.pow(tmp89, tmp88)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp79 / tmp90
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl_math.cos(tmp91)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.full(tmp92.shape, 0.0, tmp92.dtype)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tl.where(tmp78, tmp92, tmp93)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.where(tmp57, tmp74, tmp94)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.full(tmp95.shape, 0.0, tmp95.dtype)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp50, tmp95, tmp96)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.where(tmp4, tmp49, tmp97)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp98, None)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_embed], Original ATen: [aten.cumsum]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cumsum_0.run(arg0_1, buf0, 16, 4, grid=grid(16), stream=stream0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_embed], Original ATen: [aten.cumsum]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cumsum_1.run(arg0_1, buf1, 16, 4, grid=grid(16), stream=stream0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 128), (2048, 512, 128, 1), torch.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(buf0, buf1, buf2, 8192, grid=grid(8192), stream=stream0)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf2, (4, 128, 4, 4), (2048, 1, 512, 128), 0), )
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:08:37.068000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:37.074000 255060 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/wy/cwyjinv4k7usikk5xbeo2rz2cmono32tzuxj5r2icx6lrxl3pf7x.py
