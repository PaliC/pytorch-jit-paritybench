V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['44_inference']
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l3/cl3fvuofurtxyqa75w7j37htx2nlazsrw5byrfjutlrmshpwrfl6.py
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pos, dim, floordiv, mul, truediv, mul_1, div, pos_1, sin, setitem], Original ATen: [aten.repeat, aten.floor_divide, aten.mul, aten.div, aten.exp, aten.sin, aten.copy]
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dim => repeat_1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   div => exp
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   floordiv => div
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_2
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos => repeat
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos_1 => mul_4
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => copy
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sin => sin
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div_1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %repeat : [num_users=1] = call_function[target=torch.ops.aten.repeat.default](args = (%unsqueeze, [1, 4]), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %repeat_1 : [num_users=1] = call_function[target=torch.ops.aten.repeat.default](args = (%unsqueeze_1, [4, 1]), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor_mode](args = (%repeat_1, 2), kwargs = {rounding_mode: floor})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, 2), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_2, 4), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_1, -9.210340371976184), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_3,), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%repeat, %exp), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sin : [num_users=1] = call_function[target=torch.ops.aten.sin.default](args = (%slice_4,), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_8, %sin), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default : [num_users=3] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%mul_4, %copy, 1, 0, 9223372036854775807, 2), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0 = async_compile.triton('triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0', '''
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (x2 % 2)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 2*(x0 // 2)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.5
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.floor(tmp6)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 2.0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.25
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = -9.210340371976184
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = x1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp14
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.sin(tmp17)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp2, tmp18, tmp19)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = x0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = 0.5
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp23
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = libdevice.floor(tmp24)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 2.0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.25
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = -9.210340371976184
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = x1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33.to(tl.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp32
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.where(tmp2, tmp20, tmp35)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp36, xmask)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cos, setitem_1], Original ATen: [aten.cos, aten.copy]
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cos => cos
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => copy_1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cos : [num_users=1] = call_function[target=torch.ops.aten.cos.default](args = (%slice_15,), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_1 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_19, %cos), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default, %copy_1, 1, 1, 9223372036854775807, 2), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_cos_1 = async_compile.triton('triton_poi_fused_copy_cos_1', '''
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_cos_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_cos_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (((-1) + x0) % 2)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 0, tl.int64)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 == tmp4
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (1 + 2*(triton_helpers.div_floor_integer((-1) + x0,  2)) + 4*x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl_math.cos(tmp7)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full(tmp8.shape, 0.0, tmp8.dtype)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp6, tmp8, tmp9)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = (x2 % 2)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 == tmp4
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 2*(x0 // 2)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.5
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.floor(tmp16)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 2.0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.25
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = -9.210340371976184
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl_math.exp(tmp23)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = x1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25.to(tl.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp24
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.sin(tmp27)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp12, tmp28, tmp29)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp0.to(tl.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 0.5
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 * tmp32
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = libdevice.floor(tmp33)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 2.0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 * tmp35
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 0.25
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = -9.210340371976184
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl_math.exp(tmp40)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = x1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42.to(tl.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp41
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp12, tmp30, tmp44)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp6, tmp10, tmp45)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp46, xmask)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ng/cngcpnzfium2e67i5lx4i4rwwff3w6tgkenn6tf5wn37ny3zamag.py
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add], Original ATen: [aten.add]
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_2
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg0_1, %unsqueeze_3), kwargs = {})
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_2 = async_compile.triton('triton_poi_fused_add_2', '''
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pos, dim, floordiv, mul, truediv, mul_1, div, pos_1, sin, setitem], Original ATen: [aten.repeat, aten.floor_divide, aten.mul, aten.div, aten.exp, aten.sin, aten.copy]
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0.run(buf0, 16, grid=grid(16), stream=stream0)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cos, setitem_1], Original ATen: [aten.cos, aten.copy]
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_cos_1.run(buf0, buf1, 16, grid=grid(16), stream=stream0)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add], Original ATen: [aten.add]
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_2.run(arg0_1, buf1, buf2, 256, grid=grid(256), stream=stream0)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:50:34.997000 2114025 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:50:35.002000 2114025 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/su/csuhb54vdyd5faev2y7f6czqqerrkjgqukkmfbi2xoetmbvxnzco.py
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['44_inference']
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/l3/cl3fvuofurtxyqa75w7j37htx2nlazsrw5byrfjutlrmshpwrfl6.py
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pos, dim, floordiv, mul, truediv, mul_1, div, pos_1, sin, setitem], Original ATen: [aten.repeat, aten.floor_divide, aten.mul, aten.div, aten.exp, aten.sin, aten.copy]
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dim => repeat_1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   div => exp
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   floordiv => div
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_2
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos => repeat
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos_1 => mul_4
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => copy
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sin => sin
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div_1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %repeat : [num_users=1] = call_function[target=torch.ops.aten.repeat.default](args = (%unsqueeze, [1, 4]), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %repeat_1 : [num_users=1] = call_function[target=torch.ops.aten.repeat.default](args = (%unsqueeze_1, [4, 1]), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor_mode](args = (%repeat_1, 2), kwargs = {rounding_mode: floor})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, 2), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_2, 4), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_1, -9.210340371976184), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_3,), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%repeat, %exp), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sin : [num_users=1] = call_function[target=torch.ops.aten.sin.default](args = (%slice_4,), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_8, %sin), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default : [num_users=3] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%mul_4, %copy, 1, 0, 9223372036854775807, 2), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0 = async_compile.triton('triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0', '''
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (x2 % 2)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 2*(x0 // 2)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.5
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.floor(tmp6)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 2.0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.25
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = -9.210340371976184
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = x1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp14
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.sin(tmp17)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp2, tmp18, tmp19)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = x0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = 0.5
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp23
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = libdevice.floor(tmp24)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 2.0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.25
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = -9.210340371976184
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = x1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33.to(tl.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp32
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.where(tmp2, tmp20, tmp35)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp36, xmask)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cos, setitem_1], Original ATen: [aten.cos, aten.copy]
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cos => cos
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => copy_1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cos : [num_users=1] = call_function[target=torch.ops.aten.cos.default](args = (%slice_15,), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_1 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_19, %cos), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default, %copy_1, 1, 1, 9223372036854775807, 2), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_cos_1 = async_compile.triton('triton_poi_fused_copy_cos_1', '''
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_cos_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_cos_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (((-1) + x0) % 2)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 0, tl.int64)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 == tmp4
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (1 + 2*(triton_helpers.div_floor_integer((-1) + x0,  2)) + 4*x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl_math.cos(tmp7)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full(tmp8.shape, 0.0, tmp8.dtype)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp6, tmp8, tmp9)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = (x2 % 2)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 == tmp4
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 2*(x0 // 2)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.5
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.floor(tmp16)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 2.0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.25
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = -9.210340371976184
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl_math.exp(tmp23)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = x1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25.to(tl.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp24
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.sin(tmp27)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp12, tmp28, tmp29)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp0.to(tl.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 0.5
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 * tmp32
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = libdevice.floor(tmp33)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 2.0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 * tmp35
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 0.25
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = -9.210340371976184
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl_math.exp(tmp40)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = x1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42.to(tl.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp41
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp12, tmp30, tmp44)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp6, tmp10, tmp45)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp46, xmask)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ng/cngcpnzfium2e67i5lx4i4rwwff3w6tgkenn6tf5wn37ny3zamag.py
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add], Original ATen: [aten.add]
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_2
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg0_1, %unsqueeze_3), kwargs = {})
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_2 = async_compile.triton('triton_poi_fused_add_2', '''
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pos, dim, floordiv, mul, truediv, mul_1, div, pos_1, sin, setitem], Original ATen: [aten.repeat, aten.floor_divide, aten.mul, aten.div, aten.exp, aten.sin, aten.copy]
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_div_exp_floor_divide_mul_repeat_sin_0.run(buf0, 16, grid=grid(16), stream=stream0)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cos, setitem_1], Original ATen: [aten.cos, aten.copy]
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_cos_1.run(buf0, buf1, 16, grid=grid(16), stream=stream0)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add], Original ATen: [aten.add]
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_2.run(arg0_1, buf1, buf2, 256, grid=grid(256), stream=stream0)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:39:54.284000 3650527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:39:54.289000 3650527 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/hn/chnvpmo2tzrdkj4gn75nm3qlhkdttm7ecd7nl6bywh2xzcahenwg.py
