V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_inference']
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ja/cjapgrme32lhm3dztf5nrsy3kqs3d5l4qhu25z72mmqe4pya7nel.py
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat, add], Original ATen: [aten.cat, aten.add]
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_2
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat_3
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_3 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view_1, %view], 4), kwargs = {})
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%cat_3, %view_2), kwargs = {})
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_cat_0 = async_compile.triton('triton_poi_fused_add_cat_0', '''
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_cat_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 512) % 4)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 128) % 4)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x9 = xindex
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = ((xindex // 2048) % 4)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 64, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = ((x0) % 2)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 0, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp4
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 2*((((x0) // 2) % 32))
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.5
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.floor(tmp14)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 2.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.015625
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 10000.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = libdevice.pow(tmp20, tmp19)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 1 + x2
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 / tmp21
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.sin(tmp24)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp10, tmp25, tmp26)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp5 >= tmp8
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full([1], 2, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp5 < tmp29
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp28 & tmp4
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1 + 2*((((x0) // 2) % 32))
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 0.5
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 * tmp34
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = libdevice.floor(tmp35)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 2.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 0.015625
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = 10000.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = libdevice.pow(tmp41, tmp40)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = 1 + x2
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 / tmp42
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl_math.cos(tmp45)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full(tmp46.shape, 0.0, tmp46.dtype)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp31, tmp46, tmp47)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp9, tmp27, tmp48)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full(tmp49.shape, 0.0, tmp49.dtype)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.where(tmp4, tmp49, tmp50)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp0 >= tmp3
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.full([1], 128, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp0 < tmp53
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = (((-64) + x0) % 2)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.full([1], 0, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 >= tmp56
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.full([1], 1, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp55 < tmp58
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp59 & tmp52
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = 2*(((((-64) + x0) // 2) % 32))
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = 0.5
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp62 * tmp63
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = libdevice.floor(tmp64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = 2.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp65 * tmp66
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = 0.015625
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp67 * tmp68
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = 10000.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = libdevice.pow(tmp70, tmp69)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = 1 + x1
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp72.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp73 / tmp71
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl_math.sin(tmp74)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.full(tmp75.shape, 0.0, tmp75.dtype)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp60, tmp75, tmp76)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp55 >= tmp58
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.full([1], 2, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp55 < tmp79
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp78 & tmp52
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = 1 + 2*(((((-64) + x0) // 2) % 32))
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp82.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = 0.5
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp83 * tmp84
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = libdevice.floor(tmp85)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = 2.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp86 * tmp87
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = 0.015625
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = 10000.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = libdevice.pow(tmp91, tmp90)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = 1 + x1
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp93.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp94 / tmp92
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl_math.cos(tmp95)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.full(tmp96.shape, 0.0, tmp96.dtype)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.where(tmp81, tmp96, tmp97)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp59, tmp77, tmp98)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.full(tmp99.shape, 0.0, tmp99.dtype)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tl.where(tmp52, tmp99, tmp100)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.where(tmp4, tmp51, tmp101)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = (x9 % 2)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp103 >= tmp1
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tl.full([1], 1, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp103 < tmp105
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = 2*(x0 // 2)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp107.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = 0.5
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp108 * tmp109
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = libdevice.floor(tmp110)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = 2.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp111 * tmp112
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = 0.0078125
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp113 * tmp114
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = 10000.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = libdevice.pow(tmp116, tmp115)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = 1 + x3
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp118.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tmp119 / tmp117
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl_math.sin(tmp120)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tl.full(tmp121.shape, 0.0, tmp121.dtype)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tl.where(tmp106, tmp121, tmp122)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp103 >= tmp105
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.full([1], 2, tl.int64)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = tmp103 < tmp125
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = 1 + 2*(x0 // 2)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tmp127.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp129 = 0.5
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp130 = tmp128 * tmp129
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp131 = libdevice.floor(tmp130)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp132 = 2.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp133 = tmp131 * tmp132
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp134 = 0.0078125
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp135 = tmp133 * tmp134
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp136 = 10000.0
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp137 = libdevice.pow(tmp136, tmp135)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp138 = 1 + x3
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp139 = tmp138.to(tl.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp140 = tmp139 / tmp137
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp141 = tl_math.cos(tmp140)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp142 = tl.full(tmp141.shape, 0.0, tmp141.dtype)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp143 = tl.where(tmp124, tmp141, tmp142)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp144 = tl.where(tmp106, tmp123, tmp143)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp145 = tmp102 + tmp144
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x9), tmp145, None)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4, 128), (8192, 2048, 512, 128, 1), torch.float32)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat, add], Original ATen: [aten.cat, aten.add]
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_cat_0.run(buf0, 32768, grid=grid(32768), stream=stream0)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf0, (4, 4, 128, 4, 4), (8192, 2048, 1, 512, 128), 0), )
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([])
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:38:49.233000 1856366 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:38:49.236000 1856366 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4i/c4itfthbpxekhqrpgxip43muzxqk2xjy6jcjon6gndewza74pbqp.py
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_inference']
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ja/cjapgrme32lhm3dztf5nrsy3kqs3d5l4qhu25z72mmqe4pya7nel.py
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat, add], Original ATen: [aten.cat, aten.add]
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_2
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat_3
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_3 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view_1, %view], 4), kwargs = {})
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%cat_3, %view_2), kwargs = {})
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_cat_0 = async_compile.triton('triton_poi_fused_add_cat_0', '''
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_cat_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 512) % 4)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 128) % 4)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x9 = xindex
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = ((xindex // 2048) % 4)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 64, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = ((x0) % 2)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 0, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp4
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 2*((((x0) // 2) % 32))
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.5
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.floor(tmp14)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 2.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.015625
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 10000.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = libdevice.pow(tmp20, tmp19)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 1 + x2
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 / tmp21
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.sin(tmp24)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp10, tmp25, tmp26)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp5 >= tmp8
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full([1], 2, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp5 < tmp29
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp28 & tmp4
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1 + 2*((((x0) // 2) % 32))
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 0.5
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 * tmp34
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = libdevice.floor(tmp35)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 2.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 0.015625
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = 10000.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = libdevice.pow(tmp41, tmp40)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = 1 + x2
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 / tmp42
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl_math.cos(tmp45)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full(tmp46.shape, 0.0, tmp46.dtype)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp31, tmp46, tmp47)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp9, tmp27, tmp48)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full(tmp49.shape, 0.0, tmp49.dtype)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.where(tmp4, tmp49, tmp50)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp0 >= tmp3
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.full([1], 128, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp0 < tmp53
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = (((-64) + x0) % 2)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.full([1], 0, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 >= tmp56
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.full([1], 1, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp55 < tmp58
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp59 & tmp52
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = 2*(((((-64) + x0) // 2) % 32))
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = 0.5
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp62 * tmp63
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = libdevice.floor(tmp64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = 2.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp65 * tmp66
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = 0.015625
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp67 * tmp68
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = 10000.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = libdevice.pow(tmp70, tmp69)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = 1 + x1
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp72.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp73 / tmp71
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl_math.sin(tmp74)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.full(tmp75.shape, 0.0, tmp75.dtype)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp60, tmp75, tmp76)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp55 >= tmp58
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.full([1], 2, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp55 < tmp79
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp78 & tmp52
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = 1 + 2*(((((-64) + x0) // 2) % 32))
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp82.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = 0.5
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp83 * tmp84
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = libdevice.floor(tmp85)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = 2.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp86 * tmp87
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = 0.015625
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = 10000.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = libdevice.pow(tmp91, tmp90)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = 1 + x1
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp93.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp94 / tmp92
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl_math.cos(tmp95)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.full(tmp96.shape, 0.0, tmp96.dtype)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.where(tmp81, tmp96, tmp97)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp59, tmp77, tmp98)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.full(tmp99.shape, 0.0, tmp99.dtype)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tl.where(tmp52, tmp99, tmp100)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.where(tmp4, tmp51, tmp101)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = (x9 % 2)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp103 >= tmp1
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tl.full([1], 1, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp103 < tmp105
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = 2*(x0 // 2)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp107.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = 0.5
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp108 * tmp109
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = libdevice.floor(tmp110)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = 2.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp111 * tmp112
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = 0.0078125
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp113 * tmp114
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = 10000.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = libdevice.pow(tmp116, tmp115)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = 1 + x3
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp118.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tmp119 / tmp117
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl_math.sin(tmp120)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tl.full(tmp121.shape, 0.0, tmp121.dtype)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tl.where(tmp106, tmp121, tmp122)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp103 >= tmp105
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.full([1], 2, tl.int64)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = tmp103 < tmp125
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = 1 + 2*(x0 // 2)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tmp127.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp129 = 0.5
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp130 = tmp128 * tmp129
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp131 = libdevice.floor(tmp130)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp132 = 2.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp133 = tmp131 * tmp132
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp134 = 0.0078125
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp135 = tmp133 * tmp134
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp136 = 10000.0
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp137 = libdevice.pow(tmp136, tmp135)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp138 = 1 + x3
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp139 = tmp138.to(tl.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp140 = tmp139 / tmp137
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp141 = tl_math.cos(tmp140)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp142 = tl.full(tmp141.shape, 0.0, tmp141.dtype)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp143 = tl.where(tmp124, tmp141, tmp142)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp144 = tl.where(tmp106, tmp123, tmp143)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp145 = tmp102 + tmp144
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x9), tmp145, None)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4, 128), (8192, 2048, 512, 128, 1), torch.float32)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat, add], Original ATen: [aten.cat, aten.add]
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_cat_0.run(buf0, 32768, grid=grid(32768), stream=stream0)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf0, (4, 4, 128, 4, 4), (8192, 2048, 1, 512, 128), 0), )
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([])
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:28:51.440000 4167137 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:28:51.443000 4167137 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/5x/c5xib367fespxhq57edozp2nrpmoo3eboj2emlkeqamxkykjkal5.py
