V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_forward']
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dq/cdq3h7u7hbia7enqve2p6q7tnmwfo7ieewqjxqkuspsdo3kpimq7.py
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5w/c5wgey76v2kexk4tixokwysiz6ghyeysiwk2jozcsmdv24mandzc.py
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), None)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, None)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ff/cffxxk2od4sxw3rlbuq25tzacurt6kuuv5t4mj7sgcmiwmxm4y6s.py
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten._native_batch_norm_legit]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add, rsqrt, var_mean
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_2 = async_compile.triton('triton_per_fused__native_batch_norm_legit_2', '''
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 16},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_2(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (256*r1 + 4096*(x0 // 256) + ((x0 % 256))), xmask, other=0.0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 16, tl.int32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp10
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 16.0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 / tmp17
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1e-05
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp21, xmask)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp16, xmask)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/54/c54xuswrwyyz5svsswkblmfro4vpgg36i34ghv4rbs2zq54zylof.py
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.leaky_relu]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt, mul_1, where
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%view_1, 0), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, 0.2), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %view_1, %mul_1), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_3 = async_compile.triton('triton_poi_fused_leaky_relu_3', '''
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 256}, tile_hint=TileHint.DEFAULT,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_3(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 256*y3), xmask & ymask, eviction_policy='evict_last')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2 + 256*y1), xmask & ymask, eviction_policy='evict_last')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2 + 256*y1), xmask & ymask, eviction_policy='evict_last')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 16.0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp2 * tmp8
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 > tmp10
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.2
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 * tmp12
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp11, tmp9, tmp13)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 16*x2 + 4096*y1), tmp14, xmask & ymask)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/32/c32pwmqdkgve7dexlsxautltqtahbxp6ge4dukiwf5mciiuxvzv7.py
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_1, add_2, mul_2, mul_3, mul_4, reciprocal, sqrt, sub_1
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_1, mul_5, where_1
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_7, 1e-05), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add_1,), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %reciprocal : [num_users=1] = call_function[target=torch.ops.aten.reciprocal.default](args = (%sqrt,), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%reciprocal, 1), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%addmm, %primals_6), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %mul_2), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, %primals_8), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %primals_9), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_2, 0), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_2, 0.2), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %add_2, %mul_5), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4', '''
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.2
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, xmask)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jc/cjcphwgbs7c7t4qoh4qa4txcfemmmmhxkbo5wj2egaytuekvzrcg.py
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.leaky_relu_backward]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%view_6, 0), kwargs = {})
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_backward_5 = async_compile.triton('triton_poi_fused_leaky_relu_backward_5', '''
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_backward_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask, eviction_policy='evict_last')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 4096*y1), tmp2, xmask)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (256, 4, 1, 1), (4, 1, 1, 1))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, ), (1, ))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, 4096), (4096, 1))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, ), (1, ))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, ), (1, ))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, ), (1, ))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, ), (1, ))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, ), (1, ))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 256), (256, 1))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_3, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf2, primals_2, 16384, grid=grid(16384), stream=stream0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 1024, 1, 1), (1024, 1, 1024, 1024), torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 1024, 1, 1), (1024, 1, 1024, 1024), torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1, 1024, 1, 1), (1024, 1, 1024, 1024), torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten._native_batch_norm_legit]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_2.run(buf2, buf3, buf4, buf6, 1024, 16, grid=grid(1024), stream=stream0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.leaky_relu]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_3.run(buf2, buf3, buf4, buf7, 64, 256, grid=grid(64, 256), stream=stream0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf4, (4, 256), (256, 1), 0); del buf4  # reuse
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.addmm]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_5, reinterpret_tensor(buf7, (4, 4096), (4096, 1), 0), reinterpret_tensor(primals_4, (4096, 256), (1, 4096), 0), alpha=1, beta=1, out=buf8)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4.run(buf10, buf8, primals_6, primals_7, primals_8, primals_9, 1024, grid=grid(1024), stream=stream0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.addmm]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_11, buf10, reinterpret_tensor(primals_10, (256, 4), (1, 256), 0), alpha=1, beta=1, out=buf11)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 256, 4, 4), (4096, 1, 1024, 256), torch.bool)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.leaky_relu_backward]
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_backward_5.run(buf7, buf12, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf11, primals_1, buf0, primals_6, primals_7, primals_8, buf2, reinterpret_tensor(buf6, (1024, ), (1, ), 0), reinterpret_tensor(buf7, (4, 4096), (4096, 1), 0), buf8, buf10, primals_10, primals_4, buf12, reinterpret_tensor(buf3, (1, 1024, 1, 1), (1024, 1, 1, 1), 0), )
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((256, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, 4096), (4096, 1), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:48:18.141000 689489 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:48:18.148000 689489 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/64/c64qdk7qpc4kikkjvfdedqqssz436p6tihtcpme6hpb2ix66a5kj.py
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_forward']
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dq/cdq3h7u7hbia7enqve2p6q7tnmwfo7ieewqjxqkuspsdo3kpimq7.py
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5w/c5wgey76v2kexk4tixokwysiz6ghyeysiwk2jozcsmdv24mandzc.py
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), None)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, None)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ff/cffxxk2od4sxw3rlbuq25tzacurt6kuuv5t4mj7sgcmiwmxm4y6s.py
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten._native_batch_norm_legit]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add, rsqrt, var_mean
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_2 = async_compile.triton('triton_per_fused__native_batch_norm_legit_2', '''
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 16},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_2(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (256*r1 + 4096*(x0 // 256) + ((x0 % 256))), xmask, other=0.0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 16, tl.int32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp10
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 16.0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 / tmp17
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1e-05
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp21, xmask)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp16, xmask)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/54/c54xuswrwyyz5svsswkblmfro4vpgg36i34ghv4rbs2zq54zylof.py
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.leaky_relu]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt, mul_1, where
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%view_1, 0), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, 0.2), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %view_1, %mul_1), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_3 = async_compile.triton('triton_poi_fused_leaky_relu_3', '''
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 256}, tile_hint=TileHint.DEFAULT,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_3(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 256*y3), xmask & ymask, eviction_policy='evict_last')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2 + 256*y1), xmask & ymask, eviction_policy='evict_last')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2 + 256*y1), xmask & ymask, eviction_policy='evict_last')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 16.0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp2 * tmp8
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 > tmp10
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.2
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 * tmp12
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp11, tmp9, tmp13)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 16*x2 + 4096*y1), tmp14, xmask & ymask)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/32/c32pwmqdkgve7dexlsxautltqtahbxp6ge4dukiwf5mciiuxvzv7.py
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_1, add_2, mul_2, mul_3, mul_4, reciprocal, sqrt, sub_1
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_1, mul_5, where_1
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_7, 1e-05), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add_1,), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %reciprocal : [num_users=1] = call_function[target=torch.ops.aten.reciprocal.default](args = (%sqrt,), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%reciprocal, 1), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%addmm, %primals_6), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %mul_2), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, %primals_8), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %primals_9), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_2, 0), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_2, 0.2), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %add_2, %mul_5), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4', '''
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.2
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, xmask)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/jc/cjcphwgbs7c7t4qoh4qa4txcfemmmmhxkbo5wj2egaytuekvzrcg.py
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.leaky_relu_backward]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%view_6, 0), kwargs = {})
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_backward_5 = async_compile.triton('triton_poi_fused_leaky_relu_backward_5', '''
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_backward_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask, eviction_policy='evict_last')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 4096*y1), tmp2, xmask)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (256, 4, 1, 1), (4, 1, 1, 1))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, ), (1, ))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, 4096), (4096, 1))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, ), (1, ))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, ), (1, ))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, ), (1, ))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, ), (1, ))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, ), (1, ))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 256), (256, 1))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_3, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf2, primals_2, 16384, grid=grid(16384), stream=stream0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 1024, 1, 1), (1024, 1, 1024, 1024), torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 1024, 1, 1), (1024, 1, 1024, 1024), torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1, 1024, 1, 1), (1024, 1, 1024, 1024), torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten._native_batch_norm_legit]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_2.run(buf2, buf3, buf4, buf6, 1024, 16, grid=grid(1024), stream=stream0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.leaky_relu]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_3.run(buf2, buf3, buf4, buf7, 64, 256, grid=grid(64, 256), stream=stream0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf4, (4, 256), (256, 1), 0); del buf4  # reuse
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.addmm]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_5, reinterpret_tensor(buf7, (4, 4096), (4096, 1), 0), reinterpret_tensor(primals_4, (4096, 256), (1, 4096), 0), alpha=1, beta=1, out=buf8)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4.run(buf10, buf8, primals_6, primals_7, primals_8, primals_9, 1024, grid=grid(1024), stream=stream0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.addmm]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_11, buf10, reinterpret_tensor(primals_10, (256, 4), (1, 256), 0), alpha=1, beta=1, out=buf11)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 256, 4, 4), (4096, 1, 1024, 256), torch.bool)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.leaky_relu_backward]
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_backward_5.run(buf7, buf12, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf11, primals_1, buf0, primals_6, primals_7, primals_8, buf2, reinterpret_tensor(buf6, (1024, ), (1, ), 0), reinterpret_tensor(buf7, (4, 4096), (4096, 1), 0), buf8, buf10, primals_10, primals_4, buf12, reinterpret_tensor(buf3, (1, 1024, 1, 1), (1024, 1, 1, 1), 0), )
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((256, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, 4096), (4096, 1), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:37:17.375000 1953198 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:37:17.383000 1953198 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ou/cou5tiae54pw7sbcjhctkgghv4fjdgljfod7bflies4iq5ztiii2.py
