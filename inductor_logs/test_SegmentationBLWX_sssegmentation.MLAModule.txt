V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['57_forward']
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/v3/cv3ojxj3bw5pa35a7wmioei64xoatl5zileue244ub64nfm6fwsz.py
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 65536, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 65536
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pn/cpnzg3m6eaxdclupckzcamgrayghh2gnufg6lkfztdfbtsoqr2rx.py
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => unsqueeze
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%select, 0), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_1 = async_compile.triton('triton_poi_fused_unsqueeze_1', '''
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 16*y0), xmask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 1024*x1), tmp0, xmask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/42/c42ljtgumjymuxxky6dg7n74hguml5sisovmbzlj23iqwqcc6igj.py
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => unsqueeze_1
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_1 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%select_1, 0), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_2 = async_compile.triton('triton_poi_fused_unsqueeze_2', '''
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16384 + x1 + 16*y0), xmask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 1024*x1), tmp0, xmask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eb/cebqihyubruzuehnfngkwmxsyoxm5vqaywjoyqocgxzrsoa4vc6p.py
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => unsqueeze_2
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_2 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%select_2, 0), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_3 = async_compile.triton('triton_poi_fused_unsqueeze_3', '''
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (32768 + x1 + 16*y0), xmask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 1024*x1), tmp0, xmask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xc/cxcg3j5de633kd7ecr3oyi5jei5pnpqghzufyx2lizxv6yr4qoqm.py
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => unsqueeze_3
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_3 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%select_3, 0), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_4 = async_compile.triton('triton_poi_fused_unsqueeze_4', '''
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (49152 + x1 + 16*y0), xmask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 1024*x1), tmp0, xmask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/46/c46lohvunymdxqfk57ycmydw243fgfzyorvbxmbieje5o7tmqgdu.py
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mid, mid_1, mid_2, input_5], Original ATen: [aten.add, aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => unsqueeze_4
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mid => add
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mid_1 => add_1
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mid_2 => add_2
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%squeeze_3, %squeeze_2), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add, %squeeze_1), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %squeeze), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_4 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%squeeze_3, 0), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_unsqueeze_5 = async_compile.triton('triton_poi_fused_add_unsqueeze_5', '''
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 256}, tile_hint=TileHint.DEFAULT,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_unsqueeze_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_unsqueeze_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, out_ptr2, out_ptr3, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 256*y0), xmask & ymask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 256*y0), xmask & ymask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1 + 256*y0), xmask & ymask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x1 + 256*y0), xmask & ymask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 256*y0), tmp0, xmask & ymask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 16*x1), tmp2, xmask & ymask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (y0 + 16*x1), tmp4, xmask & ymask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (y0 + 16*x1), tmp6, xmask & ymask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5r/c5rifcz6nwgld65uj4afo4dkgp7dbpfdgnccygcluknrsupzne6n.py
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.squeeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => squeeze_4
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %squeeze_4 : [num_users=1] = call_function[target=torch.ops.aten.squeeze.dim](args = (%convolution_4, 0), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_squeeze_6 = async_compile.triton('triton_poi_fused_squeeze_6', '''
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_squeeze_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_squeeze_6(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x1), xmask & ymask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 16*y0), tmp0, xmask & ymask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/br/cbr6ockbdip4h26sq26nsjjrk7fb6bw7t3rtrj3b7q7okihd6ter.py
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mid, input_6], Original ATen: [aten.add, aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => unsqueeze_5
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mid => add
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%squeeze_3, %squeeze_2), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_5 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%add, 0), kwargs = {})
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_unsqueeze_7 = async_compile.triton('triton_poi_fused_add_unsqueeze_7', '''
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_unsqueeze_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_unsqueeze_7(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 16*y0), xmask & ymask, eviction_policy='evict_last')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x1), tmp0, xmask & ymask)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 1024, 4, 4), (16384, 16, 4, 1))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 1024, 1, 1), (1024, 1, 1, 1))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, 1024, 1, 1), (1024, 1, 1, 1))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, 1024, 1, 1), (1024, 1, 1, 1))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, 1024, 1, 1), (1024, 1, 1, 1))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_6, buf0, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_7, buf1, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_8, buf2, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_9, buf3, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_1.run(primals_1, buf4, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_2.run(primals_1, buf6, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.convolution]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf6, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((1, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_3.run(primals_1, buf8, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((1, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_4.run(primals_1, buf10, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_5, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((1, 256, 4, 4), (4096, 1, 1024, 256), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((256, 4, 4), (16, 4, 1), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((256, 4, 4), (16, 4, 1), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((256, 4, 4), (16, 4, 1), torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mid, mid_1, mid_2, input_5], Original ATen: [aten.add, aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_unsqueeze_5.run(buf11, buf9, buf7, buf5, buf12, buf15, buf19, buf23, 16, 256, grid=grid(16, 256), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, buf0, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf9, (256, 4, 4), (16, 4, 1), 0); del buf9  # reuse
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.squeeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_squeeze_6.run(buf13, buf14, 256, 16, grid=grid(256, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf13; del buf13  # reuse
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mid, input_6], Original ATen: [aten.add, aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_unsqueeze_7.run(buf15, buf16, 256, 16, grid=grid(256, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.convolution]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, buf1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf15; del buf15  # reuse
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.squeeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_squeeze_6.run(buf17, buf18, 256, 16, grid=grid(256, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf17; del buf17  # reuse
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mid, mid_1, input_7], Original ATen: [aten.add, aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_unsqueeze_7.run(buf19, buf20, 256, 16, grid=grid(256, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf20, buf2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf19; del buf19  # reuse
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.squeeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_squeeze_6.run(buf21, buf22, 256, 16, grid=grid(256, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf21; del buf21  # reuse
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mid, mid_1, mid_2, input_8], Original ATen: [aten.add, aten.unsqueeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_unsqueeze_7.run(buf23, buf24, 256, 16, grid=grid(256, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.convolution]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf24, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = buf23; del buf23  # reuse
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.squeeze]
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_squeeze_6.run(buf25, buf26, 256, 16, grid=grid(256, 16), stream=stream0)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf14, buf18, buf22, buf26, primals_2, primals_3, primals_4, primals_5, buf0, buf1, buf2, buf3, buf4, buf6, buf8, buf10, buf12, buf16, buf20, buf24, )
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 1024, 4, 4), (16384, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:56:25.478000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:56:25.489000 2571858 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/y2/cy2yvbq5d2adlaqwdgwch65zlgngeo3spkbsabzv7plvfxdbdsww.py
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['57_forward']
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/v3/cv3ojxj3bw5pa35a7wmioei64xoatl5zileue244ub64nfm6fwsz.py
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 65536, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 65536
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pn/cpnzg3m6eaxdclupckzcamgrayghh2gnufg6lkfztdfbtsoqr2rx.py
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => unsqueeze
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%select, 0), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_1 = async_compile.triton('triton_poi_fused_unsqueeze_1', '''
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 16*y0), xmask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 1024*x1), tmp0, xmask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/42/c42ljtgumjymuxxky6dg7n74hguml5sisovmbzlj23iqwqcc6igj.py
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => unsqueeze_1
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_1 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%select_1, 0), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_2 = async_compile.triton('triton_poi_fused_unsqueeze_2', '''
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16384 + x1 + 16*y0), xmask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 1024*x1), tmp0, xmask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/eb/cebqihyubruzuehnfngkwmxsyoxm5vqaywjoyqocgxzrsoa4vc6p.py
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => unsqueeze_2
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_2 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%select_2, 0), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_3 = async_compile.triton('triton_poi_fused_unsqueeze_3', '''
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (32768 + x1 + 16*y0), xmask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 1024*x1), tmp0, xmask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xc/cxcg3j5de633kd7ecr3oyi5jei5pnpqghzufyx2lizxv6yr4qoqm.py
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => unsqueeze_3
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_3 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%select_3, 0), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_4 = async_compile.triton('triton_poi_fused_unsqueeze_4', '''
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (49152 + x1 + 16*y0), xmask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 1024*x1), tmp0, xmask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/46/c46lohvunymdxqfk57ycmydw243fgfzyorvbxmbieje5o7tmqgdu.py
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mid, mid_1, mid_2, input_5], Original ATen: [aten.add, aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => unsqueeze_4
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mid => add
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mid_1 => add_1
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mid_2 => add_2
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%squeeze_3, %squeeze_2), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add, %squeeze_1), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %squeeze), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_4 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%squeeze_3, 0), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_unsqueeze_5 = async_compile.triton('triton_poi_fused_add_unsqueeze_5', '''
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 256}, tile_hint=TileHint.DEFAULT,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_unsqueeze_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_unsqueeze_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, out_ptr2, out_ptr3, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 256*y0), xmask & ymask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 256*y0), xmask & ymask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1 + 256*y0), xmask & ymask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x1 + 256*y0), xmask & ymask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 256*y0), tmp0, xmask & ymask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 16*x1), tmp2, xmask & ymask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (y0 + 16*x1), tmp4, xmask & ymask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (y0 + 16*x1), tmp6, xmask & ymask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5r/c5rifcz6nwgld65uj4afo4dkgp7dbpfdgnccygcluknrsupzne6n.py
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.squeeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => squeeze_4
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %squeeze_4 : [num_users=1] = call_function[target=torch.ops.aten.squeeze.dim](args = (%convolution_4, 0), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_squeeze_6 = async_compile.triton('triton_poi_fused_squeeze_6', '''
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_squeeze_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_squeeze_6(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x1), xmask & ymask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 16*y0), tmp0, xmask & ymask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/br/cbr6ockbdip4h26sq26nsjjrk7fb6bw7t3rtrj3b7q7okihd6ter.py
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mid, input_6], Original ATen: [aten.add, aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => unsqueeze_5
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mid => add
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%squeeze_3, %squeeze_2), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_5 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%add, 0), kwargs = {})
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_unsqueeze_7 = async_compile.triton('triton_poi_fused_add_unsqueeze_7', '''
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_unsqueeze_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_unsqueeze_7(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 16*y0), xmask & ymask, eviction_policy='evict_last')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x1), tmp0, xmask & ymask)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 1024, 4, 4), (16384, 16, 4, 1))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 1024, 1, 1), (1024, 1, 1, 1))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, 1024, 1, 1), (1024, 1, 1, 1))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, 1024, 1, 1), (1024, 1, 1, 1))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, 1024, 1, 1), (1024, 1, 1, 1))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_6, buf0, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_7, buf1, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_8, buf2, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_9, buf3, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_1.run(primals_1, buf4, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_2.run(primals_1, buf6, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.convolution]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf6, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((1, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_3.run(primals_1, buf8, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((1, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_4.run(primals_1, buf10, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_5, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((1, 256, 4, 4), (4096, 1, 1024, 256), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((256, 4, 4), (16, 4, 1), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((256, 4, 4), (16, 4, 1), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((256, 4, 4), (16, 4, 1), torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mid, mid_1, mid_2, input_5], Original ATen: [aten.add, aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_unsqueeze_5.run(buf11, buf9, buf7, buf5, buf12, buf15, buf19, buf23, 16, 256, grid=grid(16, 256), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, buf0, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf9, (256, 4, 4), (16, 4, 1), 0); del buf9  # reuse
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.squeeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_squeeze_6.run(buf13, buf14, 256, 16, grid=grid(256, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf13; del buf13  # reuse
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mid, input_6], Original ATen: [aten.add, aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_unsqueeze_7.run(buf15, buf16, 256, 16, grid=grid(256, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.convolution]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, buf1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf15; del buf15  # reuse
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.squeeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_squeeze_6.run(buf17, buf18, 256, 16, grid=grid(256, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf17; del buf17  # reuse
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mid, mid_1, input_7], Original ATen: [aten.add, aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_unsqueeze_7.run(buf19, buf20, 256, 16, grid=grid(256, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf20, buf2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf19; del buf19  # reuse
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.squeeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_squeeze_6.run(buf21, buf22, 256, 16, grid=grid(256, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf21; del buf21  # reuse
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mid, mid_1, mid_2, input_8], Original ATen: [aten.add, aten.unsqueeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_unsqueeze_7.run(buf23, buf24, 256, 16, grid=grid(256, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.convolution]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf24, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (1, 256, 4, 4), (4096, 1, 1024, 256))
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = buf23; del buf23  # reuse
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.squeeze]
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_squeeze_6.run(buf25, buf26, 256, 16, grid=grid(256, 16), stream=stream0)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf14, buf18, buf22, buf26, primals_2, primals_3, primals_4, primals_5, buf0, buf1, buf2, buf3, buf4, buf6, buf8, buf10, buf12, buf16, buf20, buf24, )
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 1024, 4, 4), (16384, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:46:04.310000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:46:04.320000 506877 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/bp/cbpr7m72r23aap572vpyeeebewyrsqrjj4gitc5lmswxz3ggvqx5.py
