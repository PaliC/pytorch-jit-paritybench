V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['30_forward']
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/p2/cp2w44232yt5xr4tyjxebg3ja3teiyogkjys3nyh44jvqpcb4x76.py
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.native_group_norm]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => var_mean
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_convolution_native_group_norm_0 = async_compile.triton('triton_red_fused_convolution_native_group_norm_0', '''
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 8192},
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_native_group_norm_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 3, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_convolution_native_group_norm_0(in_out_ptr0, in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8192
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r5 = rindex
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r3 = rindex // 4096
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r5 + 8192*x4), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr0 + (r3 + 2*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 + tmp1
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         )
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean = tl.where(rmask & xmask, tmp4_mean_next, tmp4_mean)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_m2 = tl.where(rmask & xmask, tmp4_m2_next, tmp4_m2)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_weight = tl.where(rmask & xmask, tmp4_weight_next, tmp4_weight)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr0 + (r5 + 8192*x4), tmp2, rmask & xmask)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_tmp, tmp5_tmp, tmp6_tmp = triton_helpers.welford(
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean, tmp4_m2, tmp4_weight, 1
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     )
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp4_tmp[:, None]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp5_tmp[:, None]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp6_tmp[:, None]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp5, xmask)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x4), tmp6, xmask)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5f/c5fmmpagxzzgmtw2kq7yxmvbtopelslntl7hmnsr7jv54q2fmneg.py
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.native_group_norm]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add, rsqrt, var_mean
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_native_group_norm_1 = async_compile.triton('triton_per_fused_native_group_norm_1', '''
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 2},
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_group_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_native_group_norm_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 2*x0), xmask, other=0.0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + 2*x0), xmask, other=0.0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r1 + 2*x0), xmask, other=0.0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10[:, None]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11[:, None]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12[:, None]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 16384.0
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 / tmp16
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 1e-05
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.rsqrt(tmp19)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp20, xmask)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vp/cvpacaomdil2rfdlxps7v67vxb6lusnzb2yk2r3zy7e4wknozdwo.py
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.native_group_norm, aten.leaky_relu]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt, mul_2, where
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, %unsqueeze_5), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %unsqueeze_2), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_1, 0), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.2), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_1, %mul_2), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_native_group_norm_2 = async_compile.triton('triton_poi_fused_leaky_relu_native_group_norm_2', '''
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_native_group_norm_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_native_group_norm_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4096
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4 // 4), None, eviction_policy='evict_last')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x4 // 4), None, eviction_policy='evict_last')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 16384.0
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp2 * tmp8
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.0
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 > tmp14
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.2
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 * tmp16
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp15, tmp13, tmp17)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp18, None)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ed/cedmt2ehy5q6e4wiosoeldiwzq5ejl3bz5dged2y4xt2xfmowvbm.py
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.native_group_norm, aten.leaky_relu, aten.leaky_relu_backward]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_3, mul_4
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_1, mul_5, where_1
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %unsqueeze_11), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %unsqueeze_8), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_3, 0), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, 0.2), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %add_3, %mul_5), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_1, 0), kwargs = {})
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3 = async_compile.triton('triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3', '''
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4096
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4 // 4), None, eviction_policy='evict_last')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x4 // 4), None, eviction_policy='evict_last')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 16384.0
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp2 * tmp8
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.0
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 > tmp14
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.2
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 * tmp16
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp15, tmp13, tmp17)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 > tmp14
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp18, None)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, None)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, ), (1, ))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, ), (1, ))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 16, 1, 1, 2), (32, 2, 128, 128, 1), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 16, 1, 1, 2), (32, 2, 128, 128, 1), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 1, 1, 2), (32, 2, 128, 128, 1), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.native_group_norm]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_convolution_native_group_norm_0.run(buf1, primals_2, buf2, buf3, buf4, 128, 8192, grid=grid(128), stream=stream0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.native_group_norm]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_native_group_norm_1.run(buf2, buf3, buf4, buf5, buf6, buf9, 64, 2, grid=grid(64), stream=stream0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf8; del buf8  # reuse
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.native_group_norm, aten.leaky_relu]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_native_group_norm_2.run(buf10, buf1, buf5, buf6, primals_4, primals_5, 1048576, grid=grid(1048576), stream=stream0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf4; del buf4  # reuse
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = buf3; del buf3  # reuse
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf2; del buf2  # reuse
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, input_5], Original ATen: [aten.convolution, aten.native_group_norm]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_convolution_native_group_norm_0.run(buf12, primals_7, buf13, buf14, buf15, 128, 8192, grid=grid(128), stream=stream0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf6; del buf6  # reuse
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.native_group_norm]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_native_group_norm_1.run(buf13, buf14, buf15, buf16, buf17, buf20, 64, 2, grid=grid(64), stream=stream0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf19; del buf19  # reuse
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.bool)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.native_group_norm, aten.leaky_relu, aten.leaky_relu_backward]
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3.run(buf21, buf12, buf16, buf17, primals_8, primals_9, buf22, 1048576, grid=grid(1048576), stream=stream0)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf21, primals_1, primals_3, primals_4, primals_6, primals_8, buf1, reinterpret_tensor(buf5, (4, 16), (16, 1), 0), reinterpret_tensor(buf9, (4, 16), (16, 1), 0), buf10, buf12, reinterpret_tensor(buf16, (4, 16), (16, 1), 0), reinterpret_tensor(buf20, (4, 16), (16, 1), 0), buf22, )
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:23:17.594000 1494383 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:23:17.604000 1494383 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zc/czcoziy64adpt3koo2ijisjzxrbx6aa343sceapv2nfgnkm2xsuc.py
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['30_forward']
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/p2/cp2w44232yt5xr4tyjxebg3ja3teiyogkjys3nyh44jvqpcb4x76.py
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.native_group_norm]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => var_mean
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_convolution_native_group_norm_0 = async_compile.triton('triton_red_fused_convolution_native_group_norm_0', '''
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 8192},
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_native_group_norm_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 3, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_convolution_native_group_norm_0(in_out_ptr0, in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8192
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r5 = rindex
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r3 = rindex // 4096
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r5 + 8192*x4), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr0 + (r3 + 2*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         )
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean = tl.where(rmask & xmask, tmp4_mean_next, tmp4_mean)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_m2 = tl.where(rmask & xmask, tmp4_m2_next, tmp4_m2)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_weight = tl.where(rmask & xmask, tmp4_weight_next, tmp4_weight)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr0 + (r5 + 8192*x4), tmp2, rmask & xmask)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_tmp, tmp5_tmp, tmp6_tmp = triton_helpers.welford(
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean, tmp4_m2, tmp4_weight, 1
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     )
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp4_tmp[:, None]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp5_tmp[:, None]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp6_tmp[:, None]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp5, xmask)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x4), tmp6, xmask)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5f/c5fmmpagxzzgmtw2kq7yxmvbtopelslntl7hmnsr7jv54q2fmneg.py
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.native_group_norm]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add, rsqrt, var_mean
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_native_group_norm_1 = async_compile.triton('triton_per_fused_native_group_norm_1', '''
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 2},
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_group_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_native_group_norm_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 2*x0), xmask, other=0.0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + 2*x0), xmask, other=0.0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r1 + 2*x0), xmask, other=0.0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10[:, None]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11[:, None]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12[:, None]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 16384.0
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 / tmp16
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 1e-05
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.rsqrt(tmp19)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp20, xmask)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vp/cvpacaomdil2rfdlxps7v67vxb6lusnzb2yk2r3zy7e4wknozdwo.py
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.native_group_norm, aten.leaky_relu]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt, mul_2, where
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, %unsqueeze_5), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %unsqueeze_2), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_1, 0), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.2), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_1, %mul_2), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_native_group_norm_2 = async_compile.triton('triton_poi_fused_leaky_relu_native_group_norm_2', '''
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_native_group_norm_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_native_group_norm_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4096
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4 // 4), None, eviction_policy='evict_last')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x4 // 4), None, eviction_policy='evict_last')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 16384.0
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp2 * tmp8
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.0
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 > tmp14
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.2
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 * tmp16
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp15, tmp13, tmp17)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp18, None)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ed/cedmt2ehy5q6e4wiosoeldiwzq5ejl3bz5dged2y4xt2xfmowvbm.py
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.native_group_norm, aten.leaky_relu, aten.leaky_relu_backward]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_3, mul_4
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_1, mul_5, where_1
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %unsqueeze_11), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %unsqueeze_8), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_3, 0), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, 0.2), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %add_3, %mul_5), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_1, 0), kwargs = {})
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3 = async_compile.triton('triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3', '''
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4096
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4 // 4), None, eviction_policy='evict_last')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x4 // 4), None, eviction_policy='evict_last')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 16384.0
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp2 * tmp8
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.0
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 > tmp14
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.2
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 * tmp16
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp15, tmp13, tmp17)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 > tmp14
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp18, None)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, None)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, ), (1, ))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, ), (1, ))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 16, 1, 1, 2), (32, 2, 128, 128, 1), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 16, 1, 1, 2), (32, 2, 128, 128, 1), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 1, 1, 2), (32, 2, 128, 128, 1), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.native_group_norm]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_convolution_native_group_norm_0.run(buf1, primals_2, buf2, buf3, buf4, 128, 8192, grid=grid(128), stream=stream0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.native_group_norm]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_native_group_norm_1.run(buf2, buf3, buf4, buf5, buf6, buf9, 64, 2, grid=grid(64), stream=stream0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf8; del buf8  # reuse
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.native_group_norm, aten.leaky_relu]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_native_group_norm_2.run(buf10, buf1, buf5, buf6, primals_4, primals_5, 1048576, grid=grid(1048576), stream=stream0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf4; del buf4  # reuse
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = buf3; del buf3  # reuse
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf2; del buf2  # reuse
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, input_5], Original ATen: [aten.convolution, aten.native_group_norm]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_convolution_native_group_norm_0.run(buf12, primals_7, buf13, buf14, buf15, 128, 8192, grid=grid(128), stream=stream0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf6; del buf6  # reuse
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 64, 64), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.native_group_norm]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_native_group_norm_1.run(buf13, buf14, buf15, buf16, buf17, buf20, 64, 2, grid=grid(64), stream=stream0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf19; del buf19  # reuse
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.bool)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.native_group_norm, aten.leaky_relu, aten.leaky_relu_backward]
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_native_group_norm_3.run(buf21, buf12, buf16, buf17, primals_8, primals_9, buf22, 1048576, grid=grid(1048576), stream=stream0)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf21, primals_1, primals_3, primals_4, primals_6, primals_8, buf1, reinterpret_tensor(buf5, (4, 16), (16, 1), 0), reinterpret_tensor(buf9, (4, 16), (16, 1), 0), buf10, buf12, reinterpret_tensor(buf16, (4, 16), (16, 1), 0), reinterpret_tensor(buf20, (4, 16), (16, 1), 0), buf22, )
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:13:04.220000 2944574 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:13:04.227000 2944574 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ro/croycgiusjrw2r4gcdom2kvdspb6eereaqo3fzryiqzvognti2k7.py
