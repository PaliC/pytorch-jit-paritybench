V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['196_forward']
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6b/c6bs7mvftk6tnwdnpfyb7p5ugslrcxm4f4hbvug7wcx7fyr4vpcc.py
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1], 1), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 2)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 32
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x1 + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (4 + x0 + 16*x1 + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (8 + x0 + 16*x1 + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp7, tmp8)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (12 + x0 + 16*x1 + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full(tmp11.shape, 0.0, tmp11.dtype)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp4, tmp11, tmp12)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 >= tmp3
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 2, tl.int64)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 < tmp15
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (x0 + 16*x1 + 64*x3), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (4 + x0 + 16*x1 + 64*x3), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (8 + x0 + 16*x1 + 64*x3), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (12 + x0 + 16*x1 + 64*x3), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 4.0
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 / tmp24
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp14, tmp25, tmp26)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp4, tmp13, tmp27)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp28, xmask)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2d/c2ddm3qtxvk7ltlatzetkzecjpugxn4alf6mrx6fqm3wzz2v5moh.py
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1, mul_2, sub
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_2, %primals_3, [1, 1], [3, 3], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_3), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_5), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_7), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_9), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_1', '''
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (0))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (0))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK])
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (0))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (0))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 - tmp5
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-05
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp6 * tmp15
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 * tmp18
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 + tmp21
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp22, xmask)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oa/coawvp7cgc3kwq6t6kpsxyzqoihabufdif5cuyauske5cq3m7eiw.py
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_1 => cat_1
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_10, %unsqueeze_11], 1), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = ((yindex // 4) % 2)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = yindex // 8
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex // 4
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = y1
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 1, tl.int64)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (4*x3 + 16*y0 + 64*y2), tmp4 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x3 + 16*y0 + 64*y2), tmp4 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (2 + 4*x3 + 16*y0 + 64*y2), tmp4 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp7, tmp8)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (3 + 4*x3 + 16*y0 + 64*y2), tmp4 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full(tmp11.shape, 0.0, tmp11.dtype)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp4, tmp11, tmp12)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 >= tmp3
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1, 1], 2, tl.int64)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 < tmp15
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (4*x3 + 16*y0 + 64*y2), tmp14 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (1 + 4*x3 + 16*y0 + 64*y2), tmp14 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (2 + 4*x3 + 16*y0 + 64*y2), tmp14 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (3 + 4*x3 + 16*y0 + 64*y2), tmp14 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 4.0
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 / tmp24
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp14, tmp25, tmp26)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp4, tmp13, tmp27)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x3 + 16*y4), tmp28, xmask & ymask)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eu/ceu6phibliko2uwpggzsrqohadbitrq3emvq5eldxiquwhgu6ma4.py
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_2 => cat_2
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_20, %unsqueeze_21], 1), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (16 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (32 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp7, tmp8)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (48 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full(tmp11.shape, 0.0, tmp11.dtype)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp4, tmp11, tmp12)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 >= tmp3
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 2, tl.int64)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 < tmp15
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (x0 + 64*x2), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (16 + x0 + 64*x2), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (32 + x0 + 64*x2), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (48 + x0 + 64*x2), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 4.0
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 / tmp24
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp14, tmp25, tmp26)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp4, tmp13, tmp27)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp28, xmask)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ip/cip4obzbgwylpqvpefgh6xxn3tuii36kawbuiknzmtrpywl34sf2.py
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_out2_1, sigmoid_2, x_out3, add, add_1, mul_3], Original ATen: [aten.clone, aten.sigmoid, aten.mul, aten.add]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_6
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_7
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_12
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid_2 => sigmoid_2
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_out2_1 => clone_2
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_out3 => mul_11
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_3,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_2 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_5,), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_5, %sigmoid_2), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_1, %clone_2), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %mul_11), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, 0.3333333333333333), kwargs = {})
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_mul_sigmoid_4 = async_compile.triton('triton_poi_fused_add_clone_mul_sigmoid_4', '''
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_mul_sigmoid_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_mul_sigmoid_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex // 16
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4 + 16*x3), xmask, eviction_policy='evict_last')
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x5), xmask, eviction_policy='evict_last')
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x0 + 4*x6), xmask, eviction_policy='evict_last')
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sigmoid(tmp3)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.sigmoid(tmp7)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 0.3333333333333333
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), tmp12, xmask)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19 = args
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (1, 2, 7, 7), (98, 49, 7, 1))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1, 2, 7, 7), (98, 49, 7, 1))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (1, 2, 7, 7), (98, 49, 7, 1))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (1, ), (1, ))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(primals_1, buf0, 128, grid=grid(128), stream=stream0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_1.run(buf2, primals_3, primals_4, primals_5, primals_6, primals_7, buf3, 64, grid=grid(64), stream=stream0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf4, 32, 4, grid=grid(32, 4), stream=stream0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_8, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_1.run(buf6, primals_9, primals_10, primals_11, primals_12, primals_13, buf7, 64, grid=grid(64), stream=stream0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(primals_1, buf8, 128, grid=grid(128), stream=stream0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_14, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_1.run(buf10, primals_15, primals_16, primals_17, primals_18, primals_19, buf11, 64, grid=grid(64), stream=stream0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_out2_1, sigmoid_2, x_out3, add, add_1, mul_3], Original ATen: [aten.clone, aten.sigmoid, aten.mul, aten.add]
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_mul_sigmoid_4.run(buf3, buf7, buf11, buf12, 256, grid=grid(256), stream=stream0)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, primals_2, primals_4, primals_5, primals_6, primals_7, primals_8, primals_10, primals_11, primals_12, primals_13, primals_14, primals_16, primals_17, primals_18, primals_19, buf0, buf2, buf4, buf6, buf8, buf10, )
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((1, 2, 7, 7), (98, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1, 2, 7, 7), (98, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((1, 2, 7, 7), (98, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19])
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:45:10.696000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:45:10.710000 435219 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ao/caovopj7sp6457dwvmcbzxzed2pq34hvtlbgneyluwjs4ixyoa4s.py
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['196_forward']
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6b/c6bs7mvftk6tnwdnpfyb7p5ugslrcxm4f4hbvug7wcx7fyr4vpcc.py
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1], 1), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 2)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 32
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x1 + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (4 + x0 + 16*x1 + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (8 + x0 + 16*x1 + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp7, tmp8)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (12 + x0 + 16*x1 + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full(tmp11.shape, 0.0, tmp11.dtype)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp4, tmp11, tmp12)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 >= tmp3
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 2, tl.int64)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 < tmp15
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (x0 + 16*x1 + 64*x3), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (4 + x0 + 16*x1 + 64*x3), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (8 + x0 + 16*x1 + 64*x3), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (12 + x0 + 16*x1 + 64*x3), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 4.0
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 / tmp24
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp14, tmp25, tmp26)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp4, tmp13, tmp27)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp28, xmask)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2d/c2ddm3qtxvk7ltlatzetkzecjpugxn4alf6mrx6fqm3wzz2v5moh.py
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1, mul_2, sub
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_2, %primals_3, [1, 1], [3, 3], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_3), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_5), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_7), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_9), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_1', '''
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (0))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (0))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK])
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (0))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (0))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 - tmp5
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-05
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp6 * tmp15
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 * tmp18
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 + tmp21
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp22, xmask)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/oa/coawvp7cgc3kwq6t6kpsxyzqoihabufdif5cuyauske5cq3m7eiw.py
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_1 => cat_1
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_10, %unsqueeze_11], 1), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = ((yindex // 4) % 2)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = yindex // 8
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex // 4
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = y1
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 1, tl.int64)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (4*x3 + 16*y0 + 64*y2), tmp4 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x3 + 16*y0 + 64*y2), tmp4 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (2 + 4*x3 + 16*y0 + 64*y2), tmp4 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp7, tmp8)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (3 + 4*x3 + 16*y0 + 64*y2), tmp4 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full(tmp11.shape, 0.0, tmp11.dtype)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp4, tmp11, tmp12)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 >= tmp3
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1, 1], 2, tl.int64)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 < tmp15
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (4*x3 + 16*y0 + 64*y2), tmp14 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (1 + 4*x3 + 16*y0 + 64*y2), tmp14 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (2 + 4*x3 + 16*y0 + 64*y2), tmp14 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (3 + 4*x3 + 16*y0 + 64*y2), tmp14 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 4.0
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 / tmp24
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp14, tmp25, tmp26)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp4, tmp13, tmp27)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x3 + 16*y4), tmp28, xmask & ymask)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/eu/ceu6phibliko2uwpggzsrqohadbitrq3emvq5eldxiquwhgu6ma4.py
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_2 => cat_2
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_20, %unsqueeze_21], 1), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (16 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (32 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp7, tmp8)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (48 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full(tmp11.shape, 0.0, tmp11.dtype)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp4, tmp11, tmp12)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 >= tmp3
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 2, tl.int64)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 < tmp15
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (x0 + 64*x2), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (16 + x0 + 64*x2), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (32 + x0 + 64*x2), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (48 + x0 + 64*x2), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 4.0
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 / tmp24
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp14, tmp25, tmp26)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp4, tmp13, tmp27)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp28, xmask)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ip/cip4obzbgwylpqvpefgh6xxn3tuii36kawbuiknzmtrpywl34sf2.py
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_out2_1, sigmoid_2, x_out3, add, add_1, mul_3], Original ATen: [aten.clone, aten.sigmoid, aten.mul, aten.add]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_6
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_7
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_12
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid_2 => sigmoid_2
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_out2_1 => clone_2
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_out3 => mul_11
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_3,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_2 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_5,), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_5, %sigmoid_2), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_1, %clone_2), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %mul_11), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, 0.3333333333333333), kwargs = {})
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_mul_sigmoid_4 = async_compile.triton('triton_poi_fused_add_clone_mul_sigmoid_4', '''
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_mul_sigmoid_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_mul_sigmoid_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex // 16
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4 + 16*x3), xmask, eviction_policy='evict_last')
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x5), xmask, eviction_policy='evict_last')
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x0 + 4*x6), xmask, eviction_policy='evict_last')
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sigmoid(tmp3)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.sigmoid(tmp7)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 0.3333333333333333
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), tmp12, xmask)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19 = args
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (1, 2, 7, 7), (98, 49, 7, 1))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1, 2, 7, 7), (98, 49, 7, 1))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (1, 2, 7, 7), (98, 49, 7, 1))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (1, ), (1, ))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(primals_1, buf0, 128, grid=grid(128), stream=stream0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_1.run(buf2, primals_3, primals_4, primals_5, primals_6, primals_7, buf3, 64, grid=grid(64), stream=stream0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf4, 32, 4, grid=grid(32, 4), stream=stream0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_8, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_1.run(buf6, primals_9, primals_10, primals_11, primals_12, primals_13, buf7, 64, grid=grid(64), stream=stream0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(primals_1, buf8, 128, grid=grid(128), stream=stream0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_14, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_1.run(buf10, primals_15, primals_16, primals_17, primals_18, primals_19, buf11, 64, grid=grid(64), stream=stream0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_out2_1, sigmoid_2, x_out3, add, add_1, mul_3], Original ATen: [aten.clone, aten.sigmoid, aten.mul, aten.add]
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_mul_sigmoid_4.run(buf3, buf7, buf11, buf12, 256, grid=grid(256), stream=stream0)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, primals_2, primals_4, primals_5, primals_6, primals_7, primals_8, primals_10, primals_11, primals_12, primals_13, primals_14, primals_16, primals_17, primals_18, primals_19, buf0, buf2, buf4, buf6, buf8, buf10, )
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((1, 2, 7, 7), (98, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1, 2, 7, 7), (98, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((1, 2, 7, 7), (98, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19])
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:34:04.470000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:34:04.481000 1734606 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/2s/c2s3f5nlbdavaazwed3gywhetu7nw3yasyzalmgphadj6pizq7y6.py
