V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gl/cgllenxjy6zyejnutee7ccicmjyes5bjhk35vvvahwejntlpzi2t.py
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat], Original ATen: [aten.div]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat => div
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg0_1, %expand), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ur/cur5nvyopol34h7se3mfo2mlv6idtgnpplbhsyk6ksj3erir6rlf.py
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, corr_mat_1, mul_1, corr_mat_2, pow_3, mul_2, corr_mat_3, pow_4, mul_3, corr_mat_4, pow_5, mul_4, corr_mat_5, pow_6, corr_mat_7, mul_6, corr_mat_8, pow_8, mul_7, corr_mat_9, pow_9, mul_8, corr_mat_10, pow_10, mul_9, corr_mat_11, loss], Original ATen: [aten.pow, aten.add, aten.mul, aten.mse_loss]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_1 => mul
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_10 => add_8
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_11 => add_9
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_2 => add_1
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_3 => add_2
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_4 => add_3
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_5 => add_4
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_7 => mul_5
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_8 => add_6
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_9 => add_7
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => mean, pow_15, sub
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_6
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_7
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_8 => mul_8
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_9 => mul_9
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_3
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_10 => pow_14
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_5
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_6
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_5 => pow_7
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_6 => pow_10
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_8 => pow_12
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_9 => pow_13
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm, 0), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_3, 0.00033546262790251185), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm, 0.002683701023220095), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm, 2), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_5, 0.01073480409288038), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %mul_2), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm, 3), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_6, 0.02862614424768101), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_3), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm, 4), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_7, 0.05725228849536202), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_3, %mul_4), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_10 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm_1, 0), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_10, 0.00033546262790251185), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm_1, 0.002683701023220095), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %mul_6), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_12 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm_1, 2), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_12, 0.01073480409288038), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %mul_7), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_13 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm_1, 3), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_13, 0.02862614424768101), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_7, %mul_8), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_14 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm_1, 4), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_14, 0.05725228849536202), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_8, %mul_9), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_9), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_15 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%pow_15,), kwargs = {})
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_mse_loss_mul_pow_1 = async_compile.triton('triton_per_fused_add_mse_loss_mul_pow_1', '''
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 16},
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_mse_loss_mul_pow_1', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_mse_loss_mul_pow_1(in_out_ptr0, in_out_ptr1, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r0), None)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (r0), None)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.002683701023220095
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.00033546262790251185
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 * tmp0
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.01073480409288038
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 * tmp6
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 + tmp7
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 * tmp0
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.02862614424768101
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp8 + tmp11
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp5 * tmp5
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.05725228849536202
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 + tmp15
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp1
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp3 + tmp18
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 * tmp17
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp6
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 + tmp21
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 * tmp17
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp10
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp22 + tmp24
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp20 * tmp20
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp14
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 + tmp27
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp16 - tmp28
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp29
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.broadcast_to(tmp30, [XBLOCK, RBLOCK])
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.sum(tmp31, 1)[:, None]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 16.0
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 / tmp34
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp35, None)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat], Original ATen: [aten.div]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg0_1, buf0, 16, grid=grid(16), stream=stream0)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sim_mat], Original ATen: [aten.mm]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, reinterpret_tensor(buf0, (4, 4), (1, 4), 0), out=buf1)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf0; del buf0  # reuse
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_1], Original ATen: [aten.div]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg1_1, buf2, 16, grid=grid(16), stream=stream0)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sim_mat_1], Original ATen: [aten.mm]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf2, reinterpret_tensor(buf2, (4, 4), (1, 4), 0), out=buf3)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf1; del buf1  # reuse
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((), (), torch.float32)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, corr_mat_1, mul_1, corr_mat_2, pow_3, mul_2, corr_mat_3, pow_4, mul_3, corr_mat_4, pow_5, mul_4, corr_mat_5, pow_6, corr_mat_7, mul_6, corr_mat_8, pow_8, mul_7, corr_mat_9, pow_9, mul_8, corr_mat_10, pow_10, mul_9, corr_mat_11, loss], Original ATen: [aten.pow, aten.add, aten.mul, aten.mse_loss]
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_mse_loss_mul_pow_1.run(buf4, buf6, buf3, 1, 16, grid=grid(1), stream=stream0)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, )
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:25:49.373000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:49.377000 3453854 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4g/c4gwkrtuzekzuoomqboa22hexuda47bvew6fzexnv6bjyekknvqw.py
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gl/cgllenxjy6zyejnutee7ccicmjyes5bjhk35vvvahwejntlpzi2t.py
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat], Original ATen: [aten.div]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat => div
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg0_1, %expand), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ur/cur5nvyopol34h7se3mfo2mlv6idtgnpplbhsyk6ksj3erir6rlf.py
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, corr_mat_1, mul_1, corr_mat_2, pow_3, mul_2, corr_mat_3, pow_4, mul_3, corr_mat_4, pow_5, mul_4, corr_mat_5, pow_6, corr_mat_7, mul_6, corr_mat_8, pow_8, mul_7, corr_mat_9, pow_9, mul_8, corr_mat_10, pow_10, mul_9, corr_mat_11, loss], Original ATen: [aten.pow, aten.add, aten.mul, aten.mse_loss]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_1 => mul
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_10 => add_8
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_11 => add_9
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_2 => add_1
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_3 => add_2
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_4 => add_3
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_5 => add_4
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_7 => mul_5
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_8 => add_6
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   corr_mat_9 => add_7
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => mean, pow_15, sub
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_6
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_7
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_8 => mul_8
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_9 => mul_9
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_3
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_10 => pow_14
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_5
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_6
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_5 => pow_7
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_6 => pow_10
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_8 => pow_12
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_9 => pow_13
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm, 0), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_3, 0.00033546262790251185), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm, 0.002683701023220095), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm, 2), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_5, 0.01073480409288038), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %mul_2), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm, 3), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_6, 0.02862614424768101), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_3), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm, 4), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_7, 0.05725228849536202), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_3, %mul_4), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_10 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm_1, 0), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_10, 0.00033546262790251185), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm_1, 0.002683701023220095), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %mul_6), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_12 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm_1, 2), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_12, 0.01073480409288038), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %mul_7), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_13 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm_1, 3), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_13, 0.02862614424768101), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_7, %mul_8), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_14 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mm_1, 4), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_14, 0.05725228849536202), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_8, %mul_9), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_9), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_15 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%pow_15,), kwargs = {})
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_mse_loss_mul_pow_1 = async_compile.triton('triton_per_fused_add_mse_loss_mul_pow_1', '''
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 16},
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_mse_loss_mul_pow_1', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_mse_loss_mul_pow_1(in_out_ptr0, in_out_ptr1, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r0), None)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (r0), None)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.002683701023220095
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.00033546262790251185
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 * tmp0
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.01073480409288038
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 * tmp6
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 + tmp7
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 * tmp0
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.02862614424768101
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp8 + tmp11
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp5 * tmp5
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.05725228849536202
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 + tmp15
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp1
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp3 + tmp18
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 * tmp17
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp6
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 + tmp21
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 * tmp17
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp10
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp22 + tmp24
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp20 * tmp20
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp14
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 + tmp27
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp16 - tmp28
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp29
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.broadcast_to(tmp30, [XBLOCK, RBLOCK])
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.sum(tmp31, 1)[:, None]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 16.0
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 / tmp34
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp35, None)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat], Original ATen: [aten.div]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg0_1, buf0, 16, grid=grid(16), stream=stream0)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sim_mat], Original ATen: [aten.mm]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, reinterpret_tensor(buf0, (4, 4), (1, 4), 0), out=buf1)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf0; del buf0  # reuse
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_1], Original ATen: [aten.div]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg1_1, buf2, 16, grid=grid(16), stream=stream0)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sim_mat_1], Original ATen: [aten.mm]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf2, reinterpret_tensor(buf2, (4, 4), (1, 4), 0), out=buf3)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf1; del buf1  # reuse
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((), (), torch.float32)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, corr_mat_1, mul_1, corr_mat_2, pow_3, mul_2, corr_mat_3, pow_4, mul_3, corr_mat_4, pow_5, mul_4, corr_mat_5, pow_6, corr_mat_7, mul_6, corr_mat_8, pow_8, mul_7, corr_mat_9, pow_9, mul_8, corr_mat_10, pow_10, mul_9, corr_mat_11, loss], Original ATen: [aten.pow, aten.add, aten.mul, aten.mse_loss]
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_mse_loss_mul_pow_1.run(buf4, buf6, buf3, 1, 16, grid=grid(1), stream=stream0)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, )
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:15:46.070000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:46.074000 2108070 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/3w/c3w4vvhez6yqnce4xbsjswjj55fammsxi5cea6ott44mci6gvd7t.py
