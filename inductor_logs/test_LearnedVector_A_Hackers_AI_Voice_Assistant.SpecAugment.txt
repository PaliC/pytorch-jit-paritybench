W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break from `Tensor.item()`, consider setting:
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     torch._dynamo.config.capture_scalar_outputs = True
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] or:
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] to include these operations in the captured graph.
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break: from user code at:
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_LearnedVector_A_Hackers_AI_Voice_Assistant.py", line 156, in forward
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     return self._forward(x)
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_LearnedVector_A_Hackers_AI_Voice_Assistant.py", line 171, in policy3
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     probability = torch.rand(1, 1).item()
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0204 13:22:12.036000 1016295 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] Output code: 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # AOT ID: ['2_inference']
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import torch
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import math
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import random
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import os
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import tempfile
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from math import inf, nan
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch import device, empty_strided
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] aten = torch.ops.aten
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile = AsyncCompile()
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile.wait(globals())
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] del async_compile
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def call(args):
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     # Topologically Sorted Source Nodes: [rand], Original ATen: [aten.rand]
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     buf0 = torch.ops.aten.rand.default([1, 1], device=device(type='cpu'), pin_memory=False)
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     buf1 = buf0
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return (buf1, )
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     fn = lambda: call([])
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] if __name__ == "__main__":
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:22:12.066000 1016295 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 13:22:12.067000 1016295 site-packages/torch/_inductor/graph.py:2053] [1/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6k/c6k7kcftqsonluavjtamcza3pfxmkg7dy2homyhug3lyc37awpcv.py
I0204 13:22:12.068000 1016295 site-packages/torch/_inductor/graph.py:2087] [1/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6k/c6k7kcftqsonluavjtamcza3pfxmkg7dy2homyhug3lyc37awpcv.py
V0204 13:22:12.097000 1016295 site-packages/torch/_inductor/codecache.py:1116] [3/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6k/c6k7kcftqsonluavjtamcza3pfxmkg7dy2homyhug3lyc37awpcv.py
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] Output code: 
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] # AOT ID: ['2_inference']
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import torch
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import math
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import random
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import os
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import tempfile
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from math import inf, nan
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch import device, empty_strided
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] aten = torch.ops.aten
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] async_compile = AsyncCompile()
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] async_compile.wait(globals())
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] del async_compile
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] def call(args):
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     # Topologically Sorted Source Nodes: [rand], Original ATen: [aten.rand]
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     buf0 = torch.ops.aten.rand.default([1, 1], device=device(type='cpu'), pin_memory=False)
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     buf1 = buf0
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     return (buf1, )
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     fn = lambda: call([])
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] if __name__ == "__main__":
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:22:12.098000 1016295 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] Output code: 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # AOT ID: ['4_inference']
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import torch
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import math
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import random
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import os
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import tempfile
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from math import inf, nan
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch import device, empty_strided
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import triton
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import triton.language as tl
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     grid,
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     split_scan_grid,
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     grid_combo_kernels,
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     start_graph,
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     end_graph,
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     cooperative_reduction_grid,
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] )
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] aten = torch.ops.aten
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] async_compile = AsyncCompile()
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # Topologically Sorted Source Nodes: [mask, ge, lt, mask_1], Original ATen: [aten.arange, aten.ge, aten.lt, aten.bitwise_and]
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # Source node to ATen node mapping:
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   ge => ge
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   lt => lt
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   mask => add_1, convert_element_type_3, iota, mul_2
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   mask_1 => bitwise_and
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # Graph fragment:
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota, 1), kwargs = {})
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 0), kwargs = {})
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %convert_element_type_3 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_1, torch.float32), kwargs = {})
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Tensor](args = (%convert_element_type_3, %squeeze), kwargs = {})
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%convert_element_type_3, %squeeze_1), kwargs = {})
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %bitwise_and : [num_users=1] = call_function[target=torch.ops.aten.bitwise_and.Tensor](args = (%ge, %lt), kwargs = {})
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] triton_poi_fused_arange_bitwise_and_ge_lt_0 = async_compile.triton('triton_poi_fused_arange_bitwise_and_ge_lt_0', '''
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import triton
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import triton.language as tl
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     size_hints={'x': 4}, 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     filename=__file__,
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_arange_bitwise_and_ge_lt_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     min_elem_per_thread=0
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] )
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] @triton.jit
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] def triton_poi_fused_arange_bitwise_and_ge_lt_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     xnumel = 4
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     xmask = xindex < xnumel
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     x0 = xindex
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (0))
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp4 = 2.0
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp6 = 4.0
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp7 = tmp6 - tmp5
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp8 = tmp1 * tmp7
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp9 = tmp8.to(tl.int64)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp11 = x0
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp13 = tmp12 >= tmp10
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp14 = tmp5.to(tl.int64)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp15 = tmp9 + tmp14
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp17 = tmp12 < tmp16
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp18 = tmp13 & tmp17
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp18, xmask)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] ''', device_str='cuda')
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] cpp_fused_ge_sub_1 = async_compile.cpp_pybinding(['const float*', 'const float*', 'bool*'], '''
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #include "/tmp/torchinductor_sahanp/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                        const float* in_ptr1,
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                        bool* out_ptr0)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] {
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     {
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         {
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]             {
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp1 = in_ptr1[static_cast<int64_t>(0L)];
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp2 = static_cast<float>(2.0);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp3 = decltype(tmp1)(tmp1 * tmp2);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp4 = static_cast<float>(4.0);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp5 = decltype(tmp4)(tmp4 - tmp3);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp6 = decltype(tmp0)(tmp0 * tmp5);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp7 = c10::convert<int64_t>(tmp6);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp8 = c10::convert<int64_t>(tmp3);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp10 = decltype(tmp9)(tmp9 - tmp7);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp11 = static_cast<int64_t>(2);
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp12 = tmp10 >= tmp11;
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 out_ptr0[static_cast<int64_t>(0L)] = tmp12;
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]             }
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         }
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     }
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] }
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] ''')
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] async_compile.wait(globals())
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] del async_compile
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] def call(args):
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     arg0_1, = args
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     args.clear()
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     # Topologically Sorted Source Nodes: [rand_1], Original ATen: [aten.rand]
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf0 = torch.ops.aten.rand.default([1], device=device(type='cpu'), pin_memory=False)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf1 = buf0
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     del buf0
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     # Topologically Sorted Source Nodes: [rand], Original ATen: [aten.rand]
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf2 = torch.ops.aten.rand.default([1], device=device(type='cpu'), pin_memory=False)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf3 = buf2
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     del buf2
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         buf4 = empty_strided_cuda((4, ), (1, ), torch.bool)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         # Topologically Sorted Source Nodes: [mask, ge, lt, mask_1], Original ATen: [aten.arange, aten.ge, aten.lt, aten.bitwise_and]
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         triton_poi_fused_arange_bitwise_and_ge_lt_0.run(buf1, buf3, buf4, 4, grid=grid(4), stream=stream0)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf5 = empty_strided_cpu((), (), torch.bool)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     cpp_fused_ge_sub_1(buf1, buf3, buf5)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     return (buf5, reinterpret_tensor(arg0_1, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf4, (4, 1), (1, 1), 0), )
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] if __name__ == "__main__":
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:22:12.712000 1016295 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0204 13:22:12.715000 1016295 site-packages/torch/_inductor/graph.py:2053] [6/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/k3/ck33iresfivdvrmjecc25oxuwecqt5xijdnkyc7dcck4pgijzdkb.py
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break from `Tensor.item()`, consider setting:
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     torch._dynamo.config.capture_scalar_outputs = True
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] or:
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] to include these operations in the captured graph.
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break: from user code at:
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_LearnedVector_A_Hackers_AI_Voice_Assistant.py", line 156, in forward
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     return self._forward(x)
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_LearnedVector_A_Hackers_AI_Voice_Assistant.py", line 171, in policy3
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     probability = torch.rand(1, 1).item()
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0205 18:12:24.537000 3662664 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] Output code: 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # AOT ID: ['2_inference']
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import torch
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import math
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import random
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import os
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import tempfile
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from math import inf, nan
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch import device, empty_strided
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] aten = torch.ops.aten
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile = AsyncCompile()
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile.wait(globals())
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] del async_compile
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def call(args):
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     # Topologically Sorted Source Nodes: [rand], Original ATen: [aten.rand]
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     buf0 = torch.ops.aten.rand.default([1, 1], device=device(type='cpu'), pin_memory=False)
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     buf1 = buf0
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return (buf1, )
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     fn = lambda: call([])
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] if __name__ == "__main__":
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:12:24.568000 3662664 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 18:12:24.569000 3662664 site-packages/torch/_inductor/graph.py:2053] [1/0_1] [__output_code] Output code written to: inductor_cache/6k/c6k7kcftqsonluavjtamcza3pfxmkg7dy2homyhug3lyc37awpcv.py
I0205 18:12:24.570000 3662664 site-packages/torch/_inductor/graph.py:2087] [1/0_1] [__output_code] Output code written to: inductor_cache/6k/c6k7kcftqsonluavjtamcza3pfxmkg7dy2homyhug3lyc37awpcv.py
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1116] [3/0_1] [__output_code] Output code written to: inductor_cache/6k/c6k7kcftqsonluavjtamcza3pfxmkg7dy2homyhug3lyc37awpcv.py
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] Output code: 
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] # AOT ID: ['2_inference']
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import torch
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import math
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import random
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import os
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] import tempfile
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from math import inf, nan
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch import device, empty_strided
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] aten = torch.ops.aten
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] async_compile = AsyncCompile()
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] async_compile.wait(globals())
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] del async_compile
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] def call(args):
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     # Topologically Sorted Source Nodes: [rand], Original ATen: [aten.rand]
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     buf0 = torch.ops.aten.rand.default([1, 1], device=device(type='cpu'), pin_memory=False)
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     buf1 = buf0
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     return (buf1, )
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     fn = lambda: call([])
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] if __name__ == "__main__":
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:12:24.601000 3662664 site-packages/torch/_inductor/codecache.py:1117] [3/0_1] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] Output code: 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # AOT ID: ['4_inference']
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import torch
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import math
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import random
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import os
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import tempfile
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from math import inf, nan
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch import device, empty_strided
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import triton
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import triton.language as tl
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     grid,
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     split_scan_grid,
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     grid_combo_kernels,
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     start_graph,
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     end_graph,
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     cooperative_reduction_grid,
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] )
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] aten = torch.ops.aten
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] async_compile = AsyncCompile()
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # kernel path: inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # Topologically Sorted Source Nodes: [mask, ge, lt, mask_1], Original ATen: [aten.arange, aten.ge, aten.lt, aten.bitwise_and]
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # Source node to ATen node mapping:
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   ge => ge
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   lt => lt
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   mask => add_1, convert_element_type_3, iota, mul_2
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   mask_1 => bitwise_and
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] # Graph fragment:
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota, 1), kwargs = {})
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 0), kwargs = {})
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %convert_element_type_3 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_1, torch.float32), kwargs = {})
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Tensor](args = (%convert_element_type_3, %squeeze), kwargs = {})
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%convert_element_type_3, %squeeze_1), kwargs = {})
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #   %bitwise_and : [num_users=1] = call_function[target=torch.ops.aten.bitwise_and.Tensor](args = (%ge, %lt), kwargs = {})
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] triton_poi_fused_arange_bitwise_and_ge_lt_0 = async_compile.triton('triton_poi_fused_arange_bitwise_and_ge_lt_0', '''
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import triton
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] import triton.language as tl
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     size_hints={'x': 4}, 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     filename=__file__,
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_arange_bitwise_and_ge_lt_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     min_elem_per_thread=0
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] )
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] @triton.jit
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] def triton_poi_fused_arange_bitwise_and_ge_lt_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     xnumel = 4
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     xmask = xindex < xnumel
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     x0 = xindex
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (0))
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp4 = 2.0
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp6 = 4.0
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp7 = tmp6 - tmp5
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp8 = tmp1 * tmp7
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp9 = tmp8.to(tl.int64)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp11 = x0
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp13 = tmp12 >= tmp10
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp14 = tmp5.to(tl.int64)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp15 = tmp9 + tmp14
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp17 = tmp12 < tmp16
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tmp18 = tmp13 & tmp17
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp18, xmask)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] ''', device_str='cuda')
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] cpp_fused_ge_sub_1 = async_compile.cpp_pybinding(['const float*', 'const float*', 'bool*'], '''
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] #include "inductor_cache/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                        const float* in_ptr1,
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                        bool* out_ptr0)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] {
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     {
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         {
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]             {
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp1 = in_ptr1[static_cast<int64_t>(0L)];
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp2 = static_cast<float>(2.0);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp3 = decltype(tmp1)(tmp1 * tmp2);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp4 = static_cast<float>(4.0);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp5 = decltype(tmp4)(tmp4 - tmp3);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp6 = decltype(tmp0)(tmp0 * tmp5);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp7 = c10::convert<int64_t>(tmp6);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp8 = c10::convert<int64_t>(tmp3);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp10 = decltype(tmp9)(tmp9 - tmp7);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp11 = static_cast<int64_t>(2);
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 auto tmp12 = tmp10 >= tmp11;
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]                 out_ptr0[static_cast<int64_t>(0L)] = tmp12;
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]             }
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         }
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     }
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] }
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] ''')
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] async_compile.wait(globals())
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] del async_compile
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] def call(args):
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     arg0_1, = args
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     args.clear()
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     # Topologically Sorted Source Nodes: [rand_1], Original ATen: [aten.rand]
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf0 = torch.ops.aten.rand.default([1], device=device(type='cpu'), pin_memory=False)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf1 = buf0
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     del buf0
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     # Topologically Sorted Source Nodes: [rand], Original ATen: [aten.rand]
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf2 = torch.ops.aten.rand.default([1], device=device(type='cpu'), pin_memory=False)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf3 = buf2
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     del buf2
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         buf4 = empty_strided_cuda((4, ), (1, ), torch.bool)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         # Topologically Sorted Source Nodes: [mask, ge, lt, mask_1], Original ATen: [aten.arange, aten.ge, aten.lt, aten.bitwise_and]
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]         triton_poi_fused_arange_bitwise_and_ge_lt_0.run(buf1, buf3, buf4, 4, grid=grid(4), stream=stream0)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     buf5 = empty_strided_cpu((), (), torch.bool)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     cpp_fused_ge_sub_1(buf1, buf3, buf5)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     return (buf5, reinterpret_tensor(arg0_1, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf4, (4, 1), (1, 1), 0), )
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] if __name__ == "__main__":
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:12:25.118000 3662664 site-packages/torch/_inductor/graph.py:2045] [6/0] [__output_code] 
V0205 18:12:25.121000 3662664 site-packages/torch/_inductor/graph.py:2053] [6/0] [__output_code] Output code written to: inductor_cache/yn/cynbdk2ubtt7b45zivx4ysshellnspa3vcabnzwanf2wy3jugd4e.py
