V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6s/c6szi3k3j6ulizzv6cgjdgpyqf4emdxrktc365koyybem5upgi6z.py
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pax, input_1], Original ATen: [aten.add, aten.relu]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => relu
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pax => add
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, %unsqueeze), kwargs = {})
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add,), kwargs = {})
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_relu_0 = async_compile.triton('triton_poi_fused_add_relu_0', '''
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_relu_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_relu_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 256)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 256
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ko/ckot2gufikzyvz7iyfpc36ibjtgu56yywp2iom2q7hgcjfnoampy.py
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ax], Original ATen: [aten._softmax]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ax => amax, exp, sub
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%squeeze, [1], True), kwargs = {})
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze, %amax), kwargs = {})
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_1 = async_compile.triton('triton_poi_fused__softmax_1', '''
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp9, xmask)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/aa/caavwqzgpqp4gf7zdunjgwrl3o7qjreyq7zssrthvpaju3beexlz.py
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ax], Original ATen: [aten._softmax]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ax => div, sum_1
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_2 = async_compile.triton('triton_poi_fused__softmax_2', '''
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, xmask)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sv/csvu6vetk35jc3f472ywvc3fdgfraqyyvk2m4nfz5mjkxpltboge.py
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, sx_1], Original ATen: [aten.mul, aten.sum]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sx_1 => sum_2
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %unsqueeze_1), kwargs = {})
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sum_3 = async_compile.triton('triton_poi_fused_mul_sum_3', '''
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sum_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sum_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 256)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 256
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 64*x3), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (16 + x1 + 64*x3), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (32 + x1 + 64*x3), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (48 + x1 + 64*x3), xmask, eviction_policy='evict_last')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 * tmp6
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp0 * tmp9
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp11, xmask)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 4), (4, 1))
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), torch.float32)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pax, input_1], Original ATen: [aten.add, aten.relu]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_relu_0.run(primals_2, primals_1, buf0, 1024, grid=grid(1024), stream=stream0)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((256, 1), (1, 1), torch.float32)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.addmm]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_4, reinterpret_tensor(buf0, (256, 4), (4, 1), 0), reinterpret_tensor(primals_3, (4, 1), (1, 4), 0), alpha=1, beta=1, out=buf2)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4, 1), (64, 16, 4, 1, 256), torch.float32)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ax], Original ATen: [aten._softmax]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_1.run(buf2, buf3, 256, grid=grid(256), stream=stream0)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf2, (4, 4, 4, 4, 1), (64, 16, 4, 1, 1), 0); del buf2  # reuse
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ax], Original ATen: [aten._softmax]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_2.run(buf3, buf4, 256, grid=grid(256), stream=stream0)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), torch.float32)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, sx_1], Original ATen: [aten.mul, aten.sum]
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sum_3.run(primals_2, buf4, buf5, 1024, grid=grid(1024), stream=stream0)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf5, buf4, primals_2, reinterpret_tensor(buf0, (256, 4), (4, 1), 0), buf4, )
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:03:56.381000 436607 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:56.385000 436607 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/mp/cmp6pyftswq2ub644sh5kgacwwjswpeyejdvhwzljb7zedcnqsw5.py
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6s/c6szi3k3j6ulizzv6cgjdgpyqf4emdxrktc365koyybem5upgi6z.py
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pax, input_1], Original ATen: [aten.add, aten.relu]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => relu
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pax => add
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, %unsqueeze), kwargs = {})
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add,), kwargs = {})
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_relu_0 = async_compile.triton('triton_poi_fused_add_relu_0', '''
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_relu_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_relu_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 256)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 256
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ko/ckot2gufikzyvz7iyfpc36ibjtgu56yywp2iom2q7hgcjfnoampy.py
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ax], Original ATen: [aten._softmax]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ax => amax, exp, sub
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%squeeze, [1], True), kwargs = {})
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze, %amax), kwargs = {})
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_1 = async_compile.triton('triton_poi_fused__softmax_1', '''
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp9, xmask)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/aa/caavwqzgpqp4gf7zdunjgwrl3o7qjreyq7zssrthvpaju3beexlz.py
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ax], Original ATen: [aten._softmax]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ax => div, sum_1
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_2 = async_compile.triton('triton_poi_fused__softmax_2', '''
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, xmask)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sv/csvu6vetk35jc3f472ywvc3fdgfraqyyvk2m4nfz5mjkxpltboge.py
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, sx_1], Original ATen: [aten.mul, aten.sum]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sx_1 => sum_2
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %unsqueeze_1), kwargs = {})
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sum_3 = async_compile.triton('triton_poi_fused_mul_sum_3', '''
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sum_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sum_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 256)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 256
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 64*x3), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (16 + x1 + 64*x3), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (32 + x1 + 64*x3), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (48 + x1 + 64*x3), xmask, eviction_policy='evict_last')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 * tmp6
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp0 * tmp9
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp11, xmask)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 4), (4, 1))
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), torch.float32)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pax, input_1], Original ATen: [aten.add, aten.relu]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_relu_0.run(primals_2, primals_1, buf0, 1024, grid=grid(1024), stream=stream0)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((256, 1), (1, 1), torch.float32)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.addmm]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_4, reinterpret_tensor(buf0, (256, 4), (4, 1), 0), reinterpret_tensor(primals_3, (4, 1), (1, 4), 0), alpha=1, beta=1, out=buf2)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4, 1), (64, 16, 4, 1, 256), torch.float32)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ax], Original ATen: [aten._softmax]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_1.run(buf2, buf3, 256, grid=grid(256), stream=stream0)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf2, (4, 4, 4, 4, 1), (64, 16, 4, 1, 1), 0); del buf2  # reuse
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ax], Original ATen: [aten._softmax]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_2.run(buf3, buf4, 256, grid=grid(256), stream=stream0)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), torch.float32)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, sx_1], Original ATen: [aten.mul, aten.sum]
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sum_3.run(primals_2, buf4, buf5, 1024, grid=grid(1024), stream=stream0)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf5, buf4, primals_2, reinterpret_tensor(buf0, (256, 4), (4, 1), 0), buf4, )
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:54:12.762000 3119913 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:54:12.767000 3119913 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/h7/ch7xrwokaf2yaz7cnlv42a5icqg35etihgepoo2cavpcdhfowrqh.py
