V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sy/csy3yuu7543mtwqkxtadkmsrmc6gp6iy4t5bjtcis3afbeymkubf.py
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out1], Original ATen: [aten.repeat]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out1 => repeat
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %repeat : [num_users=2] = call_function[target=torch.ops.aten.repeat.default](args = (%primals_4, [4]), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_repeat_0 = async_compile.triton('triton_poi_fused_repeat_0', '''
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8}, 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_repeat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_repeat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + ((x0 % 2)), xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zi/czivgkwt32gsvytlxwdtgfywctshbogrvvwzlk33zejdzfeutbjg.py
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out1], Original ATen: [aten._native_batch_norm_legit, aten.native_batch_norm_backward]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out1 => add, rsqrt, var_mean
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %unsqueeze_46), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1 = async_compile.triton('triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1', '''
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8, 'r': 16},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1(in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*((x0 % 2)) + 64*(x0 // 2)), xmask, other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 16, tl.int32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp10
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 - tmp10
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 16.0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 / tmp18
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1e-05
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.rsqrt(tmp21)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + 16*x0), tmp17, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp22, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp16, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fb/cfbjs53lq3hnj6l4ywzie36l6fjofb7r4vjnhidgzb7psmwycg4f.py
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out, out_1], Original ATen: [aten.cat, aten.relu]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => cat
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => relu
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view_1, %add_3], 1), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%cat,), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_relu_2 = async_compile.triton('triton_poi_fused_cat_relu_2', '''
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, xnumel, XBLOCK : tl.constexpr):
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(((x1) % 2)) + 64*((((2*x2 + (x1)) // 2) % 4))), tmp4 & xmask, other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (2*x2 + (x1)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (2*x2 + (x1)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 16.0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 / tmp9
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1e-05
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = libdevice.rsqrt(tmp12)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 * tmp13
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (2*x2 + (x1)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (((x1) % 2)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp4, tmp18, tmp19)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 >= tmp3
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 4, tl.int64)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp0 < tmp22
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + (32 + x0 + 16*((-2) + x1) + 64*x2), tmp21 & xmask, other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr5 + ((-2) + x1), tmp21 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 - tmp25
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr6 + ((-2) + x1), tmp21 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1e-05
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = libdevice.sqrt(tmp29)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 1, tl.int32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 / tmp30
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = 1.0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 * tmp34
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr7 + ((-2) + x1), tmp21 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 * tmp36
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr8 + ((-2) + x1), tmp21 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full(tmp39.shape, 0.0, tmp39.dtype)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.where(tmp21, tmp39, tmp40)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.where(tmp4, tmp20, tmp41)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.full([1], 0, tl.int32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.maximum(tmp43, tmp42)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp44, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lt/cltjpsskvpcdzsajev6idjgxidsc3e3c4rcy3shtkkty3y7y4kqy.py
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2, out_3, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.relu, aten.threshold_backward]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_5, mul_6, mul_7, sub_2
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => add_6
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => relu_1
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_13), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_15), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_6, %unsqueeze_17), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, %unsqueeze_19), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %primals_1), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_6,), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3', '''
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x3), xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 <= tmp20
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp19, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ar/carq3phftazls6h2mtb4l5b3fzeuhgorrnvsejjxahzwu4dqmxox.py
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.native_batch_norm_backward]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_4
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_13, 1e-05), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_4,), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%rsqrt_1, %primals_14), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4', '''
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x0), xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1e-05
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.rsqrt(tmp2)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kg/ckgrbbnjpvrqnjka4byav2zlzvs64eqg45w4gblq7pzmtumxejim.py
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.native_batch_norm_backward]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out2 => add_2
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_7, 1e-05), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_2 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_2,), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%rsqrt_2, %primals_8), kwargs = {})
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5', '''
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x0), xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1e-05
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.rsqrt(tmp2)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15 = args
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 3, 1), (12, 3, 1, 1))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 1, 3), (12, 3, 3, 1))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (2, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (2, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (2, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (2, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (2, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (2, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 4, 3, 1), (12, 3, 1, 1))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, 4, 1, 3), (12, 3, 3, 1))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_2, stride=(1, 1), padding=(1, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.convolution]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(0, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((8, ), (1, ), torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out1], Original ATen: [aten.repeat]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_repeat_0.run(primals_4, buf2, 8, grid=grid(8), stream=stream0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 8, 1, 1), (8, 1, 8, 8), torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 8, 1, 1), (8, 1, 8, 8), torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((1, 8, 4, 4), (128, 16, 4, 1), torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1, 8, 1, 1), (8, 1, 8, 8), torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out1], Original ATen: [aten._native_batch_norm_legit, aten.native_batch_norm_backward]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1.run(buf1, buf3, buf4, buf15, buf6, 8, 16, grid=grid(8), stream=stream0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf7; del buf7  # reuse
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out, out_1], Original ATen: [aten.cat, aten.relu]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_relu_2.run(buf8, buf1, buf3, buf4, buf2, primals_5, primals_6, primals_7, primals_8, primals_9, 256, grid=grid(256), stream=stream0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_10, stride=(1, 1), padding=(1, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_11, stride=(1, 1), padding=(0, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf10; del buf10  # reuse
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2, out_3, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.relu, aten.threshold_backward]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3.run(buf11, primals_12, primals_13, primals_14, primals_15, primals_1, buf12, 256, grid=grid(256), stream=stream0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.native_batch_norm_backward]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4.run(primals_13, primals_14, buf13, 4, grid=grid(4), stream=stream0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((2, ), (1, ), torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.native_batch_norm_backward]
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5.run(primals_7, primals_8, buf14, 2, grid=grid(2), stream=stream0)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf11, primals_1, primals_2, primals_3, primals_10, primals_11, buf0, buf2, reinterpret_tensor(buf6, (8, ), (1, ), 0), buf8, buf9, buf12, reinterpret_tensor(buf13, (1, 4, 1, 1), (4, 1, 1, 1), 0), reinterpret_tensor(buf14, (1, 2, 1, 1), (2, 1, 1, 1), 0), buf15, )
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 3, 1), (12, 3, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 1, 3), (12, 3, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 4, 3, 1), (12, 3, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, 4, 1, 3), (12, 3, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15])
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:29:46.352000 3040693 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:29:46.361000 3040693 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/u5/cu5chs2bbbjadwymst4tbexgcmzu3letvoqviycperq2ywryuzrz.py
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sy/csy3yuu7543mtwqkxtadkmsrmc6gp6iy4t5bjtcis3afbeymkubf.py
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out1], Original ATen: [aten.repeat]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out1 => repeat
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %repeat : [num_users=2] = call_function[target=torch.ops.aten.repeat.default](args = (%primals_4, [4]), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_repeat_0 = async_compile.triton('triton_poi_fused_repeat_0', '''
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8}, 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_repeat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_repeat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + ((x0 % 2)), xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zi/czivgkwt32gsvytlxwdtgfywctshbogrvvwzlk33zejdzfeutbjg.py
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out1], Original ATen: [aten._native_batch_norm_legit, aten.native_batch_norm_backward]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out1 => add, rsqrt, var_mean
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %unsqueeze_46), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1 = async_compile.triton('triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1', '''
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8, 'r': 16},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1(in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*((x0 % 2)) + 64*(x0 // 2)), xmask, other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 16, tl.int32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp10
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 - tmp10
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 16.0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 / tmp18
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1e-05
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.rsqrt(tmp21)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + 16*x0), tmp17, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp22, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp16, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fb/cfbjs53lq3hnj6l4ywzie36l6fjofb7r4vjnhidgzb7psmwycg4f.py
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out, out_1], Original ATen: [aten.cat, aten.relu]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => cat
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => relu
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view_1, %add_3], 1), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%cat,), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_relu_2 = async_compile.triton('triton_poi_fused_cat_relu_2', '''
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, xnumel, XBLOCK : tl.constexpr):
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(((x1) % 2)) + 64*((((2*x2 + (x1)) // 2) % 4))), tmp4 & xmask, other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (2*x2 + (x1)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (2*x2 + (x1)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 16.0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 / tmp9
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1e-05
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = libdevice.rsqrt(tmp12)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 * tmp13
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (2*x2 + (x1)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (((x1) % 2)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp4, tmp18, tmp19)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 >= tmp3
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 4, tl.int64)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp0 < tmp22
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + (32 + x0 + 16*((-2) + x1) + 64*x2), tmp21 & xmask, other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr5 + ((-2) + x1), tmp21 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 - tmp25
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr6 + ((-2) + x1), tmp21 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1e-05
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = libdevice.sqrt(tmp29)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 1, tl.int32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 / tmp30
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = 1.0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 * tmp34
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr7 + ((-2) + x1), tmp21 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 * tmp36
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr8 + ((-2) + x1), tmp21 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full(tmp39.shape, 0.0, tmp39.dtype)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.where(tmp21, tmp39, tmp40)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.where(tmp4, tmp20, tmp41)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.full([1], 0, tl.int32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.maximum(tmp43, tmp42)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp44, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lt/cltjpsskvpcdzsajev6idjgxidsc3e3c4rcy3shtkkty3y7y4kqy.py
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2, out_3, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.relu, aten.threshold_backward]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_5, mul_6, mul_7, sub_2
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => add_6
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => relu_1
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_13), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_15), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_6, %unsqueeze_17), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, %unsqueeze_19), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %primals_1), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_6,), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3', '''
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x3), xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 <= tmp20
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp19, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ar/carq3phftazls6h2mtb4l5b3fzeuhgorrnvsejjxahzwu4dqmxox.py
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.native_batch_norm_backward]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_4
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_13, 1e-05), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_4,), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%rsqrt_1, %primals_14), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4', '''
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x0), xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1e-05
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.rsqrt(tmp2)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kg/ckgrbbnjpvrqnjka4byav2zlzvs64eqg45w4gblq7pzmtumxejim.py
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.native_batch_norm_backward]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out2 => add_2
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_7, 1e-05), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_2 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_2,), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%rsqrt_2, %primals_8), kwargs = {})
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5', '''
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2}, 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x0), xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1e-05
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.rsqrt(tmp2)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15 = args
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 3, 1), (12, 3, 1, 1))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 1, 3), (12, 3, 3, 1))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (2, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (2, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (2, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (2, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (2, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (2, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 4, 3, 1), (12, 3, 1, 1))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, 4, 1, 3), (12, 3, 3, 1))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_2, stride=(1, 1), padding=(1, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.convolution]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(0, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((8, ), (1, ), torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out1], Original ATen: [aten.repeat]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_repeat_0.run(primals_4, buf2, 8, grid=grid(8), stream=stream0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 8, 1, 1), (8, 1, 8, 8), torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 8, 1, 1), (8, 1, 8, 8), torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((1, 8, 4, 4), (128, 16, 4, 1), torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1, 8, 1, 1), (8, 1, 8, 8), torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out1], Original ATen: [aten._native_batch_norm_legit, aten.native_batch_norm_backward]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_native_batch_norm_backward_1.run(buf1, buf3, buf4, buf15, buf6, 8, 16, grid=grid(8), stream=stream0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf7; del buf7  # reuse
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out, out_1], Original ATen: [aten.cat, aten.relu]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_relu_2.run(buf8, buf1, buf3, buf4, buf2, primals_5, primals_6, primals_7, primals_8, primals_9, 256, grid=grid(256), stream=stream0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_10, stride=(1, 1), padding=(1, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_11, stride=(1, 1), padding=(0, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf10; del buf10  # reuse
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2, out_3, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.relu, aten.threshold_backward]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_3.run(buf11, primals_12, primals_13, primals_14, primals_15, primals_1, buf12, 256, grid=grid(256), stream=stream0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.native_batch_norm_backward]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_4.run(primals_13, primals_14, buf13, 4, grid=grid(4), stream=stream0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((2, ), (1, ), torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.native_batch_norm_backward]
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_native_batch_norm_backward_5.run(primals_7, primals_8, buf14, 2, grid=grid(2), stream=stream0)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf11, primals_1, primals_2, primals_3, primals_10, primals_11, buf0, buf2, reinterpret_tensor(buf6, (8, ), (1, ), 0), buf8, buf9, buf12, reinterpret_tensor(buf13, (1, 4, 1, 1), (4, 1, 1, 1), 0), reinterpret_tensor(buf14, (1, 2, 1, 1), (2, 1, 1, 1), 0), buf15, )
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 3, 1), (12, 3, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 1, 3), (12, 3, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 4, 3, 1), (12, 3, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, 4, 1, 3), (12, 3, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15])
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:18:30.633000 477373 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:18:30.642000 477373 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ht/cht7kmlyuexu5iyip7iuxazwj6sgqtthgwxpt2yqcyvjwz6emnrq.py
