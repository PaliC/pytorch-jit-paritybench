V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_forward']
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qq/cqqetrenmnb4ytqbyb3cnazgq3phsxepqqrg5zb5fgzizxui6fcj.py
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_2, None, [1], [0], [1], False, [0], 1), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/y7/cy7dv7t2w3w2qx2aksar5nbzvum2diqhkaa7er46tes3gr4xr7wx.py
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [output], Original ATen: [aten.native_group_norm]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => add, add_1, mul_1, rsqrt, var_mean
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, %unsqueeze_3), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %unsqueeze_1), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_native_group_norm_1 = async_compile.triton('triton_per_fused_native_group_norm_1', '''
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_group_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_native_group_norm_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex // 4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (r3), None, eviction_policy='evict_last')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr2 + (r3), None, eviction_policy='evict_last')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 16, tl.int32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp10
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 - tmp10
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 16.0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 / tmp18
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1e-05
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.rsqrt(tmp21)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp17 * tmp22
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + 16*x0), tmp27, xmask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp22, xmask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/e7/ce766upql5syhv73ctoqfvr5dfpi4cnm46b72zr5exmtouhlrazj.py
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, view_1, d, idx], Original ATen: [aten.sub, aten.view, aten.linalg_vector_norm, aten.argmin]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   d => pow_1, pow_2, sum_1
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   idx => argmin
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_1
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   view_1 => view_3
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_4, %unsqueeze_6), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view_3 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%sub_1, [4, 4, 4, 1, -1]), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%view_3, 2), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [-1]), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmin : [num_users=2] = call_function[target=torch.ops.aten.argmin.default](args = (%pow_2, 0), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_argmin_linalg_vector_norm_sub_view_2 = async_compile.triton('triton_poi_fused_argmin_linalg_vector_norm_sub_view_2', '''
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_argmin_linalg_vector_norm_sub_view_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 20, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_argmin_linalg_vector_norm_sub_view_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (1))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (2))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr1 + (3))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (4))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr1 + (5))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.broadcast_to(tmp28, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (6))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.broadcast_to(tmp33, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr1 + (7))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.broadcast_to(tmp38, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr1 + (8))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.broadcast_to(tmp59, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.load(in_ptr1 + (9))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.broadcast_to(tmp63, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.load(in_ptr1 + (10))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.broadcast_to(tmp68, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr1 + (11))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.broadcast_to(tmp73, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.load(in_ptr1 + (12))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tl.broadcast_to(tmp93, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr1 + (13))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.broadcast_to(tmp97, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.load(in_ptr1 + (14))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tl.broadcast_to(tmp102, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tl.load(in_ptr1 + (15))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tl.broadcast_to(tmp107, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 - tmp2
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp4 + tmp9
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 - tmp13
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp10 + tmp15
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 - tmp19
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp20
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp16 + tmp21
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.sqrt(tmp22)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp0 - tmp25
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp5 - tmp29
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp30
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp27 + tmp31
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp11 - tmp34
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp35
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp32 + tmp36
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp17 - tmp39
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp40
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp37 + tmp41
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = libdevice.sqrt(tmp42)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp23 < tmp43
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp23 == tmp43
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp23 != tmp23
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp43 != tmp43
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 > tmp47
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp44 | tmp48
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp46 & tmp47
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp45 | tmp50
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.full([1], 0, tl.int64)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.full([1], 1, tl.int64)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 < tmp53
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp51 & tmp54
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp49 | tmp55
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp56, tmp23, tmp43)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp56, tmp52, tmp53)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp0 - tmp60
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 * tmp61
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp5 - tmp64
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp65 * tmp65
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp62 + tmp66
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp11 - tmp69
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp70 * tmp70
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp67 + tmp71
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp17 - tmp74
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 * tmp75
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp72 + tmp76
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = libdevice.sqrt(tmp77)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp57 < tmp78
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp57 == tmp78
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp57 != tmp57
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp78 != tmp78
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp81 > tmp82
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp79 | tmp83
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp81 & tmp82
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp80 | tmp85
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.full([1], 2, tl.int64)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp58 < tmp87
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp86 & tmp88
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp84 | tmp89
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.where(tmp90, tmp57, tmp78)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.where(tmp90, tmp58, tmp87)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp0 - tmp94
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp95 * tmp95
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp5 - tmp98
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp99 * tmp99
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp96 + tmp100
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp11 - tmp103
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 * tmp104
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp101 + tmp105
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp17 - tmp108
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp109 * tmp109
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tmp106 + tmp110
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = libdevice.sqrt(tmp111)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp91 < tmp112
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = tmp91 == tmp112
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp91 != tmp91
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tmp112 != tmp112
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp115 > tmp116
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tmp113 | tmp117
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp115 & tmp116
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tmp114 | tmp119
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl.full([1], 3, tl.int64)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tmp92 < tmp121
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tmp120 & tmp122
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp118 | tmp123
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.where(tmp124, tmp91, tmp112)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = tl.where(tmp124, tmp92, tmp121)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp126, xmask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [latent_loss, commitment_loss, mul_1, add_2], Original ATen: [aten.mse_loss, aten.mul, aten.add]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   commitment_loss => mean_2, pow_4, sub_4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latent_loss => mean_1, pow_3, sub_3
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%permute_2, %add_1), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_3, 2), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%pow_3,), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %permute_2), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_4, 2), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%pow_4,), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean_2, 0.25), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, %mul_3), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_mse_loss_mul_3 = async_compile.triton('triton_per_fused_add_mse_loss_mul_3', '''
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_mse_loss_mul_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_mse_loss_mul_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 4)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex // 16
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = ((rindex // 4) % 4)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 4*r2), None, eviction_policy='evict_last')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (r3), None)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK, RBLOCK], 4, tl.int32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp4) & (tmp4 < 4), "index out of bounds: 0 <= tmp4 < 4")
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (r1 + 4*tmp4), None, eviction_policy='evict_last')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.broadcast_to(tmp9, [XBLOCK, RBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.sum(tmp10, 1)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp7 - tmp6
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK, RBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.sum(tmp15, 1)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 64.0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp12 / tmp18
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 / tmp18
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 0.25
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp21
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp19 + tmp22
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp23, None)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3e/c3ezhzrg6cgzvunpoooyabn5pbvfpshquguxbqebqv3epessxbb5.py
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [float_4, hard_probs], Original ATen: [aten._to_copy, aten.mean]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_4 => convert_element_type
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hard_probs => mean
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_8, torch.float32), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%convert_element_type, [0]), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__to_copy_mean_4 = async_compile.triton('triton_per_fused__to_copy_mean_4', '''
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__to_copy_mean_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__to_copy_mean_4(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1), None, eviction_policy='evict_last')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 1, tl.int64)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1, 1], 0, tl.int64)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp7, 0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ma/cma7d7twcfalo4pob6l7vncfyvdxxrfpk7i3plpcazqzzrl467vw.py
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [float_4, hard_probs, add_1, log, mul, sum_1, neg, exp, sum_2], Original ATen: [aten._to_copy, aten.mean, aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_3
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_4 => convert_element_type
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hard_probs => mean
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_2
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_2
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_3
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_8, torch.float32), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%convert_element_type, [0]), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 1e-07), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_3,), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, %log), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [-1]), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_2,), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%exp,), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5 = async_compile.triton('triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5', '''
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (1))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (2))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (3))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 16.0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 / tmp2
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-07
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.log(tmp5)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 * tmp6
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp2
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.log(tmp11)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 * tmp12
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 + tmp13
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 / tmp2
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl_math.log(tmp18)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 * tmp19
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 + tmp20
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 / tmp2
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.log(tmp25)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 * tmp26
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp21 + tmp27
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = -tmp28
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp30, None)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ei/ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub_1, x_1, latent_loss, commitment_loss], Original ATen: [aten.sub, aten.add, aten.mse_loss, aten.mse_loss_backward]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   commitment_loss => sub_4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latent_loss => sub_3
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_2
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_2
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %add_1), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_2, %sub_2), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%permute_2, %add_1), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %permute_2), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, 0.03125), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, 0.03125), kwargs = {})
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6 = async_compile.triton('triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6', '''
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4*y1), xmask & ymask, eviction_policy='evict_last')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK, YBLOCK], 4, tl.int32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 4)) | ~(xmask & ymask), "index out of bounds: 0 <= tmp4 < 4")
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (y0 + 4*tmp4), xmask & ymask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 - tmp7
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 - tmp6
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 0.03125
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp6 - tmp7
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp11
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp9, xmask & ymask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2 + 4*y3), tmp12, xmask & ymask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (y0 + 4*x2 + 16*y1), tmp14, xmask & ymask)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 1), (4, 1, 1))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 1, 4), (4, 4, 1))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(primals_1, buf0, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4), (16, 4, 1))
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 1, 1, 1), (1, 4, 4, 4), torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf0; del buf0  # reuse
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1, 1, 1), (1, 4, 4, 4), torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.native_group_norm]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_native_group_norm_1.run(buf1, primals_3, primals_4, buf2, buf5, buf6, 4, 16, grid=grid(4), stream=stream0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.int64)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, view_1, d, idx], Original ATen: [aten.sub, aten.view, aten.linalg_vector_norm, aten.argmin]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_argmin_linalg_vector_norm_sub_view_2.run(buf5, primals_5, buf7, 16, grid=grid(16), stream=stream0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((), (), torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf11; del buf11  # reuse
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [latent_loss, commitment_loss, mul_1, add_2], Original ATen: [aten.mse_loss, aten.mul, aten.add]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_mse_loss_mul_3.run(buf16, buf7, primals_5, buf5, 1, 64, grid=grid(1), stream=stream0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((1, 4), (4, 1), torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [float_4, hard_probs], Original ATen: [aten._to_copy, aten.mean]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__to_copy_mean_4.run(buf7, buf8, 4, 16, grid=grid(4), stream=stream0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((), (), torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [float_4, hard_probs, add_1, log, mul, sum_1, neg, exp, sum_2], Original ATen: [aten._to_copy, aten.mean, aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5.run(buf8, buf15, 1, grid=grid(1), stream=stream0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 1, 4), torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub_1, x_1, latent_loss, commitment_loss], Original ATen: [aten.sub, aten.add, aten.mse_loss, aten.mse_loss_backward]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6.run(buf7, primals_5, buf5, buf9, buf13, buf14, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf5; del buf5  # reuse
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub_1, x_1, x_2], Original ATen: [aten.sub, aten.add, aten.transpose]
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf9, buf10, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf15, buf10, buf16, primals_2, primals_3, reinterpret_tensor(primals_1, (4, 4, 4), (16, 1, 4), 0), buf1, reinterpret_tensor(buf2, (4, 1), (1, 1), 0), reinterpret_tensor(buf6, (4, 1), (1, 1), 0), reinterpret_tensor(buf7, (4, 4), (4, 1), 0), buf13, buf14, )
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 1, 4), (4, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:34:08.502000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:08.514000 1550719 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4m/c4mzgsmxd5n6himurzukv6y5aibbuia6nququ3laknwgk2bngsgs.py
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_forward']
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qq/cqqetrenmnb4ytqbyb3cnazgq3phsxepqqrg5zb5fgzizxui6fcj.py
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_2, None, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/y7/cy7dv7t2w3w2qx2aksar5nbzvum2diqhkaa7er46tes3gr4xr7wx.py
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [output], Original ATen: [aten.native_group_norm]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => add, add_1, mul_1, rsqrt, var_mean
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, %unsqueeze_3), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %unsqueeze_1), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_native_group_norm_1 = async_compile.triton('triton_per_fused_native_group_norm_1', '''
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_group_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_native_group_norm_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex // 4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (r3), None, eviction_policy='evict_last')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr2 + (r3), None, eviction_policy='evict_last')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 16, tl.int32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 / tmp9
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp10
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 - tmp10
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 16.0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 / tmp18
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1e-05
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = libdevice.rsqrt(tmp21)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp17 * tmp22
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + 16*x0), tmp27, xmask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp22, xmask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/e7/ce766upql5syhv73ctoqfvr5dfpi4cnm46b72zr5exmtouhlrazj.py
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, view_1, d, idx], Original ATen: [aten.sub, aten.view, aten.linalg_vector_norm, aten.argmin]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   d => pow_1, pow_2, sum_1
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   idx => argmin
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_1
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   view_1 => view_3
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_4, %unsqueeze_6), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view_3 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%sub_1, [4, 4, 4, 1, -1]), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%view_3, 2), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [-1]), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmin : [num_users=2] = call_function[target=torch.ops.aten.argmin.default](args = (%pow_2, 0), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_argmin_linalg_vector_norm_sub_view_2 = async_compile.triton('triton_poi_fused_argmin_linalg_vector_norm_sub_view_2', '''
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_argmin_linalg_vector_norm_sub_view_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 20, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_argmin_linalg_vector_norm_sub_view_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (1))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (2))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr1 + (3))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (4))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr1 + (5))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.broadcast_to(tmp28, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (6))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.broadcast_to(tmp33, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr1 + (7))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.broadcast_to(tmp38, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr1 + (8))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.broadcast_to(tmp59, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.load(in_ptr1 + (9))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.broadcast_to(tmp63, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.load(in_ptr1 + (10))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.broadcast_to(tmp68, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr1 + (11))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.broadcast_to(tmp73, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.load(in_ptr1 + (12))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tl.broadcast_to(tmp93, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr1 + (13))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.broadcast_to(tmp97, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.load(in_ptr1 + (14))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tl.broadcast_to(tmp102, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tl.load(in_ptr1 + (15))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tl.broadcast_to(tmp107, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 - tmp2
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp4 + tmp9
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 - tmp13
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp10 + tmp15
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 - tmp19
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp20
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp16 + tmp21
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.sqrt(tmp22)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp0 - tmp25
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp5 - tmp29
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp30
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp27 + tmp31
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp11 - tmp34
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp35
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp32 + tmp36
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp17 - tmp39
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp40
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp37 + tmp41
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = libdevice.sqrt(tmp42)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp23 < tmp43
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp23 == tmp43
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp23 != tmp23
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp43 != tmp43
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 > tmp47
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp44 | tmp48
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp46 & tmp47
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp45 | tmp50
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.full([1], 0, tl.int64)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.full([1], 1, tl.int64)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 < tmp53
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp51 & tmp54
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp49 | tmp55
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp56, tmp23, tmp43)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp56, tmp52, tmp53)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp0 - tmp60
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 * tmp61
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp5 - tmp64
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp65 * tmp65
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp62 + tmp66
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp11 - tmp69
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp70 * tmp70
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp67 + tmp71
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp17 - tmp74
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 * tmp75
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp72 + tmp76
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = libdevice.sqrt(tmp77)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp57 < tmp78
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp57 == tmp78
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp57 != tmp57
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp78 != tmp78
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp81 > tmp82
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp79 | tmp83
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp81 & tmp82
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp80 | tmp85
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.full([1], 2, tl.int64)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp58 < tmp87
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp86 & tmp88
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp84 | tmp89
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.where(tmp90, tmp57, tmp78)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.where(tmp90, tmp58, tmp87)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp0 - tmp94
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp95 * tmp95
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp5 - tmp98
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp99 * tmp99
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp96 + tmp100
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp11 - tmp103
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 * tmp104
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp101 + tmp105
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp17 - tmp108
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp109 * tmp109
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tmp106 + tmp110
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = libdevice.sqrt(tmp111)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp91 < tmp112
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = tmp91 == tmp112
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp91 != tmp91
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tmp112 != tmp112
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp115 > tmp116
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tmp113 | tmp117
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp115 & tmp116
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tmp114 | tmp119
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl.full([1], 3, tl.int64)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tmp92 < tmp121
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tmp120 & tmp122
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp118 | tmp123
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.where(tmp124, tmp91, tmp112)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = tl.where(tmp124, tmp92, tmp121)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp126, xmask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [latent_loss, commitment_loss, mul_1, add_2], Original ATen: [aten.mse_loss, aten.mul, aten.add]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   commitment_loss => mean_2, pow_4, sub_4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latent_loss => mean_1, pow_3, sub_3
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%permute_2, %add_1), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_3, 2), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%pow_3,), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %permute_2), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_4, 2), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%pow_4,), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean_2, 0.25), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, %mul_3), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_mse_loss_mul_3 = async_compile.triton('triton_per_fused_add_mse_loss_mul_3', '''
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_mse_loss_mul_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_mse_loss_mul_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 4)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex // 16
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = ((rindex // 4) % 4)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 4*r2), None, eviction_policy='evict_last')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (r3), None)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK, RBLOCK], 4, tl.int32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp4) & (tmp4 < 4), "index out of bounds: 0 <= tmp4 < 4")
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (r1 + 4*tmp4), None, eviction_policy='evict_last')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.broadcast_to(tmp9, [XBLOCK, RBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.sum(tmp10, 1)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp7 - tmp6
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK, RBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.sum(tmp15, 1)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 64.0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp12 / tmp18
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 / tmp18
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 0.25
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp21
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp19 + tmp22
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp23, None)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3e/c3ezhzrg6cgzvunpoooyabn5pbvfpshquguxbqebqv3epessxbb5.py
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [float_4, hard_probs], Original ATen: [aten._to_copy, aten.mean]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_4 => convert_element_type
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hard_probs => mean
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_8, torch.float32), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%convert_element_type, [0]), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__to_copy_mean_4 = async_compile.triton('triton_per_fused__to_copy_mean_4', '''
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__to_copy_mean_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__to_copy_mean_4(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1), None, eviction_policy='evict_last')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 1, tl.int64)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1, 1], 0, tl.int64)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp7, 0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ma/cma7d7twcfalo4pob6l7vncfyvdxxrfpk7i3plpcazqzzrl467vw.py
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [float_4, hard_probs, add_1, log, mul, sum_1, neg, exp, sum_2], Original ATen: [aten._to_copy, aten.mean, aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_3
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_4 => convert_element_type
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hard_probs => mean
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_2
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_2
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_3
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_8, torch.float32), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%convert_element_type, [0]), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 1e-07), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_3,), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, %log), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [-1]), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_2,), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%exp,), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5 = async_compile.triton('triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5', '''
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (1))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (2))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (3))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 16.0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 / tmp2
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-07
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.log(tmp5)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 * tmp6
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp2
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.log(tmp11)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 * tmp12
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 + tmp13
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 / tmp2
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl_math.log(tmp18)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 * tmp19
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 + tmp20
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 / tmp2
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.log(tmp25)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 * tmp26
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp21 + tmp27
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = -tmp28
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp30, None)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ei/ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub_1, x_1, latent_loss, commitment_loss], Original ATen: [aten.sub, aten.add, aten.mse_loss, aten.mse_loss_backward]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   commitment_loss => sub_4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   latent_loss => sub_3
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_2
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_2
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %add_1), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_2, %sub_2), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%permute_2, %add_1), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %permute_2), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, 0.03125), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, 0.03125), kwargs = {})
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6 = async_compile.triton('triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6', '''
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4*y1), xmask & ymask, eviction_policy='evict_last')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK, YBLOCK], 4, tl.int32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 4)) | ~(xmask & ymask), "index out of bounds: 0 <= tmp4 < 4")
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (y0 + 4*tmp4), xmask & ymask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 - tmp7
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 - tmp6
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 0.03125
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp6 - tmp7
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp11
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp9, xmask & ymask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2 + 4*y3), tmp12, xmask & ymask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (y0 + 4*x2 + 16*y1), tmp14, xmask & ymask)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 1), (4, 1, 1))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 1, 4), (4, 4, 1))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(primals_1, buf0, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4), (16, 4, 1))
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 1, 1, 1), (1, 4, 4, 4), torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf0; del buf0  # reuse
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1, 1, 1), (1, 4, 4, 4), torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.native_group_norm]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_native_group_norm_1.run(buf1, primals_3, primals_4, buf2, buf5, buf6, 4, 16, grid=grid(4), stream=stream0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.int64)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, view_1, d, idx], Original ATen: [aten.sub, aten.view, aten.linalg_vector_norm, aten.argmin]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_argmin_linalg_vector_norm_sub_view_2.run(buf5, primals_5, buf7, 16, grid=grid(16), stream=stream0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((), (), torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf11; del buf11  # reuse
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [latent_loss, commitment_loss, mul_1, add_2], Original ATen: [aten.mse_loss, aten.mul, aten.add]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_mse_loss_mul_3.run(buf16, buf7, primals_5, buf5, 1, 64, grid=grid(1), stream=stream0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((1, 4), (4, 1), torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [float_4, hard_probs], Original ATen: [aten._to_copy, aten.mean]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__to_copy_mean_4.run(buf7, buf8, 4, 16, grid=grid(4), stream=stream0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((), (), torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [float_4, hard_probs, add_1, log, mul, sum_1, neg, exp, sum_2], Original ATen: [aten._to_copy, aten.mean, aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_exp_log_mean_mul_neg_sum_5.run(buf8, buf15, 1, grid=grid(1), stream=stream0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 1, 4), torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub_1, x_1, latent_loss, commitment_loss], Original ATen: [aten.sub, aten.add, aten.mse_loss, aten.mse_loss_backward]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6.run(buf7, primals_5, buf5, buf9, buf13, buf14, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf5; del buf5  # reuse
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub_1, x_1, x_2], Original ATen: [aten.sub, aten.add, aten.transpose]
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf9, buf10, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf15, buf10, buf16, primals_2, primals_3, reinterpret_tensor(primals_1, (4, 4, 4), (16, 1, 4), 0), buf1, reinterpret_tensor(buf2, (4, 1), (1, 1), 0), reinterpret_tensor(buf6, (4, 1), (1, 1), 0), reinterpret_tensor(buf7, (4, 4), (4, 1), 0), buf13, buf14, )
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 1, 4), (4, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:24:15.423000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:15.435000 3989628 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/sg/csggtaddvh5flkcjzxbkn6hbinfm2xunaxg5fpy2r5ksvrgn4mpy.py
