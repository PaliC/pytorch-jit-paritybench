V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pi/cpicimmhjwu2wm7ve7g3xpt2zehec5aple4ojt3cfuvkilstfkgj.py
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [triu_vector], Original ATen: [aten.index]
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   triu_vector => index
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%bmm, [None, %select, %select_1]), kwargs = {})
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_0 = async_compile.triton('triton_poi_fused_index_0', '''
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 96
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 6
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 6, tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2.0, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 12.25, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 - tmp8
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 3.5, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 - tmp11
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.floor(tmp13)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp4, tmp17, tmp18)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp3
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 12, tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = (-6) + x0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23.to(tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 2.0, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 * tmp25
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([1], 12.25, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp26
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = libdevice.sqrt(tmp28)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.full([1], 3.5, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 - tmp29
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = libdevice.floor(tmp31)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full([1], 5.0, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp32
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp32
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full([1], 0.5, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 * tmp36
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp24 - tmp37
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = libdevice.floor(tmp38)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39.to(tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 1, tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 + tmp41
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.full(tmp42.shape, 0.0, tmp42.dtype)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp20, tmp42, tmp43)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp4, tmp19, tmp44)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full([XBLOCK], 4, tl.int32)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 + tmp46
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp45 < 0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp45)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp49) & (tmp49 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp49 < 4")
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = 6 + x0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 >= tmp1
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 < tmp3
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = 6 + x0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54.to(tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.full([1], 2.0, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 * tmp56
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.full([1], 12.25, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 - tmp57
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = libdevice.sqrt(tmp59)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.full([1], 3.5, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 - tmp60
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = libdevice.floor(tmp62)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63.to(tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.full([1], 0, tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 + tmp65
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.full(tmp66.shape, 0.0, tmp66.dtype)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.where(tmp53, tmp66, tmp67)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp51 >= tmp3
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp51 < tmp21
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = x0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71.to(tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.full([1], 2.0, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 * tmp73
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.full([1], 12.25, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 - tmp74
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = libdevice.sqrt(tmp76)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.full([1], 3.5, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp78 - tmp77
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = libdevice.floor(tmp79)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.full([1], 5.0, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81 - tmp80
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp82 * tmp80
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.full([1], 0.5, tl.float64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp83 * tmp84
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp72 - tmp85
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = libdevice.floor(tmp86)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87.to(tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.full([1], 1, tl.int64)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 + tmp89
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.full(tmp90.shape, 0.0, tmp90.dtype)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.where(tmp69, tmp90, tmp91)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.where(tmp53, tmp68, tmp92)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp93 + tmp46
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp93 < 0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.where(tmp95, tmp94, tmp93)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp96) & (tmp96 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp96 < 4")
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.load(in_ptr0 + (tmp96 + 4*tmp49 + 16*x1), xmask, eviction_policy='evict_last')
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp98, xmask)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [features_self_attention], Original ATen: [aten.bmm]
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(arg0_1, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(arg0_1, (16, 4, 4), (16, 1, 4), 0), out=buf0)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 6), (6, 1), torch.float32)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [triu_vector], Original ATen: [aten.index]
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_0.run(buf0, buf2, 96, grid=grid(96), stream=stream0)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:06:26.469000 3135577 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:26.471000 3135577 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/p7/cp7xzfdvpk3exaobhvpc6owyx5whpmfok4gaxt5u7nztabqvscip.py
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pi/cpicimmhjwu2wm7ve7g3xpt2zehec5aple4ojt3cfuvkilstfkgj.py
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [triu_vector], Original ATen: [aten.index]
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   triu_vector => index
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%bmm, [None, %select, %select_1]), kwargs = {})
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_0 = async_compile.triton('triton_poi_fused_index_0', '''
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 96
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 6
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 6, tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2.0, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 12.25, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 - tmp8
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 3.5, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 - tmp11
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.floor(tmp13)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp4, tmp17, tmp18)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp3
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 12, tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = (-6) + x0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23.to(tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 2.0, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 * tmp25
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([1], 12.25, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp26
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = libdevice.sqrt(tmp28)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.full([1], 3.5, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 - tmp29
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = libdevice.floor(tmp31)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full([1], 5.0, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp32
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp32
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full([1], 0.5, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 * tmp36
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp24 - tmp37
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = libdevice.floor(tmp38)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39.to(tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 1, tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 + tmp41
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.full(tmp42.shape, 0.0, tmp42.dtype)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp20, tmp42, tmp43)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp4, tmp19, tmp44)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full([XBLOCK], 4, tl.int32)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 + tmp46
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp45 < 0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp45)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp49) & (tmp49 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp49 < 4")
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = 6 + x0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 >= tmp1
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 < tmp3
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = 6 + x0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54.to(tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.full([1], 2.0, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 * tmp56
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.full([1], 12.25, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 - tmp57
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = libdevice.sqrt(tmp59)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.full([1], 3.5, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 - tmp60
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = libdevice.floor(tmp62)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63.to(tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.full([1], 0, tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 + tmp65
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.full(tmp66.shape, 0.0, tmp66.dtype)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.where(tmp53, tmp66, tmp67)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp51 >= tmp3
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp51 < tmp21
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = x0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71.to(tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.full([1], 2.0, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 * tmp73
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.full([1], 12.25, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 - tmp74
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = libdevice.sqrt(tmp76)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.full([1], 3.5, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp78 - tmp77
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = libdevice.floor(tmp79)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.full([1], 5.0, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81 - tmp80
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp82 * tmp80
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.full([1], 0.5, tl.float64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp83 * tmp84
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp72 - tmp85
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = libdevice.floor(tmp86)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87.to(tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.full([1], 1, tl.int64)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 + tmp89
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.full(tmp90.shape, 0.0, tmp90.dtype)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.where(tmp69, tmp90, tmp91)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.where(tmp53, tmp68, tmp92)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp93 + tmp46
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp93 < 0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.where(tmp95, tmp94, tmp93)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp96) & (tmp96 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp96 < 4")
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.load(in_ptr0 + (tmp96 + 4*tmp49 + 16*x1), xmask, eviction_policy='evict_last')
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp98, xmask)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [features_self_attention], Original ATen: [aten.bmm]
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(arg0_1, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(arg0_1, (16, 4, 4), (16, 1, 4), 0), out=buf0)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 6), (6, 1), torch.float32)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [triu_vector], Original ATen: [aten.index]
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_0.run(buf0, buf2, 96, grid=grid(96), stream=stream0)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:55:53.822000 790724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:53.825000 790724 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/mc/cmcfrfsyx4trepupc4h7mzw5steaaqrz2ro7xdc6mdxhojoxjo5d.py
