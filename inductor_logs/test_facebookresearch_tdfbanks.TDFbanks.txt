V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, avg_pool1d], Original ATen: [aten.pow, aten.unsqueeze]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_pool1d => unsqueeze
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%permute, 2), kwargs = {})
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%pow_1, -2), kwargs = {})
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_pow_unsqueeze_0 = async_compile.triton('triton_poi_fused_pow_unsqueeze_0', '''
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 65536, 'x': 8}, tile_hint=TileHint.SQUARE,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_pow_unsqueeze_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_pow_unsqueeze_0(in_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 65536
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 65536*x1), xmask & ymask, eviction_policy='evict_last')
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 65536*x1), tmp1, xmask & ymask)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2p/c2pnktqqchrbio2qz45c5usxm5fhpvg64sehy75lkhcjwelnieka.py
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.mul, aten.transpose]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => mul
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => permute_1
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 2), kwargs = {})
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_1 : [num_users=2] = call_function[target=torch.ops.aten.permute.default](args = (%mul, [0, 2, 1]), kwargs = {})
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_transpose_1 = async_compile.triton('triton_poi_fused_mul_transpose_1', '''
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 65536}, tile_hint=TileHint.SQUARE,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_transpose_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_transpose_1(in_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 131072*y0), ymask, eviction_policy='evict_last')
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (65536 + x1 + 131072*y0), ymask, eviction_policy='evict_last')
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.5
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2.0
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x1 + 65536*y0), tmp6, ymask)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dr/cdrpqpn7hxhn2u6lvf2wrzp7q6kexgvbnzeda5icr5z3hu346njs.py
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.abs, aten.add, aten.log]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => abs_1
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => add
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_8 => log
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%convolution_1,), kwargs = {})
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_1, 1), kwargs = {})
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_log_2 = async_compile.triton('triton_poi_fused_abs_add_log_2', '''
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_log_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_log_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1632
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl_math.abs(tmp0)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1.0
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.log(tmp3)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 64, 64), (16384, 4096, 64, 1))
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (8, 1, 401), (401, 401, 1))
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 1, 401), (401, 401, 1))
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(reinterpret_tensor(primals_1, (1, 1, 65536), (65536, 65536, 1), 0), primals_2, stride=(1,), padding=(200,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (1, 8, 65536), (524288, 65536, 1))
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 65536, 1, 8), (524288, 1, 524288, 65536), torch.float32)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, avg_pool1d], Original ATen: [aten.pow, aten.unsqueeze]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_pow_unsqueeze_0.run(buf0, buf2, 65536, 8, grid=grid(65536, 8), stream=stream0)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 4, 65536), (262144, 65536, 1), torch.float32)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.mul, aten.transpose]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_1.run(buf2, buf4, 4, 65536, grid=grid(4, 65536), stream=stream0)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.convolution]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_3, stride=(160,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=4, bias=None)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (1, 4, 408), (1632, 408, 1))
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1, 4, 408), (1632, 408, 1), torch.float32)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.abs, aten.add, aten.log]
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_log_2.run(buf5, buf6, 1632, grid=grid(1632), stream=stream0)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, primals_2, primals_3, reinterpret_tensor(primals_1, (1, 1, 65536), (65536, 65536, 1), 0), buf0, buf2, buf4, buf5, )
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((8, 1, 401), (401, 401, 1), device='cuda:0', dtype=torch.float32)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 1, 401), (401, 401, 1), device='cuda:0', dtype=torch.float32)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:15:59.178000 2732192 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:15:59.182000 2732192 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/yq/cyquzmb5zuyrevnswbzbaw4gkjppo7c5alefpttjuogrpv6jwvgq.py
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, avg_pool1d], Original ATen: [aten.pow, aten.unsqueeze]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_pool1d => unsqueeze
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%permute, 2), kwargs = {})
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%pow_1, -2), kwargs = {})
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_pow_unsqueeze_0 = async_compile.triton('triton_poi_fused_pow_unsqueeze_0', '''
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 65536, 'x': 8}, tile_hint=TileHint.SQUARE,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_pow_unsqueeze_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_pow_unsqueeze_0(in_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 65536
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 65536*x1), xmask & ymask, eviction_policy='evict_last')
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 65536*x1), tmp1, xmask & ymask)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2p/c2pnktqqchrbio2qz45c5usxm5fhpvg64sehy75lkhcjwelnieka.py
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.mul, aten.transpose]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => mul
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => permute_1
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 2), kwargs = {})
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_1 : [num_users=2] = call_function[target=torch.ops.aten.permute.default](args = (%mul, [0, 2, 1]), kwargs = {})
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_transpose_1 = async_compile.triton('triton_poi_fused_mul_transpose_1', '''
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 65536}, tile_hint=TileHint.SQUARE,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_transpose_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_transpose_1(in_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 131072*y0), ymask, eviction_policy='evict_last')
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (65536 + x1 + 131072*y0), ymask, eviction_policy='evict_last')
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.5
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2.0
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x1 + 65536*y0), tmp6, ymask)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dr/cdrpqpn7hxhn2u6lvf2wrzp7q6kexgvbnzeda5icr5z3hu346njs.py
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.abs, aten.add, aten.log]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => abs_1
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => add
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_8 => log
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%convolution_1,), kwargs = {})
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_1, 1), kwargs = {})
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_log_2 = async_compile.triton('triton_poi_fused_abs_add_log_2', '''
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_log_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_log_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1632
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl_math.abs(tmp0)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1.0
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.log(tmp3)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 64, 64), (16384, 4096, 64, 1))
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (8, 1, 401), (401, 401, 1))
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 1, 401), (401, 401, 1))
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(reinterpret_tensor(primals_1, (1, 1, 65536), (65536, 65536, 1), 0), primals_2, stride=(1,), padding=(200,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (1, 8, 65536), (524288, 65536, 1))
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 65536, 1, 8), (524288, 1, 524288, 65536), torch.float32)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, avg_pool1d], Original ATen: [aten.pow, aten.unsqueeze]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_pow_unsqueeze_0.run(buf0, buf2, 65536, 8, grid=grid(65536, 8), stream=stream0)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 4, 65536), (262144, 65536, 1), torch.float32)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.mul, aten.transpose]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_1.run(buf2, buf4, 4, 65536, grid=grid(4, 65536), stream=stream0)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.convolution]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_3, stride=(160,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=4, bias=None)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (1, 4, 408), (1632, 408, 1))
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((1, 4, 408), (1632, 408, 1), torch.float32)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.abs, aten.add, aten.log]
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_log_2.run(buf5, buf6, 1632, grid=grid(1632), stream=stream0)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, primals_2, primals_3, reinterpret_tensor(primals_1, (1, 1, 65536), (65536, 65536, 1), 0), buf0, buf2, buf4, buf5, )
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((8, 1, 401), (401, 401, 1), device='cuda:0', dtype=torch.float32)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 1, 401), (401, 401, 1), device='cuda:0', dtype=torch.float32)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:04:51.881000 173208 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:04:51.886000 173208 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/k7/ck7gpd2wtv4fofnxpgryqbrfatgluulivcp2j4gjra2uv4dk5gbq.py
