V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['10_forward']
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/35/c35ewf77vvag5bn7ow23gjrfzdubrghz2u6fmfxexcsyej5n2qsb.py
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view_1, -1), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_0 = async_compile.triton('triton_poi_fused_max_0', '''
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 > tmp17
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 > tmp32
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wy/cwy2ybkek4vpfdxm53nzylumypehx2pm4kls6h65kjg5cxte7tgb.py
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scatter_], Original ATen: [aten.scatter]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scatter_ => scatter_upon_const_tensor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=2] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [16, 4], background_val: 0, dtype: torch.float32, dim: -1, selector: %view_2, val: 1.0})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_scatter_1 = async_compile.triton('triton_poi_fused_scatter_1', '''
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_scatter_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_scatter_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp5, xmask)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sp/csp33tdau3u6kxij34d7qzbf7gmibqxyn3wbjxwvmv7kteb7mr6x.py
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [hard_probs], Original ATen: [aten.mean]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hard_probs => mean
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%view_4, [0]), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_2 = async_compile.triton('triton_per_fused_mean_2', '''
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_2(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*r1), xmask, other=0.0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/y3/cy3j25w2wdpndzbohadmflimj2e7xuvz7y5rkghbqtduyx7w6srh.py
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [hard_probs, add, log, mul, sum_1, neg, exp, sum_2], Original ATen: [aten.mean, aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hard_probs => mean
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%view_4, [0]), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 1e-07), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, %log), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [-1]), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_1,), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%exp,), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_exp_log_mean_mul_neg_sum_3 = async_compile.triton('triton_poi_fused_add_exp_log_mean_mul_neg_sum_3', '''
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_exp_log_mean_mul_neg_sum_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_exp_log_mean_mul_neg_sum_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (1))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (2))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (3))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 16.0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 / tmp2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-07
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.log(tmp5)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 * tmp6
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.log(tmp11)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 * tmp12
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 + tmp13
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 / tmp2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl_math.log(tmp18)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 * tmp19
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 + tmp20
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 / tmp2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.log(tmp25)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 * tmp26
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp21 + tmp27
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = -tmp28
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp30, None)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wh/cwhrn3s6nv4vwsj4juklzaejbr33dsgvadccconi5xw3xzfxd6mb.py
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => amax, exp_1, sub
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_5, [-1], True), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_5, %amax), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, avg_probs], Original ATen: [aten._softmax, aten.mean]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_probs => mean_1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div, sum_3
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_3), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=3] = call_function[target=torch.ops.aten.mean.dim](args = (%div, [0]), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_mean_5 = async_compile.triton('triton_per_fused__softmax_mean_5', '''
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_mean_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_mean_5(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*r1), xmask, other=0.0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*r1), None, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*r1), None, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*r1), None, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*r1), None, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(xmask, tmp9, 0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.sum(tmp11, 1)[:, None]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 16.0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 / tmp13
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp14, xmask)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/om/comddsxersv6ihuprx7isdfxwsadmdhttvxa3fr5ipbtyzi2s43b.py
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_1, log_1, mul_1, sum_3, neg_1, exp_1, sum_4], Original ATen: [aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp_1 => exp_2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_1 => log_1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_1 => neg_1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_5
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, 1e-07), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_1,), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean_1, %log_1), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [-1]), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_4,), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_2 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg_1,), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%exp_2,), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_exp_log_mul_neg_sum_6 = async_compile.triton('triton_poi_fused_add_exp_log_mul_neg_sum_6', '''
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_exp_log_mul_neg_sum_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_exp_log_mul_neg_sum_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (2))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (3))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1e-07
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.log(tmp3)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 * tmp4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.log(tmp8)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 * tmp9
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 + tmp10
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl_math.log(tmp14)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp11 + tmp16
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl_math.log(tmp20)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 * tmp21
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp17 + tmp22
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = -tmp23
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp25, None)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lm/clmmtz6if5l5w2fsoacg7hkifnejxyssfrxk5utnjr6w55qvdtwj.py
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.sum]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => sum_6
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_9, [-2]), kwargs = {})
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_sum_7 = async_compile.triton('triton_poi_fused_sum_7', '''
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sum_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_sum_7(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (4 + x0), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (8 + x0), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (12 + x0), xmask, eviction_policy='evict_last')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp14, xmask)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 4, 4), (16, 4, 1))
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.addmm]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_3, reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, ), (1, ), torch.int64)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_0.run(buf0, buf1, 16, grid=grid(16), stream=stream0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scatter_], Original ATen: [aten.scatter]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_scatter_1.run(buf1, buf2, 64, grid=grid(64), stream=stream0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 4), (4, 1), torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [hard_probs], Original ATen: [aten.mean]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_2.run(buf2, buf3, 4, 16, grid=grid(4), stream=stream0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((), (), torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [hard_probs, add, log, mul, sum_1, neg, exp, sum_2], Original ATen: [aten.mean, aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_exp_log_mean_mul_neg_sum_3.run(buf3, buf8, 1, grid=grid(1), stream=stream0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((16, 1, 4), (4, 64, 1), torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf0, buf4, 64, grid=grid(64), stream=stream0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf3; del buf3  # reuse
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, avg_probs], Original ATen: [aten._softmax, aten.mean]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_mean_5.run(buf6, buf4, 4, 16, grid=grid(4), stream=stream0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((), (), torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_1, log_1, mul_1, sum_3, neg_1, exp_1, sum_4], Original ATen: [aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_exp_log_mul_neg_sum_6.run(buf6, buf9, 1, grid=grid(1), stream=stream0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf4, (16, 1, 4), (4, 4, 1), 0); del buf4  # reuse
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.sum]
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_sum_7.run(buf2, primals_4, buf7, 64, grid=grid(64), stream=stream0)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, buf9, reinterpret_tensor(buf7, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), buf0, buf2, buf6, )
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:34:06.972000 1550719 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:34:06.983000 1550719 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/vr/cvrfdmzoi6z5lnpidqfuzityikzdxfrexsbpi6ix4ubhni7jfo3d.py
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['10_forward']
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/35/c35ewf77vvag5bn7ow23gjrfzdubrghz2u6fmfxexcsyej5n2qsb.py
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view_1, -1), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_0 = async_compile.triton('triton_poi_fused_max_0', '''
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 > tmp17
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 > tmp32
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wy/cwy2ybkek4vpfdxm53nzylumypehx2pm4kls6h65kjg5cxte7tgb.py
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scatter_], Original ATen: [aten.scatter]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scatter_ => scatter_upon_const_tensor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=2] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [16, 4], background_val: 0, dtype: torch.float32, dim: -1, selector: %view_2, val: 1.0})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_scatter_1 = async_compile.triton('triton_poi_fused_scatter_1', '''
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_scatter_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_scatter_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp5, xmask)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sp/csp33tdau3u6kxij34d7qzbf7gmibqxyn3wbjxwvmv7kteb7mr6x.py
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [hard_probs], Original ATen: [aten.mean]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hard_probs => mean
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%view_4, [0]), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_2 = async_compile.triton('triton_per_fused_mean_2', '''
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_2(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*r1), xmask, other=0.0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/y3/cy3j25w2wdpndzbohadmflimj2e7xuvz7y5rkghbqtduyx7w6srh.py
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [hard_probs, add, log, mul, sum_1, neg, exp, sum_2], Original ATen: [aten.mean, aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   hard_probs => mean
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%view_4, [0]), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 1e-07), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, %log), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [-1]), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_1,), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%exp,), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_exp_log_mean_mul_neg_sum_3 = async_compile.triton('triton_poi_fused_add_exp_log_mean_mul_neg_sum_3', '''
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_exp_log_mean_mul_neg_sum_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_exp_log_mean_mul_neg_sum_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (1))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (2))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (3))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 16.0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 / tmp2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-07
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.log(tmp5)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 * tmp6
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.log(tmp11)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 * tmp12
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 + tmp13
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 / tmp2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl_math.log(tmp18)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 * tmp19
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 + tmp20
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 / tmp2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.log(tmp25)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 * tmp26
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp21 + tmp27
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = -tmp28
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp30, None)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wh/cwhrn3s6nv4vwsj4juklzaejbr33dsgvadccconi5xw3xzfxd6mb.py
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => amax, exp_1, sub
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_5, [-1], True), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_5, %amax), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, avg_probs], Original ATen: [aten._softmax, aten.mean]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_probs => mean_1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div, sum_3
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_3), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=3] = call_function[target=torch.ops.aten.mean.dim](args = (%div, [0]), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_mean_5 = async_compile.triton('triton_per_fused__softmax_mean_5', '''
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_mean_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_mean_5(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*r1), xmask, other=0.0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*r1), None, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*r1), None, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*r1), None, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*r1), None, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(xmask, tmp9, 0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.sum(tmp11, 1)[:, None]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 16.0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 / tmp13
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp14, xmask)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/om/comddsxersv6ihuprx7isdfxwsadmdhttvxa3fr5ipbtyzi2s43b.py
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_1, log_1, mul_1, sum_3, neg_1, exp_1, sum_4], Original ATen: [aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp_1 => exp_2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_1 => log_1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_1 => neg_1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_5
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, 1e-07), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_1,), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean_1, %log_1), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [-1]), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_4,), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_2 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg_1,), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%exp_2,), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_exp_log_mul_neg_sum_6 = async_compile.triton('triton_poi_fused_add_exp_log_mul_neg_sum_6', '''
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_exp_log_mul_neg_sum_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_exp_log_mul_neg_sum_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (2))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (3))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1e-07
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.log(tmp3)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 * tmp4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.log(tmp8)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 * tmp9
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 + tmp10
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl_math.log(tmp14)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp11 + tmp16
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl_math.log(tmp20)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 * tmp21
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp17 + tmp22
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = -tmp23
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp25, None)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lm/clmmtz6if5l5w2fsoacg7hkifnejxyssfrxk5utnjr6w55qvdtwj.py
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.sum]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => sum_6
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_9, [-2]), kwargs = {})
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_sum_7 = async_compile.triton('triton_poi_fused_sum_7', '''
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sum_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_sum_7(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (4 + x0), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (8 + x0), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (12 + x0), xmask, eviction_policy='evict_last')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp14, xmask)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 4, 4), (16, 4, 1))
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.addmm]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_3, reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, ), (1, ), torch.int64)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_0.run(buf0, buf1, 16, grid=grid(16), stream=stream0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scatter_], Original ATen: [aten.scatter]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_scatter_1.run(buf1, buf2, 64, grid=grid(64), stream=stream0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 4), (4, 1), torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [hard_probs], Original ATen: [aten.mean]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_2.run(buf2, buf3, 4, 16, grid=grid(4), stream=stream0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((), (), torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [hard_probs, add, log, mul, sum_1, neg, exp, sum_2], Original ATen: [aten.mean, aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_exp_log_mean_mul_neg_sum_3.run(buf3, buf8, 1, grid=grid(1), stream=stream0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((16, 1, 4), (4, 64, 1), torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf0, buf4, 64, grid=grid(64), stream=stream0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf3; del buf3  # reuse
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, avg_probs], Original ATen: [aten._softmax, aten.mean]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_mean_5.run(buf6, buf4, 4, 16, grid=grid(4), stream=stream0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((), (), torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_1, log_1, mul_1, sum_3, neg_1, exp_1, sum_4], Original ATen: [aten.add, aten.log, aten.mul, aten.sum, aten.neg, aten.exp]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_exp_log_mul_neg_sum_6.run(buf6, buf9, 1, grid=grid(1), stream=stream0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf4, (16, 1, 4), (4, 4, 1), 0); del buf4  # reuse
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.sum]
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_sum_7.run(buf2, primals_4, buf7, 64, grid=grid(64), stream=stream0)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, buf9, reinterpret_tensor(buf7, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), buf0, buf2, buf6, )
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:24:14.030000 3989628 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:24:14.040000 3989628 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/au/caucwsjm7obg5rstadbzj4t3nskgzopcovjsgn2eyoj5lty5lshg.py
