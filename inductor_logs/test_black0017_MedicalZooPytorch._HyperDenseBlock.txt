V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['35_forward']
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2p/c2pnaow2r7kh6idjv3ubtozkkithzdmbp3zvxxrwef6cqhxlwtoc.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_1, mul_1, mul_2, sub
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %unsqueeze_2), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_5), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_8), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_11), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_0', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 4)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qc/cqconbk766scfe3r7uyzga6xajtf52ge46ziadqqkd4kgz3emz6d.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, input_5, input_6], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => cat
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_3, mul_4, mul_5, sub_1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => relu_1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_1, %convolution], 1), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat, %unsqueeze_14), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_17), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_20), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_23), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 7424
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 29)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1856
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 256*x2), tmp4 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 29, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-4) + x1) + 1600*x2), tmp6 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2f/c2fb7dfcs27cewvxkvqwlulp4zk3feunmmr7tjsx7mqsgnkt4gqs.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, input_9, input_10], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => relu_2
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => cat_1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_5, mul_7, mul_8, sub_2
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat, %convolution_1], 1), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_1, %unsqueeze_26), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_29), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_32), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_35), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_5,), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 13824
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 54)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 3456
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 29, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 1856*x2), tmp4 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 54, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-29) + x1) + 1600*x2), tmp6 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fs/cfsi4zagyvryslj4g4uyvukuzlhjheyl2ssljcytcfxbm7djej6r.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_12, input_13, input_14], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => cat_2
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_13 => add_7, mul_10, mul_11, sub_3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_14 => relu_3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_1, %convolution_2], 1), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_2, %unsqueeze_38), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_41), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_44), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_47), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_7,), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 20224
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 79)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 5056
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 54, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 3456*x2), tmp4 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 79, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-54) + x1) + 1600*x2), tmp6 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tq/ctqzx4q5ksukx42vydp4sm3etuys3sgryv76b6vhy4u66kpck6of.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_16, input_17, input_18], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_16 => cat_3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_17 => add_9, mul_13, mul_14, sub_4
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => relu_4
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_3 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_2, %convolution_3], 1), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_3, %unsqueeze_50), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_53), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_56), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_59), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_9,), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 33024
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 129)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 8256
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 79, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 5056*x2), tmp4 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 129, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-79) + x1) + 3200*x2), tmp6 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5k/c5kyj7jbz3kbcwcy6iow7pnbv7aocgoxnr5ca5pehsoneenqvtor.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_20, input_21, input_22], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_20 => cat_4
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_21 => add_11, mul_16, mul_17, sub_5
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_22 => relu_5
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_4 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_3, %convolution_4], 1), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_4, %unsqueeze_62), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_65), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_16, %unsqueeze_68), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_17, %unsqueeze_71), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_11,), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 45824
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 179)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 11456
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 129, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 8256*x2), tmp4 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 179, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-129) + x1) + 3200*x2), tmp6 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ar/caroeoto2d62otmhjxm6lpiu2v2vtvgpwduaoeyvuxldby6amglo.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_24, input_25, input_26], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_24 => cat_5
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_25 => add_13, mul_19, mul_20, sub_6
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_26 => relu_6
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_5 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_4, %convolution_5], 1), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_5, %unsqueeze_74), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %unsqueeze_77), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_19, %unsqueeze_80), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_83), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_6 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_13,), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 58624
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 229)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 14656
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 179, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 11456*x2), tmp4 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 229, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-179) + x1) + 3200*x2), tmp6 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i2/ci2cksbs6hwa3cmel2ysprvfptffj242stqhvogdca5lvvhpggzy.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_28, input_29, input_30], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_28 => cat_6
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_29 => add_15, mul_22, mul_23, sub_7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_30 => relu_7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_6 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_5, %convolution_6], 1), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_6, %unsqueeze_86), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_89), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_22, %unsqueeze_92), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_23, %unsqueeze_95), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_7 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_15,), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 77824
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 304)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 19456
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 229, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 14656*x2), tmp4, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 304, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-229) + x1) + 4800*x2), tmp6, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ki/ckim7ua627l66nbcbrmtcb6m2n333zd2z4riq7sdawyonr3x3iok.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_32, input_33, input_34], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_32 => cat_7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_33 => add_17, mul_25, mul_26, sub_8
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_34 => relu_8
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_7 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_6, %convolution_7], 1), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_7, %unsqueeze_98), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %unsqueeze_101), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_25, %unsqueeze_104), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_26, %unsqueeze_107), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_17,), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 97024
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 379)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 24256
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 304, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 19456*x2), tmp4 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 379, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-304) + x1) + 4800*x2), tmp6 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7n/c7nklon452oxhfxafof4p32g5ybelxydxldqlwkmp3seybr55ess.py
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_36], Original ATen: [aten.cat]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_36 => cat_8
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_8 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_7, %convolution_8], 1), kwargs = {})
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_9 = async_compile.triton('triton_poi_fused_cat_9', '''
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_9(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 116224
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 454)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 29056
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 379, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 24256*x2), tmp4 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 454, tl.int64)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-379) + x1) + 4800*x2), tmp6 & xmask, other=0.0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46 = args
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (25, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (29, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (29, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (29, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (29, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (25, 29, 3, 3, 3), (783, 27, 9, 3, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (54, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (54, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (54, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (54, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (25, 54, 3, 3, 3), (1458, 27, 9, 3, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (79, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (79, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (79, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (79, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (50, 79, 3, 3, 3), (2133, 27, 9, 3, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (129, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (129, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (129, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (129, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (50, 129, 3, 3, 3), (3483, 27, 9, 3, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (179, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (179, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (179, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (179, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (50, 179, 3, 3, 3), (4833, 27, 9, 3, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (229, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (229, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (229, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (229, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (75, 229, 3, 3, 3), (6183, 27, 9, 3, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (304, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (304, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (304, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (304, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (75, 304, 3, 3, 3), (8208, 27, 9, 3, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (379, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (379, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (379, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (379, ), (1, ))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (75, 379, 3, 3, 3), (10233, 27, 9, 3, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_0.run(primals_1, primals_2, primals_3, primals_4, primals_5, buf0, 1024, grid=grid(1024), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_6, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 25, 4, 4, 4), (1600, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 29, 4, 4, 4), (1856, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 29, 4, 4, 4), (1856, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, input_5, input_6], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1.run(primals_1, buf1, primals_7, primals_8, primals_9, primals_10, buf2, buf3, 7424, grid=grid(7424), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_11, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 25, 4, 4, 4), (1600, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 54, 4, 4, 4), (3456, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 54, 4, 4, 4), (3456, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, input_9, input_10], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2.run(buf2, buf4, primals_12, primals_13, primals_14, primals_15, buf5, buf6, 13824, grid=grid(13824), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf6, primals_16, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 25, 4, 4, 4), (1600, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 79, 4, 4, 4), (5056, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 79, 4, 4, 4), (5056, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12, input_13, input_14], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3.run(buf5, buf7, primals_17, primals_18, primals_19, primals_20, buf8, buf9, 20224, grid=grid(20224), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_20
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15], Original ATen: [aten.convolution]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_21, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 50, 4, 4, 4), (3200, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 129, 4, 4, 4), (8256, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 129, 4, 4, 4), (8256, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_16, input_17, input_18], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4.run(buf8, buf10, primals_22, primals_23, primals_24, primals_25, buf11, buf12, 33024, grid=grid(33024), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_25
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_19], Original ATen: [aten.convolution]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, primals_26, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 50, 4, 4, 4), (3200, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 179, 4, 4, 4), (11456, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 179, 4, 4, 4), (11456, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_20, input_21, input_22], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5.run(buf11, buf13, primals_27, primals_28, primals_29, primals_30, buf14, buf15, 45824, grid=grid(45824), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_30
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_23], Original ATen: [aten.convolution]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, primals_31, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 50, 4, 4, 4), (3200, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 229, 4, 4, 4), (14656, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 229, 4, 4, 4), (14656, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_24, input_25, input_26], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6.run(buf14, buf16, primals_32, primals_33, primals_34, primals_35, buf17, buf18, 58624, grid=grid(58624), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_35
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_27], Original ATen: [aten.convolution]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf18, primals_36, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 75, 4, 4, 4), (4800, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 304, 4, 4, 4), (19456, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 304, 4, 4, 4), (19456, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_28, input_29, input_30], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7.run(buf17, buf19, primals_37, primals_38, primals_39, primals_40, buf20, buf21, 77824, grid=grid(77824), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf19
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_40
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_31], Original ATen: [aten.convolution]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, primals_41, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 75, 4, 4, 4), (4800, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 379, 4, 4, 4), (24256, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 379, 4, 4, 4), (24256, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32, input_33, input_34], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8.run(buf20, buf22, primals_42, primals_43, primals_44, primals_45, buf23, buf24, 97024, grid=grid(97024), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf22
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_45
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_35], Original ATen: [aten.convolution]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf24, primals_46, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (4, 75, 4, 4, 4), (4800, 64, 16, 4, 1))
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 454, 4, 4, 4), (29056, 64, 16, 4, 1), torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_36], Original ATen: [aten.cat]
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_9.run(buf23, buf25, buf26, 116224, grid=grid(116224), stream=stream0)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf26, primals_1, primals_2, primals_3, primals_6, primals_7, primals_8, primals_9, primals_11, primals_12, primals_13, primals_14, primals_16, primals_17, primals_18, primals_19, primals_21, primals_22, primals_23, primals_24, primals_26, primals_27, primals_28, primals_29, primals_31, primals_32, primals_33, primals_34, primals_36, primals_37, primals_38, primals_39, primals_41, primals_42, primals_43, primals_44, primals_46, buf0, buf2, buf3, buf5, buf6, buf8, buf9, buf11, buf12, buf14, buf15, buf17, buf18, buf20, buf21, buf23, buf24, )
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((25, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((29, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((29, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((29, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((29, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((25, 29, 3, 3, 3), (783, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((54, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((54, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((54, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((54, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((25, 54, 3, 3, 3), (1458, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((79, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((79, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((79, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((79, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((50, 79, 3, 3, 3), (2133, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((129, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((129, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((129, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((129, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((50, 129, 3, 3, 3), (3483, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((179, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((179, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((179, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((179, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((50, 179, 3, 3, 3), (4833, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((229, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((229, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((229, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((229, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((75, 229, 3, 3, 3), (6183, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((75, 304, 3, 3, 3), (8208, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((379, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((379, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((379, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((379, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((75, 379, 3, 3, 3), (10233, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46])
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:11:23.127000 1209099 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:11:23.148000 1209099 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/be/cbea5txwh3o55hrmcenmj6ar5azbrmfq6kbimmqlz3lmqgt2cxq4.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['35_forward']
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2p/c2pnaow2r7kh6idjv3ubtozkkithzdmbp3zvxxrwef6cqhxlwtoc.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_1, mul_1, mul_2, sub
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %unsqueeze_2), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_5), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_8), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_11), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_0', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 4)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qc/cqconbk766scfe3r7uyzga6xajtf52ge46ziadqqkd4kgz3emz6d.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, input_5, input_6], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => cat
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_3, mul_4, mul_5, sub_1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => relu_1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_1, %convolution], 1), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat, %unsqueeze_14), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_17), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_20), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_23), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 7424
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 29)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1856
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 256*x2), tmp4 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 29, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-4) + x1) + 1600*x2), tmp6 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2f/c2fb7dfcs27cewvxkvqwlulp4zk3feunmmr7tjsx7mqsgnkt4gqs.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, input_9, input_10], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => relu_2
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => cat_1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_5, mul_7, mul_8, sub_2
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat, %convolution_1], 1), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_1, %unsqueeze_26), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_29), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_32), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_35), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_5,), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 13824
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 54)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 3456
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 29, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 1856*x2), tmp4 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 54, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-29) + x1) + 1600*x2), tmp6 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fs/cfsi4zagyvryslj4g4uyvukuzlhjheyl2ssljcytcfxbm7djej6r.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_12, input_13, input_14], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => cat_2
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_13 => add_7, mul_10, mul_11, sub_3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_14 => relu_3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_1, %convolution_2], 1), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_2, %unsqueeze_38), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_41), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_44), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_47), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_7,), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 20224
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 79)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 5056
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 54, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 3456*x2), tmp4 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 79, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-54) + x1) + 1600*x2), tmp6 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tq/ctqzx4q5ksukx42vydp4sm3etuys3sgryv76b6vhy4u66kpck6of.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_16, input_17, input_18], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_16 => cat_3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_17 => add_9, mul_13, mul_14, sub_4
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => relu_4
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_3 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_2, %convolution_3], 1), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_3, %unsqueeze_50), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_53), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_56), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_59), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_9,), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 33024
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 129)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 8256
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 79, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 5056*x2), tmp4 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 129, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-79) + x1) + 3200*x2), tmp6 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5k/c5kyj7jbz3kbcwcy6iow7pnbv7aocgoxnr5ca5pehsoneenqvtor.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_20, input_21, input_22], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_20 => cat_4
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_21 => add_11, mul_16, mul_17, sub_5
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_22 => relu_5
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_4 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_3, %convolution_4], 1), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_4, %unsqueeze_62), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_65), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_16, %unsqueeze_68), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_17, %unsqueeze_71), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_11,), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 45824
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 179)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 11456
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 129, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 8256*x2), tmp4 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 179, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-129) + x1) + 3200*x2), tmp6 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ar/caroeoto2d62otmhjxm6lpiu2v2vtvgpwduaoeyvuxldby6amglo.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_24, input_25, input_26], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_24 => cat_5
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_25 => add_13, mul_19, mul_20, sub_6
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_26 => relu_6
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_5 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_4, %convolution_5], 1), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_5, %unsqueeze_74), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %unsqueeze_77), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_19, %unsqueeze_80), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_83), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_6 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_13,), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 58624
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 229)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 14656
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 179, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 11456*x2), tmp4 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 229, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-179) + x1) + 3200*x2), tmp6 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i2/ci2cksbs6hwa3cmel2ysprvfptffj242stqhvogdca5lvvhpggzy.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_28, input_29, input_30], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_28 => cat_6
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_29 => add_15, mul_22, mul_23, sub_7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_30 => relu_7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_6 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_5, %convolution_6], 1), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_6, %unsqueeze_86), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_89), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_22, %unsqueeze_92), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_23, %unsqueeze_95), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_7 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_15,), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 77824
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 304)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 19456
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 229, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 14656*x2), tmp4, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 304, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-229) + x1) + 4800*x2), tmp6, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ki/ckim7ua627l66nbcbrmtcb6m2n333zd2z4riq7sdawyonr3x3iok.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_32, input_33, input_34], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_32 => cat_7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_33 => add_17, mul_25, mul_26, sub_8
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_34 => relu_8
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_7 : [num_users=3] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_6, %convolution_7], 1), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat_7, %unsqueeze_98), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %unsqueeze_101), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_25, %unsqueeze_104), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_26, %unsqueeze_107), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_17,), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 97024
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 379)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 24256
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 304, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 19456*x2), tmp4 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 379, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-304) + x1) + 4800*x2), tmp6 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp27, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7n/c7nklon452oxhfxafof4p32g5ybelxydxldqlwkmp3seybr55ess.py
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_36], Original ATen: [aten.cat]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_36 => cat_8
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_8 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%cat_7, %convolution_8], 1), kwargs = {})
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_9 = async_compile.triton('triton_poi_fused_cat_9', '''
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_9(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 116224
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 454)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 29056
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 379, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*(x1) + 24256*x2), tmp4 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 454, tl.int64)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 64*((-379) + x1) + 4800*x2), tmp6 & xmask, other=0.0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46 = args
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (25, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (29, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (29, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (29, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (29, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (25, 29, 3, 3, 3), (783, 27, 9, 3, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (54, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (54, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (54, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (54, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (25, 54, 3, 3, 3), (1458, 27, 9, 3, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (79, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (79, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (79, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (79, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (50, 79, 3, 3, 3), (2133, 27, 9, 3, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (129, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (129, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (129, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (129, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (50, 129, 3, 3, 3), (3483, 27, 9, 3, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (179, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (179, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (179, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (179, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (50, 179, 3, 3, 3), (4833, 27, 9, 3, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (229, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (229, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (229, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (229, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (75, 229, 3, 3, 3), (6183, 27, 9, 3, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (304, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (304, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (304, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (304, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (75, 304, 3, 3, 3), (8208, 27, 9, 3, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (379, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (379, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (379, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (379, ), (1, ))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (75, 379, 3, 3, 3), (10233, 27, 9, 3, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_0.run(primals_1, primals_2, primals_3, primals_4, primals_5, buf0, 1024, grid=grid(1024), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_6, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 25, 4, 4, 4), (1600, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 29, 4, 4, 4), (1856, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 29, 4, 4, 4), (1856, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, input_5, input_6], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_1.run(primals_1, buf1, primals_7, primals_8, primals_9, primals_10, buf2, buf3, 7424, grid=grid(7424), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_11, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 25, 4, 4, 4), (1600, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 54, 4, 4, 4), (3456, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 54, 4, 4, 4), (3456, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, input_9, input_10], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_2.run(buf2, buf4, primals_12, primals_13, primals_14, primals_15, buf5, buf6, 13824, grid=grid(13824), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf6, primals_16, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 25, 4, 4, 4), (1600, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 79, 4, 4, 4), (5056, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 79, 4, 4, 4), (5056, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12, input_13, input_14], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_3.run(buf5, buf7, primals_17, primals_18, primals_19, primals_20, buf8, buf9, 20224, grid=grid(20224), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_20
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15], Original ATen: [aten.convolution]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_21, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 50, 4, 4, 4), (3200, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 129, 4, 4, 4), (8256, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 129, 4, 4, 4), (8256, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_16, input_17, input_18], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4.run(buf8, buf10, primals_22, primals_23, primals_24, primals_25, buf11, buf12, 33024, grid=grid(33024), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_25
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_19], Original ATen: [aten.convolution]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, primals_26, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 50, 4, 4, 4), (3200, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 179, 4, 4, 4), (11456, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 179, 4, 4, 4), (11456, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_20, input_21, input_22], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_5.run(buf11, buf13, primals_27, primals_28, primals_29, primals_30, buf14, buf15, 45824, grid=grid(45824), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_30
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_23], Original ATen: [aten.convolution]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, primals_31, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 50, 4, 4, 4), (3200, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 229, 4, 4, 4), (14656, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 229, 4, 4, 4), (14656, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_24, input_25, input_26], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_6.run(buf14, buf16, primals_32, primals_33, primals_34, primals_35, buf17, buf18, 58624, grid=grid(58624), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_35
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_27], Original ATen: [aten.convolution]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf18, primals_36, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 75, 4, 4, 4), (4800, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 304, 4, 4, 4), (19456, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 304, 4, 4, 4), (19456, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_28, input_29, input_30], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7.run(buf17, buf19, primals_37, primals_38, primals_39, primals_40, buf20, buf21, 77824, grid=grid(77824), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf19
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_40
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_31], Original ATen: [aten.convolution]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, primals_41, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 75, 4, 4, 4), (4800, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 379, 4, 4, 4), (24256, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 379, 4, 4, 4), (24256, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32, input_33, input_34], Original ATen: [aten.cat, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_8.run(buf20, buf22, primals_42, primals_43, primals_44, primals_45, buf23, buf24, 97024, grid=grid(97024), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf22
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_45
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_35], Original ATen: [aten.convolution]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf24, primals_46, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (4, 75, 4, 4, 4), (4800, 64, 16, 4, 1))
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 454, 4, 4, 4), (29056, 64, 16, 4, 1), torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_36], Original ATen: [aten.cat]
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_9.run(buf23, buf25, buf26, 116224, grid=grid(116224), stream=stream0)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf26, primals_1, primals_2, primals_3, primals_6, primals_7, primals_8, primals_9, primals_11, primals_12, primals_13, primals_14, primals_16, primals_17, primals_18, primals_19, primals_21, primals_22, primals_23, primals_24, primals_26, primals_27, primals_28, primals_29, primals_31, primals_32, primals_33, primals_34, primals_36, primals_37, primals_38, primals_39, primals_41, primals_42, primals_43, primals_44, primals_46, buf0, buf2, buf3, buf5, buf6, buf8, buf9, buf11, buf12, buf14, buf15, buf17, buf18, buf20, buf21, buf23, buf24, )
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((25, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((29, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((29, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((29, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((29, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((25, 29, 3, 3, 3), (783, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((54, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((54, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((54, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((54, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((25, 54, 3, 3, 3), (1458, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((79, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((79, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((79, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((79, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((50, 79, 3, 3, 3), (2133, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((129, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((129, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((129, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((129, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((50, 129, 3, 3, 3), (3483, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((179, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((179, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((179, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((179, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((50, 179, 3, 3, 3), (4833, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((229, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((229, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((229, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((229, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((75, 229, 3, 3, 3), (6183, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((75, 304, 3, 3, 3), (8208, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((379, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((379, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((379, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((379, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((75, 379, 3, 3, 3), (10233, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46])
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:00:52.409000 2524045 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:00:52.428000 2524045 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/3p/c3pqdmfoypoulw4vdyyrc4lz22nr4o4h3dbyfjd4fdsc3ubfcqtu.py
