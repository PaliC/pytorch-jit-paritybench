V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['9_forward']
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ux/cuxhyjwp25m3ocg2u56w37snqonnn463ffvxxsowvfkf3vrtkg7g.py
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [setitem, setitem_1, setitem_2, setitem_3], Original ATen: [aten.copy]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => copy
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => copy_1
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_2 => copy_2
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_3 => copy_3
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select, %getitem), kwargs = {})
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default : [num_users=2] = call_function[target=torch.ops.aten.select_scatter.default](args = (%empty, %copy, 1, 0), kwargs = {})
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_1 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select_5, %getitem_2), kwargs = {})
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_1 : [num_users=2] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default, %copy_1, 1, 1), kwargs = {})
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_2 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select_10, %getitem_4), kwargs = {})
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_2 : [num_users=2] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_1, %copy_2, 1, 2), kwargs = {})
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_3 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select_15, %getitem_6), kwargs = {})
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_3 : [num_users=1] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_2, %copy_3, 1, 3), kwargs = {})
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_0 = async_compile.triton('triton_poi_fused_copy_0', '''
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 3, tl.int32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 2, tl.int32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 == tmp4
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 == tmp7
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 == tmp10
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = float("nan")
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp11, tmp12, tmp13)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp8, tmp9, tmp14)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp5, tmp6, tmp15)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp2, tmp3, tmp16)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (12, 4), (4, 1))
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (12, 4), (4, 1))
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (12, ), (1, ))
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (12, ), (1, ))
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fcn_latent], Original ATen: [aten.addmm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_3, primals_1, reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf0)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 12), (12, 1), torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret], Original ATen: [aten.mm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, reinterpret_tensor(primals_4, (4, 12), (1, 4), 0), out=buf2)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 12), (12, 1), torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret], Original ATen: [aten.mm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, reinterpret_tensor(primals_5, (4, 12), (1, 4), 0), out=buf3)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret], Original ATen: [aten._thnn_fused_gru_cell]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = torch.ops.aten._thnn_fused_gru_cell.default(buf2, buf3, buf0, primals_6, primals_7)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4[0]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4[1]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf3; del buf3  # reuse
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten.mm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf5, reinterpret_tensor(primals_4, (4, 12), (1, 4), 0), out=buf7)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf2; del buf2  # reuse
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten.mm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf5, reinterpret_tensor(primals_5, (4, 12), (1, 4), 0), out=buf8)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten._thnn_fused_gru_cell]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = torch.ops.aten._thnn_fused_gru_cell.default(buf7, buf8, buf5, primals_6, primals_7)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9[0]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf9[1]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf8; del buf8  # reuse
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.mm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf10, reinterpret_tensor(primals_4, (4, 12), (1, 4), 0), out=buf12)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf7; del buf7  # reuse
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.mm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf10, reinterpret_tensor(primals_5, (4, 12), (1, 4), 0), out=buf13)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten._thnn_fused_gru_cell]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = torch.ops.aten._thnn_fused_gru_cell.default(buf12, buf13, buf10, primals_6, primals_7)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf14[0]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf14[1]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf13; del buf13  # reuse
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_3], Original ATen: [aten.mm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf15, reinterpret_tensor(primals_4, (4, 12), (1, 4), 0), out=buf17)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf12; del buf12  # reuse
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_3], Original ATen: [aten.mm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf15, reinterpret_tensor(primals_5, (4, 12), (1, 4), 0), out=buf18)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_3], Original ATen: [aten._thnn_fused_gru_cell]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = torch.ops.aten._thnn_fused_gru_cell.default(buf17, buf18, buf15, primals_6, primals_7)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf19[0]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf19[1]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf19
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [setitem, setitem_1, setitem_2, setitem_3], Original ATen: [aten.copy]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_0.run(buf20, buf15, buf10, buf5, buf22, 64, grid=grid(64), stream=stream0)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reconstruction], Original ATen: [aten.addmm]
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_9, reinterpret_tensor(buf22, (16, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf23)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf23, (4, 4, 4), (16, 4, 1), 0), buf0, primals_1, buf0, buf5, buf6, buf10, buf11, buf15, buf16, buf21, reinterpret_tensor(buf22, (16, 4), (4, 1), 0), primals_8, primals_5, primals_4, )
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((12, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((12, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:27:51.477000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:51.480000 4039611 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/lh/clhuvlb6rsn7naiw44rc5lhck6apicgdttovqvc3ttk2mwqzksmg.py
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['9_forward']
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ux/cuxhyjwp25m3ocg2u56w37snqonnn463ffvxxsowvfkf3vrtkg7g.py
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [setitem, setitem_1, setitem_2, setitem_3], Original ATen: [aten.copy]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => copy
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => copy_1
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_2 => copy_2
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_3 => copy_3
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select, %getitem), kwargs = {})
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default : [num_users=2] = call_function[target=torch.ops.aten.select_scatter.default](args = (%empty, %copy, 1, 0), kwargs = {})
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_1 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select_5, %getitem_2), kwargs = {})
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_1 : [num_users=2] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default, %copy_1, 1, 1), kwargs = {})
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_2 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select_10, %getitem_4), kwargs = {})
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_2 : [num_users=2] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_1, %copy_2, 1, 2), kwargs = {})
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_3 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select_15, %getitem_6), kwargs = {})
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_3 : [num_users=1] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_2, %copy_3, 1, 3), kwargs = {})
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_0 = async_compile.triton('triton_poi_fused_copy_0', '''
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 3, tl.int32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 2, tl.int32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 == tmp4
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 == tmp7
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 == tmp10
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = float("nan")
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp11, tmp12, tmp13)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp8, tmp9, tmp14)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp5, tmp6, tmp15)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp2, tmp3, tmp16)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (12, 4), (4, 1))
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (12, 4), (4, 1))
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (12, ), (1, ))
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (12, ), (1, ))
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fcn_latent], Original ATen: [aten.addmm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_3, primals_1, reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf0)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 12), (12, 1), torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret], Original ATen: [aten.mm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, reinterpret_tensor(primals_4, (4, 12), (1, 4), 0), out=buf2)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 12), (12, 1), torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret], Original ATen: [aten.mm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, reinterpret_tensor(primals_5, (4, 12), (1, 4), 0), out=buf3)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret], Original ATen: [aten._thnn_fused_gru_cell]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = torch.ops.aten._thnn_fused_gru_cell.default(buf2, buf3, buf0, primals_6, primals_7)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4[0]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4[1]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf3; del buf3  # reuse
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten.mm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf5, reinterpret_tensor(primals_4, (4, 12), (1, 4), 0), out=buf7)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf2; del buf2  # reuse
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten.mm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf5, reinterpret_tensor(primals_5, (4, 12), (1, 4), 0), out=buf8)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten._thnn_fused_gru_cell]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = torch.ops.aten._thnn_fused_gru_cell.default(buf7, buf8, buf5, primals_6, primals_7)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9[0]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf9[1]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf8; del buf8  # reuse
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.mm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf10, reinterpret_tensor(primals_4, (4, 12), (1, 4), 0), out=buf12)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf7; del buf7  # reuse
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.mm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf10, reinterpret_tensor(primals_5, (4, 12), (1, 4), 0), out=buf13)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten._thnn_fused_gru_cell]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = torch.ops.aten._thnn_fused_gru_cell.default(buf12, buf13, buf10, primals_6, primals_7)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf14[0]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf14[1]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf13; del buf13  # reuse
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_3], Original ATen: [aten.mm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf15, reinterpret_tensor(primals_4, (4, 12), (1, 4), 0), out=buf17)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf12; del buf12  # reuse
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_3], Original ATen: [aten.mm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf15, reinterpret_tensor(primals_5, (4, 12), (1, 4), 0), out=buf18)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_3], Original ATen: [aten._thnn_fused_gru_cell]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = torch.ops.aten._thnn_fused_gru_cell.default(buf17, buf18, buf15, primals_6, primals_7)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf19[0]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf19[1]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf19
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [setitem, setitem_1, setitem_2, setitem_3], Original ATen: [aten.copy]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_0.run(buf20, buf15, buf10, buf5, buf22, 64, grid=grid(64), stream=stream0)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reconstruction], Original ATen: [aten.addmm]
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_9, reinterpret_tensor(buf22, (16, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf23)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf23, (4, 4, 4), (16, 4, 1), 0), buf0, primals_1, buf0, buf5, buf6, buf10, buf11, buf15, buf16, buf21, reinterpret_tensor(buf22, (16, 4), (4, 1), 0), primals_8, primals_5, primals_4, )
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((12, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((12, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:16:45.075000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:45.078000 1295092 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/6s/c6szmmjkuj7ibcouu2g5ejffgxcz4ufof4rev67mekdrx4twoghj.py
