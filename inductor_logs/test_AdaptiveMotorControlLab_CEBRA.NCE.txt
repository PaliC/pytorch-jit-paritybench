V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yd/cydavr7o37sj42ljox7ft2nfqs2gmmpw3xwabakkxfs6jw6fw2l6.py
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [align, pos_dist, log_sigmoid_1, neg_dist, neg, uniform, mul, add], Original ATen: [aten.log_sigmoid_forward, aten.div, aten.neg, aten.mean, aten.mul, aten.add]
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   align => abs_1, exp, full_default, log1p, minimum, neg, sub
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_sigmoid_1 => abs_2, exp_1, full_default_1, log1p_1, minimum_1, neg_2, sub_1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg_1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_dist => div_1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos_dist => div
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   uniform => mean
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%view_3, 1.0), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default, %div), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%div,), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_1,), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %log1p), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%view_7, 1.0), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=2] = call_function[target=torch.ops.aten.neg.default](args = (%div_1,), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum_1 : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default_1, %neg_1), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_2 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%neg_1,), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_2 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_2,), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg_2,), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p_1 : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum_1, %log1p_1), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%sub_1, [1]), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub, %mul), kwargs = {})
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0 = async_compile.triton('triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0', '''
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0(in_out_ptr0, in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.minimum(tmp3, tmp2)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl_math.abs(tmp2)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = -tmp5
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.log1p(tmp7)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 - tmp8
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = -tmp11
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp3, tmp12)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.abs(tmp12)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = -tmp14
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.exp(tmp15)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.log1p(tmp16)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 - tmp17
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = -tmp20
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.minimum(tmp3, tmp21)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl_math.abs(tmp21)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = -tmp23
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.log1p(tmp25)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp22 - tmp26
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp18 + tmp27
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = -tmp30
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.minimum(tmp3, tmp31)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl_math.abs(tmp31)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = -tmp33
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.exp(tmp34)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = libdevice.log1p(tmp35)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp32 - tmp36
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp28 + tmp37
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 * tmp1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = -tmp40
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.minimum(tmp3, tmp41)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl_math.abs(tmp41)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = -tmp43
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl_math.exp(tmp44)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = libdevice.log1p(tmp45)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp42 - tmp46
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp38 + tmp47
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 4.0
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 / tmp49
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 * tmp1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp9 + tmp51
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp9, xmask)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp50, xmask)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp52, xmask)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4), (4, 1))
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 1), (1, 1, 1), torch.float32)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(arg1_1, (4, 1, 4), (4, 4, 1), 0), reinterpret_tensor(arg0_1, (4, 4, 1), (4, 1, 1), 0), out=buf0)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum_1], Original ATen: [aten.bmm]
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(arg1_1, (1, 4, 4), (16, 4, 1), 0), reinterpret_tensor(arg2_1, (1, 4, 4), (0, 1, 4), 0), out=buf2)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, ), (1, ), 0); del buf0  # reuse
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [align, pos_dist, log_sigmoid_1, neg_dist, neg, uniform, mul, add], Original ATen: [aten.log_sigmoid_forward, aten.div, aten.neg, aten.mean, aten.mul, aten.add]
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0.run(buf1, buf2, buf3, buf4, 4, grid=grid(4), stream=stream0)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, buf1, buf3, )
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:26:05.664000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:05.666000 3465118 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/rt/crtkhargvhz6dsvpfrf42k5xb5sss2dzp5qlqqspgxjat5acno26.py
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yd/cydavr7o37sj42ljox7ft2nfqs2gmmpw3xwabakkxfs6jw6fw2l6.py
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [align, pos_dist, log_sigmoid_1, neg_dist, neg, uniform, mul, add], Original ATen: [aten.log_sigmoid_forward, aten.div, aten.neg, aten.mean, aten.mul, aten.add]
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   align => abs_1, exp, full_default, log1p, minimum, neg, sub
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_sigmoid_1 => abs_2, exp_1, full_default_1, log1p_1, minimum_1, neg_2, sub_1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg_1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_dist => div_1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos_dist => div
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   uniform => mean
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%view_3, 1.0), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default, %div), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%div,), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_1,), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %log1p), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%view_7, 1.0), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=2] = call_function[target=torch.ops.aten.neg.default](args = (%div_1,), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum_1 : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default_1, %neg_1), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_2 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%neg_1,), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_2 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_2,), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg_2,), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p_1 : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum_1, %log1p_1), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%sub_1, [1]), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub, %mul), kwargs = {})
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0 = async_compile.triton('triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0', '''
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0(in_out_ptr0, in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.minimum(tmp3, tmp2)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl_math.abs(tmp2)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = -tmp5
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.log1p(tmp7)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 - tmp8
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = -tmp11
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp3, tmp12)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.abs(tmp12)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = -tmp14
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.exp(tmp15)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.log1p(tmp16)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 - tmp17
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = -tmp20
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.minimum(tmp3, tmp21)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl_math.abs(tmp21)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = -tmp23
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.log1p(tmp25)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp22 - tmp26
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp18 + tmp27
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = -tmp30
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.minimum(tmp3, tmp31)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl_math.abs(tmp31)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = -tmp33
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.exp(tmp34)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = libdevice.log1p(tmp35)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp32 - tmp36
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp28 + tmp37
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 * tmp1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = -tmp40
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.minimum(tmp3, tmp41)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl_math.abs(tmp41)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = -tmp43
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl_math.exp(tmp44)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = libdevice.log1p(tmp45)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp42 - tmp46
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp38 + tmp47
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 4.0
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 / tmp49
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 * tmp1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp9 + tmp51
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp9, xmask)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp50, xmask)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp52, xmask)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4), (4, 1))
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 1), (1, 1, 1), torch.float32)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(arg1_1, (4, 1, 4), (4, 4, 1), 0), reinterpret_tensor(arg0_1, (4, 4, 1), (4, 1, 1), 0), out=buf0)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum_1], Original ATen: [aten.bmm]
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(arg1_1, (1, 4, 4), (16, 4, 1), 0), reinterpret_tensor(arg2_1, (1, 4, 4), (0, 1, 4), 0), out=buf2)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, ), (1, ), 0); del buf0  # reuse
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [align, pos_dist, log_sigmoid_1, neg_dist, neg, uniform, mul, add], Original ATen: [aten.log_sigmoid_forward, aten.div, aten.neg, aten.mean, aten.mul, aten.add]
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_log_sigmoid_forward_mean_mul_neg_0.run(buf1, buf2, buf3, buf4, 4, grid=grid(4), stream=stream0)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, buf1, buf3, )
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:16:02.717000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:02.720000 2116845 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/nu/cnuzzhr5kqrlshowteqvwh6nzphyrovhxq3fpyizeoitam7eos73.py
