V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_forward']
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x6/cx6bvxvtvm36quxpvppzr64sxettuh7on4p2d4o6hbihulyvks5p.py
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => _unsafe_index, _unsafe_index_1
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_1, [None, None, %sub_1, None]), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %sub_1]), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_reflection_pad2d_0 = async_compile.triton('triton_poi_fused_reflection_pad2d_0', '''
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_reflection_pad2d_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_reflection_pad2d_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (15 + ((-1)*tl_math.abs((-3) + tl_math.abs((-1) + x0))) + ((-4)*tl_math.abs((-3) + tl_math.abs((-1) + x1))) + 16*x2), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ju/cju52p237ye273thyzsj7ihz26ys4pkfglwxzeplqzw2mssies6j.py
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_1, mul_1, mul_2, sub_4
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_3), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_1', '''
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3h/c3hv6s755qxefxk6rrd3dfclmfppqxg2uc36doxppkxi56uw5pi7.py
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => _unsafe_index_2, _unsafe_index_3
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %sub_1, None]), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_2, [None, None, None, %sub_1]), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_reflection_pad2d_2 = async_compile.triton('triton_poi_fused_reflection_pad2d_2', '''
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_reflection_pad2d_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_reflection_pad2d_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4608
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (15 + ((-1)*tl_math.abs((-3) + tl_math.abs((-1) + x0))) + ((-4)*tl_math.abs((-3) + tl_math.abs((-1) + x1))) + 16*x2), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/a2/ca2pamqw4usoqb27xjbzqpvxbc5qw5ytim5phbhvi3xk36t4pkbw.py
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7, input_8, input_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => add_3, mul_4, mul_5, sub_9
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => relu_1
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => _unsafe_index_4, _unsafe_index_5
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_11), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_1, [None, None, %sub_1, None]), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_4, [None, None, None, %sub_1]), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3', '''
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4608
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 36
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 36) % 32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (15 + ((-1)*tl_math.abs((-3) + tl_math.abs((-1) + x0))) + ((-4)*tl_math.abs((-3) + tl_math.abs((-1) + x1))) + 16*x4), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/w3/cw3axn3jywtfmnq6c6kbopofqkgwmzbtcqkql7uqrwr5snebzap5.py
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_5, mul_7, mul_8, sub_14
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => add_6
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_14 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_14, %unsqueeze_19), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu, %add_5), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_4', '''
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1e-05
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.sqrt(tmp6)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 / tmp7
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp3 * tmp11
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 + tmp16
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp17, xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/c7/cc7iiofio6bfybsgodfwefo57xavai2aciredorkitspcta6yogw.py
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_27, input_28, c, x], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.mean, aten.cat]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   c => mean
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_27 => add_15, mul_19, mul_20, sub_34
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_28 => add_16
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_34 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_6, %unsqueeze_49), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_34, %unsqueeze_51), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_19, %unsqueeze_53), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_55), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %add_15), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_16, [-1, -2], True), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_16, %expand], 1), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5 = async_compile.triton('triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5', '''
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 16},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 32
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + 16*x3), xmask, other=0.0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r2 + 16*x3), xmask, other=0.0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1e-05
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.sqrt(tmp6)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1, 1], 1, tl.int32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 / tmp7
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp3 * tmp11
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 + tmp16
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(xmask, tmp18, 0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.sum(tmp20, 1)[:, None]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 16.0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 / tmp22
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r2 + 16*x0 + 1024*x1), tmp17, xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r2 + 16*x0 + 1024*x1), tmp23, xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5d/c5ddhbboflehmz3p56ln6eohy3pdrenivlwiguiosalbz6u6vkin.py
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_32, input_33, mul, x_p], Original ATen: [aten.convolution, aten.tanh, aten.mul, aten.add]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_32 => convolution_8
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_33 => tanh
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_24
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_p => add_19
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_8 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_4, %primals_42, %primals_43, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%convolution_8,), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_24 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh, 1.0), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %mul_24), kwargs = {})
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_mul_tanh_6 = async_compile.triton('triton_poi_fused_add_convolution_mul_tanh_6', '''
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_mul_tanh_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_mul_tanh_6(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x3), xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = libdevice.tanh(tmp2)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 + tmp6
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp7, xmask)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43 = args
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (32, 4, 3, 3), (36, 9, 3, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (32, 32, 3, 3), (288, 9, 3, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (32, 32, 3, 3), (288, 9, 3, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (32, 32, 3, 3), (288, 9, 3, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (32, 32, 3, 3), (288, 9, 3, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (32, 32, 3, 3), (288, 9, 3, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (32, 32, 3, 3), (288, 9, 3, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (32, 64, 1, 1), (64, 1, 1, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (32, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (4, 32, 1, 1), (32, 1, 1, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (4, ), (1, ))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 6, 6), (144, 36, 6, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_0.run(primals_1, buf0, 576, grid=grid(576), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.convolution]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf1, primals_3, primals_4, primals_5, primals_6, buf2, 2048, grid=grid(2048), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_2.run(buf2, buf3, 4608, grid=grid(4608), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.convolution]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8, input_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3.run(buf4, primals_8, primals_9, primals_10, primals_11, buf5, 4608, grid=grid(4608), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf2; del buf2  # reuse
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_4.run(buf7, buf6, primals_13, primals_14, primals_15, primals_16, 2048, grid=grid(2048), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_2.run(buf7, buf8, 4608, grid=grid(4608), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14], Original ATen: [aten.convolution]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_17, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15, input_16, input_17], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3.run(buf9, primals_18, primals_19, primals_20, primals_21, buf10, 4608, grid=grid(4608), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18], Original ATen: [aten.convolution]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf7; del buf7  # reuse
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_19, input_20], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_4.run(buf12, buf11, primals_23, primals_24, primals_25, primals_26, 2048, grid=grid(2048), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_21], Original ATen: [aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_2.run(buf12, buf13, 4608, grid=grid(4608), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_22], Original ATen: [aten.convolution]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf13, primals_27, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_23, input_24, input_25], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.reflection_pad2d]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3.run(buf14, primals_28, primals_29, primals_30, primals_31, buf15, 4608, grid=grid(4608), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_26], Original ATen: [aten.convolution]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 64, 4, 4), (1024, 16, 4, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = reinterpret_tensor(buf20, (4, 32, 4, 4), (1024, 16, 4, 1), 0)  # alias
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf20, (4, 32, 4, 4), (1024, 16, 4, 1), 512)  # alias
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_27, input_28, c, x], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.mean, aten.cat]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5.run(buf12, buf16, primals_33, primals_34, primals_35, primals_36, buf17, buf19, 128, 16, grid=grid(128), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_36
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_29], Original ATen: [aten.convolution]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf20, primals_37, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf12; del buf12  # reuse
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_30, input_31], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf21, primals_38, primals_39, primals_40, primals_41, buf22, 2048, grid=grid(2048), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_41
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32], Original ATen: [aten.convolution]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_42, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32, input_33, mul, x_p], Original ATen: [aten.convolution, aten.tanh, aten.mul, aten.add]
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_tanh_6.run(buf24, primals_43, primals_1, buf25, 256, grid=grid(256), stream=stream0)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_43
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf25, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_37, primals_38, primals_39, primals_40, primals_42, buf0, buf1, buf3, buf4, buf5, buf6, buf8, buf9, buf10, buf11, buf13, buf14, buf15, buf16, buf20, buf21, buf22, buf24, )
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((32, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((4, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43])
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:13:49.883000 760925 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:13:49.895000 760925 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/a3/ca3ynl55p7hfnnnpgmsgbwikcodtsztg4qveceoesg2dy6vcigmk.py
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_forward']
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/x6/cx6bvxvtvm36quxpvppzr64sxettuh7on4p2d4o6hbihulyvks5p.py
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => _unsafe_index, _unsafe_index_1
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_1, [None, None, %sub_1, None]), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %sub_1]), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_reflection_pad2d_0 = async_compile.triton('triton_poi_fused_reflection_pad2d_0', '''
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_reflection_pad2d_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_reflection_pad2d_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (15 + ((-1)*tl_math.abs((-3) + tl_math.abs((-1) + x0))) + ((-4)*tl_math.abs((-3) + tl_math.abs((-1) + x1))) + 16*x2), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ju/cju52p237ye273thyzsj7ihz26ys4pkfglwxzeplqzw2mssies6j.py
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_1, mul_1, mul_2, sub_4
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_3), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_1', '''
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3h/c3hv6s755qxefxk6rrd3dfclmfppqxg2uc36doxppkxi56uw5pi7.py
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => _unsafe_index_2, _unsafe_index_3
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %sub_1, None]), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_2, [None, None, None, %sub_1]), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_reflection_pad2d_2 = async_compile.triton('triton_poi_fused_reflection_pad2d_2', '''
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_reflection_pad2d_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_reflection_pad2d_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4608
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (15 + ((-1)*tl_math.abs((-3) + tl_math.abs((-1) + x0))) + ((-4)*tl_math.abs((-3) + tl_math.abs((-1) + x1))) + 16*x2), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/a2/ca2pamqw4usoqb27xjbzqpvxbc5qw5ytim5phbhvi3xk36t4pkbw.py
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7, input_8, input_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => add_3, mul_4, mul_5, sub_9
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => relu_1
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => _unsafe_index_4, _unsafe_index_5
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_11), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_1, [None, None, %sub_1, None]), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_4, [None, None, None, %sub_1]), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3', '''
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4608
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 36
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 36) % 32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (15 + ((-1)*tl_math.abs((-3) + tl_math.abs((-1) + x0))) + ((-4)*tl_math.abs((-3) + tl_math.abs((-1) + x1))) + 16*x4), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp17, xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/w3/cw3axn3jywtfmnq6c6kbopofqkgwmzbtcqkql7uqrwr5snebzap5.py
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_5, mul_7, mul_8, sub_14
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => add_6
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_14 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_14, %unsqueeze_19), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu, %add_5), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_4', '''
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1e-05
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.sqrt(tmp6)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 / tmp7
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp3 * tmp11
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 + tmp16
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp17, xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/c7/cc7iiofio6bfybsgodfwefo57xavai2aciredorkitspcta6yogw.py
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_27, input_28, c, x], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.mean, aten.cat]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   c => mean
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_27 => add_15, mul_19, mul_20, sub_34
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_28 => add_16
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_34 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_6, %unsqueeze_49), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_34, %unsqueeze_51), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_19, %unsqueeze_53), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_55), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %add_15), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_16, [-1, -2], True), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_16, %expand], 1), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5 = async_compile.triton('triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5', '''
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 16},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 32
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + 16*x3), xmask, other=0.0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r2 + 16*x3), xmask, other=0.0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1e-05
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.sqrt(tmp6)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1, 1], 1, tl.int32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 / tmp7
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp3 * tmp11
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 + tmp16
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(xmask, tmp18, 0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.sum(tmp20, 1)[:, None]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 16.0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 / tmp22
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r2 + 16*x0 + 1024*x1), tmp17, xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r2 + 16*x0 + 1024*x1), tmp23, xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5d/c5ddhbboflehmz3p56ln6eohy3pdrenivlwiguiosalbz6u6vkin.py
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_32, input_33, mul, x_p], Original ATen: [aten.convolution, aten.tanh, aten.mul, aten.add]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_32 => convolution_8
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_33 => tanh
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_24
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_p => add_19
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_8 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_4, %primals_42, %primals_43, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%convolution_8,), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_24 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh, 1.0), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %mul_24), kwargs = {})
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_mul_tanh_6 = async_compile.triton('triton_poi_fused_add_convolution_mul_tanh_6', '''
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_mul_tanh_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_mul_tanh_6(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x3), xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = libdevice.tanh(tmp2)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 + tmp6
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp7, xmask)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43 = args
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (32, 4, 3, 3), (36, 9, 3, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (32, 32, 3, 3), (288, 9, 3, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (32, 32, 3, 3), (288, 9, 3, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (32, 32, 3, 3), (288, 9, 3, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (32, 32, 3, 3), (288, 9, 3, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (32, 32, 3, 3), (288, 9, 3, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (32, 32, 3, 3), (288, 9, 3, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (32, 64, 1, 1), (64, 1, 1, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (32, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (4, 32, 1, 1), (32, 1, 1, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (4, ), (1, ))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 6, 6), (144, 36, 6, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_0.run(primals_1, buf0, 576, grid=grid(576), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.convolution]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf1, primals_3, primals_4, primals_5, primals_6, buf2, 2048, grid=grid(2048), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_2.run(buf2, buf3, 4608, grid=grid(4608), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.convolution]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8, input_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3.run(buf4, primals_8, primals_9, primals_10, primals_11, buf5, 4608, grid=grid(4608), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf2; del buf2  # reuse
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_4.run(buf7, buf6, primals_13, primals_14, primals_15, primals_16, 2048, grid=grid(2048), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_2.run(buf7, buf8, 4608, grid=grid(4608), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14], Original ATen: [aten.convolution]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_17, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15, input_16, input_17], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3.run(buf9, primals_18, primals_19, primals_20, primals_21, buf10, 4608, grid=grid(4608), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18], Original ATen: [aten.convolution]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf7; del buf7  # reuse
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_19, input_20], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_4.run(buf12, buf11, primals_23, primals_24, primals_25, primals_26, 2048, grid=grid(2048), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_21], Original ATen: [aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_2.run(buf12, buf13, 4608, grid=grid(4608), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_22], Original ATen: [aten.convolution]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf13, primals_27, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 32, 6, 6), (1152, 36, 6, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_23, input_24, input_25], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.reflection_pad2d]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_reflection_pad2d_relu_3.run(buf14, primals_28, primals_29, primals_30, primals_31, buf15, 4608, grid=grid(4608), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_26], Original ATen: [aten.convolution]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 64, 4, 4), (1024, 16, 4, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = reinterpret_tensor(buf20, (4, 32, 4, 4), (1024, 16, 4, 1), 0)  # alias
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf20, (4, 32, 4, 4), (1024, 16, 4, 1), 512)  # alias
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_27, input_28, c, x], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.mean, aten.cat]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_add_cat_mean_5.run(buf12, buf16, primals_33, primals_34, primals_35, primals_36, buf17, buf19, 128, 16, grid=grid(128), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_36
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_29], Original ATen: [aten.convolution]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf20, primals_37, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf12; del buf12  # reuse
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_30, input_31], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_1.run(buf21, primals_38, primals_39, primals_40, primals_41, buf22, 2048, grid=grid(2048), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_41
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32], Original ATen: [aten.convolution]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_42, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32, input_33, mul, x_p], Original ATen: [aten.convolution, aten.tanh, aten.mul, aten.add]
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_tanh_6.run(buf24, primals_43, primals_1, buf25, 256, grid=grid(256), stream=stream0)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_43
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf25, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_37, primals_38, primals_39, primals_40, primals_42, buf0, buf1, buf3, buf4, buf5, buf6, buf8, buf9, buf10, buf11, buf13, buf14, buf15, buf16, buf20, buf21, buf22, buf24, )
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((32, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((32, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((32, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((4, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43])
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:04:02.117000 3455056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:04:02.130000 3455056 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/3j/c3jlranz63xjghjeotafqauldvopxodbxb7naoh7twhwkwwcruw2.py
