V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z2/cz2ln3hq3tlz34bqgu22tuqa6dp4bwedne32we76oebob6cl465u.py
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.relu, aten.threshold_backward]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => relu
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%view_1,), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_0 = async_compile.triton('triton_poi_fused_relu_threshold_backward_0', '''
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_0(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kr/ckrybt22e7iq4gqwsmsgj33s3ed3kpcduupliq6i3rtzxqkc6gew.py
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [log_std_1, std, mul, a, var, log_scale, sub, pow_2, neg, mul_1, truediv, sub_1, sub_2, log_pi, wrapped_log, sub_3, mul_2, softplus, sub_4, mul_3, sum_2, log_pi_1], Original ATen: [aten.clamp, aten.exp, aten.mul, aten.add, aten.pow, aten.log, aten.sub, aten.neg, aten.div, aten.sum, aten.softplus]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a => add
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_pi => sum_1
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_pi_1 => sub_5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_scale => log
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_std_1 => clamp_max, clamp_min
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softplus => exp_1, gt, log1p, where
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => exp
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   var => pow_1
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wrapped_log => full_default
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%view_7, -20), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 2), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=3] = call_function[target=torch.ops.aten.exp.default](args = (%clamp_max,), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%normal_functional, %exp), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_5, %mul), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%exp, 2), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%exp,), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %view_5), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%pow_2,), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, 2), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%neg, %mul_1), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %log), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, 0.9189385332046727), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sub_2, [1], True), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.6931471805599453), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%full_default, %add), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, -2), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_2,), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%mul_2, 20), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %mul_2, %log1p), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_3, %where), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, 2), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [1], True), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1 = async_compile.triton('triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1', '''
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (16 + x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr2 + (32 + x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr2 + (48 + x0 + 64*x1), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = -20.0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2.0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.minimum(tmp4, tmp5)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 * tmp7
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 + tmp8
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 - tmp0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp10
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = -tmp11
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp7 * tmp7
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 / tmp14
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.log(tmp7)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 - tmp16
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.9189385332046727
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 - tmp18
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp3)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.minimum(tmp23, tmp5)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp21 * tmp25
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp20 + tmp26
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp20
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp28
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = -tmp29
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp25 * tmp25
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 / tmp32
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl_math.log(tmp25)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 - tmp34
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 - tmp18
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp19 + tmp36
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp40, tmp3)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.minimum(tmp41, tmp5)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl_math.exp(tmp42)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp39 * tmp43
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp38 + tmp44
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 - tmp38
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp46
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = -tmp47
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp43 * tmp43
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp49 * tmp5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp48 / tmp50
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl_math.log(tmp43)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 - tmp52
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 - tmp18
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp54
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = triton_helpers.maximum(tmp58, tmp3)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = triton_helpers.minimum(tmp59, tmp5)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl_math.exp(tmp60)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp57 * tmp61
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp56 + tmp62
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 - tmp56
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 * tmp64
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = -tmp65
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp61 * tmp61
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp67 * tmp5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp66 / tmp68
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl_math.log(tmp61)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp69 - tmp70
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 - tmp18
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp55 + tmp72
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = 0.6931471805599453
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp74 - tmp9
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = -2.0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp9 * tmp76
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = 20.0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 > tmp78
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl_math.exp(tmp77)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = libdevice.log1p(tmp80)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.where(tmp79, tmp77, tmp81)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp75 - tmp82
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp83 * tmp5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp74 - tmp27
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp27 * tmp76
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp86 > tmp78
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tl_math.exp(tmp86)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = libdevice.log1p(tmp88)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.where(tmp87, tmp86, tmp89)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp85 - tmp90
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp91 * tmp5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp84 + tmp92
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp74 - tmp45
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp45 * tmp76
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp95 > tmp78
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl_math.exp(tmp95)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = libdevice.log1p(tmp97)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp96, tmp95, tmp98)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp94 - tmp99
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp100 * tmp5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp93 + tmp101
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp74 - tmp63
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp63 * tmp76
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 > tmp78
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tl_math.exp(tmp104)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = libdevice.log1p(tmp106)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tl.where(tmp105, tmp104, tmp107)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp103 - tmp108
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp109 * tmp5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tmp102 + tmp110
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp73 - tmp111
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp112, xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/at/catf6sux7le2fgbne2mx42e23zjubyabnxx72a3roax3lbmd7cax.py
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [log_std_1, std, mul, a, tanh, a_1], Original ATen: [aten.clamp, aten.exp, aten.mul, aten.add, aten.tanh]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a => add
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a_1 => mul_4
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_std_1 => clamp_max, clamp_min
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => exp
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tanh => tanh
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%view_7, -20), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 2), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=3] = call_function[target=torch.ops.aten.exp.default](args = (%clamp_max,), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%normal_functional, %exp), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_5, %mul), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%add,), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh, 4), kwargs = {})
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_exp_mul_tanh_2 = async_compile.triton('triton_poi_fused_add_clamp_exp_mul_tanh_2', '''
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_exp_mul_tanh_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_exp_mul_tanh_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = -20.0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2.0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.minimum(tmp4, tmp5)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 * tmp7
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 + tmp8
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.tanh(tmp9)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 4.0
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_3, (64, 4), (4, 1), 0), reinterpret_tensor(primals_1, (4, 4), (1, 4), 0), out=buf0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf0  # reuse
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.relu, aten.threshold_backward]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_0.run(buf1, primals_2, buf14, 256, grid=grid(256), stream=stream0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1], Original ATen: [aten.addmm]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf2)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf2, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf2  # reuse
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.relu, aten.threshold_backward]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_0.run(buf3, primals_5, buf13, 256, grid=grid(256), stream=stream0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean], Original ATen: [aten.addmm]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_7, reinterpret_tensor(buf3, (64, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf4)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [log_std], Original ATen: [aten.addmm]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_9, reinterpret_tensor(buf3, (64, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf5)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [eps], Original ATen: [aten.normal_functional]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = torch.ops.aten.normal_functional.default(buf6)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf7
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf9, (4, 1, 4, 4), (16, 16, 4, 1), 0); del buf9  # reuse
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [log_std_1, std, mul, a, var, log_scale, sub, pow_2, neg, mul_1, truediv, sub_1, sub_2, log_pi, wrapped_log, sub_3, mul_2, softplus, sub_4, mul_3, sum_2, log_pi_1], Original ATen: [aten.clamp, aten.exp, aten.mul, aten.add, aten.pow, aten.log, aten.sub, aten.neg, aten.div, aten.sum, aten.softplus]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1.run(buf11, buf4, buf8, buf5, 64, grid=grid(64), stream=stream0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf6; del buf6  # reuse
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [log_std_1, std, mul, a, tanh, a_1], Original ATen: [aten.clamp, aten.exp, aten.mul, aten.add, aten.tanh]
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_exp_mul_tanh_2.run(buf4, buf8, buf5, buf12, 256, grid=grid(256), stream=stream0)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, buf11, reinterpret_tensor(primals_3, (64, 4), (4, 1), 0), reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(buf3, (64, 4), (4, 1), 0), buf4, buf5, buf8, primals_8, primals_6, buf13, primals_4, buf14, )
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:25:50.391000 1132943 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:25:50.399000 1132943 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xc/cxcfpdxhkiyegmstlar7g2wtybwljjw5gta3m36qa3yjhqyr5bbg.py
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z2/cz2ln3hq3tlz34bqgu22tuqa6dp4bwedne32we76oebob6cl465u.py
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.relu, aten.threshold_backward]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => relu
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%view_1,), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_0 = async_compile.triton('triton_poi_fused_relu_threshold_backward_0', '''
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_0(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kr/ckrybt22e7iq4gqwsmsgj33s3ed3kpcduupliq6i3rtzxqkc6gew.py
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [log_std_1, std, mul, a, var, log_scale, sub, pow_2, neg, mul_1, truediv, sub_1, sub_2, log_pi, wrapped_log, sub_3, mul_2, softplus, sub_4, mul_3, sum_2, log_pi_1], Original ATen: [aten.clamp, aten.exp, aten.mul, aten.add, aten.pow, aten.log, aten.sub, aten.neg, aten.div, aten.sum, aten.softplus]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a => add
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_pi => sum_1
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_pi_1 => sub_5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_scale => log
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_std_1 => clamp_max, clamp_min
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softplus => exp_1, gt, log1p, where
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => exp
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   var => pow_1
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wrapped_log => full_default
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%view_7, -20), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 2), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=3] = call_function[target=torch.ops.aten.exp.default](args = (%clamp_max,), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%normal_functional, %exp), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_5, %mul), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%exp, 2), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%exp,), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %view_5), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%pow_2,), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, 2), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%neg, %mul_1), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %log), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, 0.9189385332046727), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sub_2, [1], True), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.6931471805599453), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%full_default, %add), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, -2), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_2,), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%mul_2, 20), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %mul_2, %log1p), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_3, %where), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, 2), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [1], True), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1 = async_compile.triton('triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1', '''
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (16 + x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr2 + (32 + x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr2 + (48 + x0 + 64*x1), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = -20.0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2.0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.minimum(tmp4, tmp5)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 * tmp7
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 + tmp8
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 - tmp0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp10
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = -tmp11
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp7 * tmp7
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 / tmp14
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.log(tmp7)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 - tmp16
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.9189385332046727
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 - tmp18
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp3)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.minimum(tmp23, tmp5)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp21 * tmp25
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp20 + tmp26
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp20
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp28
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = -tmp29
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp25 * tmp25
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 / tmp32
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl_math.log(tmp25)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 - tmp34
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 - tmp18
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp19 + tmp36
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp40, tmp3)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.minimum(tmp41, tmp5)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl_math.exp(tmp42)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp39 * tmp43
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp38 + tmp44
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 - tmp38
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp46
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = -tmp47
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp43 * tmp43
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp49 * tmp5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp48 / tmp50
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl_math.log(tmp43)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 - tmp52
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 - tmp18
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp54
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = triton_helpers.maximum(tmp58, tmp3)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = triton_helpers.minimum(tmp59, tmp5)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl_math.exp(tmp60)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp57 * tmp61
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp56 + tmp62
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 - tmp56
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 * tmp64
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = -tmp65
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp61 * tmp61
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp67 * tmp5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp66 / tmp68
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl_math.log(tmp61)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp69 - tmp70
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 - tmp18
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp55 + tmp72
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = 0.6931471805599453
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp74 - tmp9
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = -2.0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp9 * tmp76
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = 20.0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 > tmp78
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl_math.exp(tmp77)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = libdevice.log1p(tmp80)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.where(tmp79, tmp77, tmp81)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp75 - tmp82
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp83 * tmp5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp74 - tmp27
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp27 * tmp76
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp86 > tmp78
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tl_math.exp(tmp86)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = libdevice.log1p(tmp88)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.where(tmp87, tmp86, tmp89)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp85 - tmp90
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp91 * tmp5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp84 + tmp92
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp74 - tmp45
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp45 * tmp76
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp95 > tmp78
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl_math.exp(tmp95)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = libdevice.log1p(tmp97)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp96, tmp95, tmp98)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp94 - tmp99
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp100 * tmp5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp93 + tmp101
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp74 - tmp63
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp63 * tmp76
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 > tmp78
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tl_math.exp(tmp104)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = libdevice.log1p(tmp106)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tl.where(tmp105, tmp104, tmp107)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp103 - tmp108
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp109 * tmp5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tmp102 + tmp110
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp73 - tmp111
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp112, xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/at/catf6sux7le2fgbne2mx42e23zjubyabnxx72a3roax3lbmd7cax.py
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [log_std_1, std, mul, a, tanh, a_1], Original ATen: [aten.clamp, aten.exp, aten.mul, aten.add, aten.tanh]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a => add
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a_1 => mul_4
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_std_1 => clamp_max, clamp_min
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => exp
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tanh => tanh
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%view_7, -20), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 2), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=3] = call_function[target=torch.ops.aten.exp.default](args = (%clamp_max,), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%normal_functional, %exp), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_5, %mul), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%add,), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh, 4), kwargs = {})
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_exp_mul_tanh_2 = async_compile.triton('triton_poi_fused_add_clamp_exp_mul_tanh_2', '''
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_exp_mul_tanh_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_exp_mul_tanh_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = -20.0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2.0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.minimum(tmp4, tmp5)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 * tmp7
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 + tmp8
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.tanh(tmp9)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 4.0
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_3, (64, 4), (4, 1), 0), reinterpret_tensor(primals_1, (4, 4), (1, 4), 0), out=buf0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf0  # reuse
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.relu, aten.threshold_backward]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_0.run(buf1, primals_2, buf14, 256, grid=grid(256), stream=stream0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1], Original ATen: [aten.addmm]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf2)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf2, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf2  # reuse
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.relu, aten.threshold_backward]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_0.run(buf3, primals_5, buf13, 256, grid=grid(256), stream=stream0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean], Original ATen: [aten.addmm]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_7, reinterpret_tensor(buf3, (64, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf4)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [log_std], Original ATen: [aten.addmm]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_9, reinterpret_tensor(buf3, (64, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf5)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [eps], Original ATen: [aten.normal_functional]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = torch.ops.aten.normal_functional.default(buf6)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf7
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf9, (4, 1, 4, 4), (16, 16, 4, 1), 0); del buf9  # reuse
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [log_std_1, std, mul, a, var, log_scale, sub, pow_2, neg, mul_1, truediv, sub_1, sub_2, log_pi, wrapped_log, sub_3, mul_2, softplus, sub_4, mul_3, sum_2, log_pi_1], Original ATen: [aten.clamp, aten.exp, aten.mul, aten.add, aten.pow, aten.log, aten.sub, aten.neg, aten.div, aten.sum, aten.softplus]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_div_exp_log_mul_neg_pow_softplus_sub_sum_1.run(buf11, buf4, buf8, buf5, 64, grid=grid(64), stream=stream0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf6; del buf6  # reuse
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [log_std_1, std, mul, a, tanh, a_1], Original ATen: [aten.clamp, aten.exp, aten.mul, aten.add, aten.tanh]
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_exp_mul_tanh_2.run(buf4, buf8, buf5, buf12, 256, grid=grid(256), stream=stream0)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, buf11, reinterpret_tensor(primals_3, (64, 4), (4, 1), 0), reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(buf3, (64, 4), (4, 1), 0), buf4, buf5, buf8, primals_8, primals_6, buf13, primals_4, buf14, )
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:16:02.266000 3760754 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:16:02.273000 3760754 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/z6/cz6bjpiqya44s5e7i7k62exrb4l4uyhdz5r4urvu6ng3grhj6oww.py
