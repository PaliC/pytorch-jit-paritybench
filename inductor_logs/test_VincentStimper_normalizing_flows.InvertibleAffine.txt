V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['13_forward']
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jy/cjyx5id6spdupn5riv6rvh7pqzxeassqleyyyegibyxbrewed5no.py
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [tril, L, double], Original ATen: [aten.tril, aten.add, aten._to_copy]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   L => add
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   double => convert_element_type
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tril => full_default, le, sub, where
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%sub, -1), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%le, %primals_1, %full_default), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %primals_2), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add, torch.float64), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_tril_0 = async_compile.triton('triton_poi_fused__to_copy_add_tril_0', '''
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_tril_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_tril_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x2), xmask)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0 + ((-1)*x1)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], -1, tl.int64)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 <= tmp1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float64)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ge/cge7uhf5c3wvkjyexf5vazfaija7bnzrhgg6mgkynzgz2lvnyi4o.py
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [L_inv], Original ATen: [aten._to_copy]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   L_inv => convert_element_type_1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%getitem, torch.float32), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_1 = async_compile.triton('triton_poi_fused__to_copy_1', '''
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp1, xmask)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7t/c7tz5mg6p2kg2f5rbdac3me46mp3tyjfzlal4berocb6x576udgy.py
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [tril, triu, diag, U, double_1], Original ATen: [aten.tril, aten.triu, aten.diag_embed, aten.add, aten._to_copy]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   U => add_1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   diag => eq, where_2
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   double_1 => convert_element_type_2
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tril => full_default, iota
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   triu => ge, sub_1, where_1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=5] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_3), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%sub_1, 1), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ge, %primals_3, %full_default), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Tensor](args = (%iota, %unsqueeze_5), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq, %permute, %full_default), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_1, %where_2), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_1, torch.float64), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_diag_embed_tril_triu_2 = async_compile.triton('triton_poi_fused__to_copy_add_diag_embed_tril_triu_2', '''
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_diag_embed_tril_triu_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_diag_embed_tril_triu_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0 + ((-1)*x1)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = x0
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = x1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 == tmp7
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl_math.exp(tmp10)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 * tmp11
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp8, tmp12, tmp4)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 + tmp13
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.float64)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3i/c3inzby2zlq5y63u7eqh7pp2tu6zuslc4wgilomcm63igzhcue5h.py
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sum_1, log_det], Original ATen: [aten.sum, aten.neg]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det => neg
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%primals_5,), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_1,), kwargs = {})
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_neg_sum_3 = async_compile.triton('triton_poi_fused_neg_sum_3', '''
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_neg_sum_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_neg_sum_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = -tmp10
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp11, None)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float64)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [tril, L, double], Original ATen: [aten.tril, aten.add, aten._to_copy]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_tril_0.run(primals_1, primals_2, buf0, 16, grid=grid(16), stream=stream0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [tril, L, double, inverse], Original ATen: [aten.tril, aten.add, aten._to_copy, aten.linalg_inv_ex]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = torch.ops.aten.linalg_inv_ex.default(buf0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1[0]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [L_inv], Original ATen: [aten._to_copy]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf2, buf4, 16, grid=grid(16), stream=stream0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf0; del buf0  # reuse
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [tril, triu, diag, U, double_1], Original ATen: [aten.tril, aten.triu, aten.diag_embed, aten.add, aten._to_copy]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_diag_embed_tril_triu_2.run(primals_3, primals_4, primals_5, buf5, 16, grid=grid(16), stream=stream0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [tril, triu, diag, U, double_1, inverse_1], Original ATen: [aten.tril, aten.triu, aten.diag_embed, aten.add, aten._to_copy, aten.linalg_inv_ex]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = torch.ops.aten.linalg_inv_ex.default(buf5)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6[0]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [U_inv], Original ATen: [aten._to_copy]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf7, buf9, 16, grid=grid(16), stream=stream0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.mm]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf9, buf4, out=buf10)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [W], Original ATen: [aten.mm]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf10, reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf11)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_], Original ATen: [aten.mm]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_7, (64, 4), (4, 1), 0), buf11, out=buf12)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((), (), torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, log_det], Original ATen: [aten.sum, aten.neg]
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_neg_sum_3.run(primals_5, buf13, 1, grid=grid(1), stream=stream0)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 4, 4, 4), (64, 16, 4, 1), 0), buf13, primals_4, primals_5, buf4, buf9, reinterpret_tensor(primals_7, (4, 64), (1, 4), 0), primals_6, reinterpret_tensor(buf7, (4, 4), (4, 1), 0), reinterpret_tensor(buf2, (4, 4), (4, 1), 0), )
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:21:13.264000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:13.270000 3831937 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/v2/cv2jj4u32mi3fnkihvpxzteoq74n45a7ifala3dabvy7dkid4utq.py
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['13_forward']
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/jy/cjyx5id6spdupn5riv6rvh7pqzxeassqleyyyegibyxbrewed5no.py
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [tril, L, double], Original ATen: [aten.tril, aten.add, aten._to_copy]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   L => add
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   double => convert_element_type
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tril => full_default, le, sub, where
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%sub, -1), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%le, %primals_1, %full_default), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %primals_2), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add, torch.float64), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_tril_0 = async_compile.triton('triton_poi_fused__to_copy_add_tril_0', '''
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_tril_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_tril_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x2), xmask)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0 + ((-1)*x1)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], -1, tl.int64)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 <= tmp1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float64)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ge/cge7uhf5c3wvkjyexf5vazfaija7bnzrhgg6mgkynzgz2lvnyi4o.py
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [L_inv], Original ATen: [aten._to_copy]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   L_inv => convert_element_type_1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%getitem, torch.float32), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_1 = async_compile.triton('triton_poi_fused__to_copy_1', '''
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp1, xmask)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7t/c7tz5mg6p2kg2f5rbdac3me46mp3tyjfzlal4berocb6x576udgy.py
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [tril, triu, diag, U, double_1], Original ATen: [aten.tril, aten.triu, aten.diag_embed, aten.add, aten._to_copy]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   U => add_1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   diag => eq, where_2
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   double_1 => convert_element_type_2
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tril => full_default, iota
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   triu => ge, sub_1, where_1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=5] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_3), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%sub_1, 1), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ge, %primals_3, %full_default), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Tensor](args = (%iota, %unsqueeze_5), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq, %permute, %full_default), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_1, %where_2), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_1, torch.float64), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_diag_embed_tril_triu_2 = async_compile.triton('triton_poi_fused__to_copy_add_diag_embed_tril_triu_2', '''
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_diag_embed_tril_triu_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_diag_embed_tril_triu_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0 + ((-1)*x1)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = x0
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = x1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 == tmp7
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl_math.exp(tmp10)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 * tmp11
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp8, tmp12, tmp4)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 + tmp13
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.float64)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3i/c3inzby2zlq5y63u7eqh7pp2tu6zuslc4wgilomcm63igzhcue5h.py
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sum_1, log_det], Original ATen: [aten.sum, aten.neg]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_det => neg
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%primals_5,), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_1,), kwargs = {})
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_neg_sum_3 = async_compile.triton('triton_poi_fused_neg_sum_3', '''
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_neg_sum_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_neg_sum_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = -tmp10
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp11, None)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float64)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [tril, L, double], Original ATen: [aten.tril, aten.add, aten._to_copy]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_tril_0.run(primals_1, primals_2, buf0, 16, grid=grid(16), stream=stream0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [tril, L, double, inverse], Original ATen: [aten.tril, aten.add, aten._to_copy, aten.linalg_inv_ex]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = torch.ops.aten.linalg_inv_ex.default(buf0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1[0]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [L_inv], Original ATen: [aten._to_copy]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf2, buf4, 16, grid=grid(16), stream=stream0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf0; del buf0  # reuse
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [tril, triu, diag, U, double_1], Original ATen: [aten.tril, aten.triu, aten.diag_embed, aten.add, aten._to_copy]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_diag_embed_tril_triu_2.run(primals_3, primals_4, primals_5, buf5, 16, grid=grid(16), stream=stream0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [tril, triu, diag, U, double_1, inverse_1], Original ATen: [aten.tril, aten.triu, aten.diag_embed, aten.add, aten._to_copy, aten.linalg_inv_ex]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = torch.ops.aten.linalg_inv_ex.default(buf5)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6[0]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [U_inv], Original ATen: [aten._to_copy]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf7, buf9, 16, grid=grid(16), stream=stream0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.mm]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf9, buf4, out=buf10)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [W], Original ATen: [aten.mm]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf10, reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf11)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_], Original ATen: [aten.mm]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_7, (64, 4), (4, 1), 0), buf11, out=buf12)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((), (), torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, log_det], Original ATen: [aten.sum, aten.neg]
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_neg_sum_3.run(primals_5, buf13, 1, grid=grid(1), stream=stream0)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 4, 4, 4), (64, 16, 4, 1), 0), buf13, primals_4, primals_5, buf4, buf9, reinterpret_tensor(primals_7, (4, 64), (1, 4), 0), primals_6, reinterpret_tensor(buf7, (4, 4), (4, 1), 0), reinterpret_tensor(buf2, (4, 4), (4, 1), 0), )
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:10:08.171000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:08.176000 1129093 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/vv/cvvnonifzl2w2u5br3p5cyqgb3f6xi2qsyeh4n6gwgmn4lh7bvgw.py
