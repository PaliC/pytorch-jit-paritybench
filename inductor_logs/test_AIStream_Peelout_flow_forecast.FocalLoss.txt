V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_inference']
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ur/curzn7da7ydsvcenshl33x2ccsoxyitdl43kpt6neablruqa5app.py
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_soft, log_input_soft], Original ATen: [aten._softmax, aten._log_softmax]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_soft => amax, exp, sub
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_input_soft => amax_1, sub_1
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg1_1, [1], True), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %amax), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg1_1, [1], True), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %amax_1), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__softmax_0 = async_compile.triton('triton_poi_fused__log_softmax__softmax_0', '''
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__softmax_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, xmask)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xb/cxbche4qbjqaxdymeazpfcnf4lkiqe6ieplnu6hicltwthpzkmds.py
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_soft, neg, add_1, weight, mul, log_input_soft, focal], Original ATen: [aten._softmax, aten.neg, aten.add, aten.pow, aten.mul, aten._log_softmax]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   focal => mul_1
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_soft => div, sum_1
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_input_soft => exp_1, log, sub_2, sum_2
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight => pow_1
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%div,), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%neg, 1.0), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_1, 2.0), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, -4), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %log), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %sub_2), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1 = async_compile.triton('triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1', '''
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (x2), xmask)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = -tmp8
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = -4.0
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl_math.exp(tmp16)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl_math.exp(tmp18)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 + tmp19
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl_math.exp(tmp21)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 + tmp22
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp23 + tmp25
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl_math.log(tmp26)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp15 - tmp27
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp14 * tmp28
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp29, xmask)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cb/ccb3pafcx3dmtj2vlaovnxifvqhxkuxozaqzln2n2zascr7qfpjr.py
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scatter_, target_one_hot], Original ATen: [aten.scatter, aten.add]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scatter_ => scatter_upon_const_tensor
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   target_one_hot => add
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=1] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [4, 4], background_val: 0, dtype: torch.float32, dim: 1, selector: %unsqueeze, val: 1.0})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%scatter_upon_const_tensor, 1e-06), kwargs = {})
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_scatter_2 = async_compile.triton('triton_poi_fused_add_scatter_2', '''
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_scatter_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_scatter_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.int64)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = x0
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 == tmp2
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(tmp3, tmp4, tmp5)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 1e-06
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_soft, log_input_soft], Original ATen: [aten._softmax, aten._log_softmax]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_0.run(arg1_1, buf0, buf1, 16, grid=grid(16), stream=stream0)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_soft, neg, add_1, weight, mul, log_input_soft, focal], Original ATen: [aten._softmax, aten.neg, aten.add, aten.pow, aten.mul, aten._log_softmax]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1.run(buf0, buf1, buf2, 16, grid=grid(16), stream=stream0)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf1; del buf1  # reuse
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scatter_, target_one_hot], Original ATen: [aten.scatter, aten.add]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_scatter_2.run(arg0_1, buf3, 16, grid=grid(16), stream=stream0)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1, 1), (1, 1, 1), torch.float32)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [loss_tmp], Original ATen: [aten.bmm]
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (4, 1, 4), (4, 0, 1), 0), reinterpret_tensor(buf2, (4, 4, 1), (4, 1, 1), 0), out=buf4)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf4, (4, ), (1, ), 0), )
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:25:04.312000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.315000 3415184 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/h3/ch3yrjhucdzu2tfznlffvhyyrksljjglgv2nft64vjujd4xu5i7r.py
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_inference']
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ur/curzn7da7ydsvcenshl33x2ccsoxyitdl43kpt6neablruqa5app.py
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_soft, log_input_soft], Original ATen: [aten._softmax, aten._log_softmax]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_soft => amax, exp, sub
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_input_soft => amax_1, sub_1
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg1_1, [1], True), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %amax), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg1_1, [1], True), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %amax_1), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__softmax_0 = async_compile.triton('triton_poi_fused__log_softmax__softmax_0', '''
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__softmax_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, xmask)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xb/cxbche4qbjqaxdymeazpfcnf4lkiqe6ieplnu6hicltwthpzkmds.py
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_soft, neg, add_1, weight, mul, log_input_soft, focal], Original ATen: [aten._softmax, aten.neg, aten.add, aten.pow, aten.mul, aten._log_softmax]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   focal => mul_1
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_soft => div, sum_1
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_input_soft => exp_1, log, sub_2, sum_2
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight => pow_1
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%div,), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%neg, 1.0), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_1, 2.0), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, -4), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %log), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %sub_2), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1 = async_compile.triton('triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1', '''
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (x2), xmask)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = -tmp8
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = -4.0
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl_math.exp(tmp16)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl_math.exp(tmp18)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 + tmp19
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl_math.exp(tmp21)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 + tmp22
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp23 + tmp25
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl_math.log(tmp26)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp15 - tmp27
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp14 * tmp28
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp29, xmask)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cb/ccb3pafcx3dmtj2vlaovnxifvqhxkuxozaqzln2n2zascr7qfpjr.py
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scatter_, target_one_hot], Original ATen: [aten.scatter, aten.add]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scatter_ => scatter_upon_const_tensor
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   target_one_hot => add
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=1] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [4, 4], background_val: 0, dtype: torch.float32, dim: 1, selector: %unsqueeze, val: 1.0})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%scatter_upon_const_tensor, 1e-06), kwargs = {})
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_scatter_2 = async_compile.triton('triton_poi_fused_add_scatter_2', '''
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_scatter_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_scatter_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.int64)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = x0
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 == tmp2
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(tmp3, tmp4, tmp5)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 1e-06
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_soft, log_input_soft], Original ATen: [aten._softmax, aten._log_softmax]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_0.run(arg1_1, buf0, buf1, 16, grid=grid(16), stream=stream0)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_soft, neg, add_1, weight, mul, log_input_soft, focal], Original ATen: [aten._softmax, aten.neg, aten.add, aten.pow, aten.mul, aten._log_softmax]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_add_mul_neg_pow_1.run(buf0, buf1, buf2, 16, grid=grid(16), stream=stream0)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf1; del buf1  # reuse
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scatter_, target_one_hot], Original ATen: [aten.scatter, aten.add]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_scatter_2.run(arg0_1, buf3, 16, grid=grid(16), stream=stream0)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1, 1), (1, 1, 1), torch.float32)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [loss_tmp], Original ATen: [aten.bmm]
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (4, 1, 4), (4, 0, 1), 0), reinterpret_tensor(buf2, (4, 4, 1), (4, 1, 1), 0), out=buf4)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf4, (4, ), (1, ), 0), )
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:14:58.946000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.950000 2077305 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/wp/cwp6amt3dwotakeyysqwdzdyfx3ap3tg2cyeq54var5alnqv3cbs.py
