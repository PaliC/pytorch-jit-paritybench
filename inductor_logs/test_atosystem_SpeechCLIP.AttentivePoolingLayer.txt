V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fb/cfbrrfntfocdlxs5xgmpyczbkdzwj7rysjx4vxxyp4zuric6rtq4.py
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_align], Original ATen: [aten.clone, aten._unsafe_view]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _align => clone, view
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clone, [16, 4]), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_view_clone_0 = async_compile.triton('triton_poi_fused__unsafe_view_clone_0', '''
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_view_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_view_clone_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1 + 16*(y0 // 4) + ((y0 % 4))), xmask & ymask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp0, xmask & ymask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qd/cqdmibl6viy37xawl2f7fdevwil6xzaaj4tpmmgmpetasi2thdgc.py
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_align_2, max_1, max_2, _scoreA_1, _scoreB_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _align_2 => tanh
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreA_1 => amax
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreB_1 => amax_1
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_2 => max_2
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%bmm,), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%tanh, 2), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%tanh, 1), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%getitem, [-1], True), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%getitem_2, [-1], True), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_max_tanh_1 = async_compile.triton('triton_poi_fused__softmax_max_tanh_1', '''
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_max_tanh_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_max_tanh_1(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp1, tmp3)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.tanh(tmp5)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp4, tmp6)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.tanh(tmp8)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp7, tmp9)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.tanh(tmp11)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.tanh(tmp13)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp12, tmp14)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.tanh(tmp16)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp15, tmp17)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.tanh(tmp19)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp18, tmp20)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp10, tmp21)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = libdevice.tanh(tmp23)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.tanh(tmp25)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp24, tmp26)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = libdevice.tanh(tmp28)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = triton_helpers.maximum(tmp27, tmp29)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = libdevice.tanh(tmp31)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.maximum(tmp30, tmp32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = triton_helpers.maximum(tmp22, tmp33)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = libdevice.tanh(tmp35)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = libdevice.tanh(tmp37)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.maximum(tmp36, tmp38)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = libdevice.tanh(tmp40)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.maximum(tmp39, tmp41)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = libdevice.tanh(tmp43)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp42, tmp44)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp34, tmp45)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = triton_helpers.maximum(tmp1, tmp12)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = triton_helpers.maximum(tmp47, tmp24)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = triton_helpers.maximum(tmp48, tmp36)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp3, tmp14)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = triton_helpers.maximum(tmp50, tmp26)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = triton_helpers.maximum(tmp51, tmp38)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = triton_helpers.maximum(tmp49, tmp52)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = triton_helpers.maximum(tmp6, tmp17)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = triton_helpers.maximum(tmp54, tmp29)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = triton_helpers.maximum(tmp55, tmp41)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = triton_helpers.maximum(tmp53, tmp56)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = triton_helpers.maximum(tmp9, tmp20)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = triton_helpers.maximum(tmp58, tmp32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = triton_helpers.maximum(tmp59, tmp44)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = triton_helpers.maximum(tmp57, tmp60)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp61, xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/el/celo2kkefsmqq6q5hngz5lkt6egweu4bobtsa5wsc6dofeo3nkhm.py
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_align_2, max_1, _scoreA_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _align_2 => tanh
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreA_1 => exp, sub
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%bmm,), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%tanh, 2), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem, %amax), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_max_tanh_2 = async_compile.triton('triton_poi_fused__softmax_max_tanh_2', '''
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_max_tanh_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_max_tanh_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp1, tmp3)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.tanh(tmp5)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp4, tmp6)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.tanh(tmp8)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp7, tmp9)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl_math.exp(tmp12)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp13, xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5s/c5skf3f5sqvrvoj3e2emovhzkxskglss7me4yw46p4hq3iv6gm76.py
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_align_2, max_2, _scoreB_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _align_2 => tanh
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreB_1 => exp_1, sub_1
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_2 => max_2
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%bmm,), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%tanh, 1), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_2, %amax_1), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_max_tanh_3 = async_compile.triton('triton_poi_fused__softmax_max_tanh_3', '''
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_max_tanh_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_max_tanh_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp1, tmp3)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.tanh(tmp5)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp4, tmp6)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.tanh(tmp8)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp7, tmp9)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl_math.exp(tmp12)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp13, xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dx/cdxeercglymjqip4jf3xl5kzkf73hf4shg7i7tr4dl3lod6ymhsr.py
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_scoreA_1], Original ATen: [aten._softmax]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreA_1 => div, sum_1
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4), (16, 4, 1))
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align], Original ATen: [aten.clone, aten._unsafe_view]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_view_clone_0.run(primals_1, buf0, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align], Original ATen: [aten.mm]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, primals_3, out=buf1)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align_1], Original ATen: [aten.bmm]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf1, (4, 4, 4), (16, 4, 1), 0), primals_2, out=buf2)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align_2, max_1, max_2, _scoreA_1, _scoreB_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_max_tanh_1.run(buf2, buf3, buf5, 4, grid=grid(4), stream=stream0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align_2, max_1, _scoreA_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_max_tanh_2.run(buf2, buf3, buf4, 16, grid=grid(16), stream=stream0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align_2, max_2, _scoreB_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_max_tanh_3.run(buf2, buf5, buf6, 16, grid=grid(16), stream=stream0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_scoreA_1], Original ATen: [aten._softmax]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf4, buf7, 16, grid=grid(16), stream=stream0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf4, (4, 4, 1), (4, 1, 1), 0); del buf4  # reuse
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_2], Original ATen: [aten.bmm]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(primals_1, reinterpret_tensor(buf7, (4, 4, 1), (4, 1, 0), 0), out=buf8)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf7; del buf7  # reuse
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_scoreB_1], Original ATen: [aten._softmax]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf6, buf9, 16, grid=grid(16), stream=stream0)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf6, (4, 4, 1), (4, 1, 1), 0); del buf6  # reuse
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_3], Original ATen: [aten.bmm]
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(primals_2, reinterpret_tensor(buf9, (4, 4, 1), (4, 1, 0), 0), out=buf10)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf8, (4, 4), (4, 1), 0), reinterpret_tensor(buf10, (4, 4), (4, 1), 0), buf2, reinterpret_tensor(primals_2, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(primals_1, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf0, (4, 16), (1, 4), 0), )
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:01:59.322000 1003945 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:01:59.330000 1003945 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/tw/ctwlro44shg7pvmcswfvqwkkh6voh7yo76fvx2bkov7gd7np4ysj.py
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fb/cfbrrfntfocdlxs5xgmpyczbkdzwj7rysjx4vxxyp4zuric6rtq4.py
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_align], Original ATen: [aten.clone, aten._unsafe_view]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _align => clone, view
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clone, [16, 4]), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_view_clone_0 = async_compile.triton('triton_poi_fused__unsafe_view_clone_0', '''
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_view_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_view_clone_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1 + 16*(y0 // 4) + ((y0 % 4))), xmask & ymask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp0, xmask & ymask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qd/cqdmibl6viy37xawl2f7fdevwil6xzaaj4tpmmgmpetasi2thdgc.py
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_align_2, max_1, max_2, _scoreA_1, _scoreB_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _align_2 => tanh
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreA_1 => amax
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreB_1 => amax_1
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_2 => max_2
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%bmm,), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%tanh, 2), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%tanh, 1), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%getitem, [-1], True), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%getitem_2, [-1], True), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_max_tanh_1 = async_compile.triton('triton_poi_fused__softmax_max_tanh_1', '''
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_max_tanh_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_max_tanh_1(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp1, tmp3)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.tanh(tmp5)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp4, tmp6)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.tanh(tmp8)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp7, tmp9)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.tanh(tmp11)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.tanh(tmp13)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp12, tmp14)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.tanh(tmp16)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp15, tmp17)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.tanh(tmp19)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp18, tmp20)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp10, tmp21)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = libdevice.tanh(tmp23)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.tanh(tmp25)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp24, tmp26)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = libdevice.tanh(tmp28)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = triton_helpers.maximum(tmp27, tmp29)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = libdevice.tanh(tmp31)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.maximum(tmp30, tmp32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = triton_helpers.maximum(tmp22, tmp33)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = libdevice.tanh(tmp35)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = libdevice.tanh(tmp37)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.maximum(tmp36, tmp38)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = libdevice.tanh(tmp40)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.maximum(tmp39, tmp41)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = libdevice.tanh(tmp43)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp42, tmp44)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp34, tmp45)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = triton_helpers.maximum(tmp1, tmp12)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = triton_helpers.maximum(tmp47, tmp24)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = triton_helpers.maximum(tmp48, tmp36)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp3, tmp14)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = triton_helpers.maximum(tmp50, tmp26)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = triton_helpers.maximum(tmp51, tmp38)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = triton_helpers.maximum(tmp49, tmp52)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = triton_helpers.maximum(tmp6, tmp17)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = triton_helpers.maximum(tmp54, tmp29)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = triton_helpers.maximum(tmp55, tmp41)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = triton_helpers.maximum(tmp53, tmp56)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = triton_helpers.maximum(tmp9, tmp20)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = triton_helpers.maximum(tmp58, tmp32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = triton_helpers.maximum(tmp59, tmp44)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = triton_helpers.maximum(tmp57, tmp60)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp61, xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/el/celo2kkefsmqq6q5hngz5lkt6egweu4bobtsa5wsc6dofeo3nkhm.py
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_align_2, max_1, _scoreA_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _align_2 => tanh
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreA_1 => exp, sub
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%bmm,), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%tanh, 2), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem, %amax), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_max_tanh_2 = async_compile.triton('triton_poi_fused__softmax_max_tanh_2', '''
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_max_tanh_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_max_tanh_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp1, tmp3)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.tanh(tmp5)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp4, tmp6)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.tanh(tmp8)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp7, tmp9)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl_math.exp(tmp12)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp13, xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5s/c5skf3f5sqvrvoj3e2emovhzkxskglss7me4yw46p4hq3iv6gm76.py
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_align_2, max_2, _scoreB_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _align_2 => tanh
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreB_1 => exp_1, sub_1
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_2 => max_2
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%bmm,), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%tanh, 1), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_2, %amax_1), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_max_tanh_3 = async_compile.triton('triton_poi_fused__softmax_max_tanh_3', '''
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_max_tanh_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_max_tanh_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp1, tmp3)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.tanh(tmp5)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp4, tmp6)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.tanh(tmp8)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp7, tmp9)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl_math.exp(tmp12)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp13, xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dx/cdxeercglymjqip4jf3xl5kzkf73hf4shg7i7tr4dl3lod6ymhsr.py
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_scoreA_1], Original ATen: [aten._softmax]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _scoreA_1 => div, sum_1
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4), (16, 4, 1))
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align], Original ATen: [aten.clone, aten._unsafe_view]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_view_clone_0.run(primals_1, buf0, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align], Original ATen: [aten.mm]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, primals_3, out=buf1)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align_1], Original ATen: [aten.bmm]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf1, (4, 4, 4), (16, 4, 1), 0), primals_2, out=buf2)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align_2, max_1, max_2, _scoreA_1, _scoreB_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_max_tanh_1.run(buf2, buf3, buf5, 4, grid=grid(4), stream=stream0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align_2, max_1, _scoreA_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_max_tanh_2.run(buf2, buf3, buf4, 16, grid=grid(16), stream=stream0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_align_2, max_2, _scoreB_1], Original ATen: [aten.tanh, aten.max, aten._softmax]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_max_tanh_3.run(buf2, buf5, buf6, 16, grid=grid(16), stream=stream0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_scoreA_1], Original ATen: [aten._softmax]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf4, buf7, 16, grid=grid(16), stream=stream0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf4, (4, 4, 1), (4, 1, 1), 0); del buf4  # reuse
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_2], Original ATen: [aten.bmm]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(primals_1, reinterpret_tensor(buf7, (4, 4, 1), (4, 1, 0), 0), out=buf8)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf7; del buf7  # reuse
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_scoreB_1], Original ATen: [aten._softmax]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf6, buf9, 16, grid=grid(16), stream=stream0)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf6, (4, 4, 1), (4, 1, 1), 0); del buf6  # reuse
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_3], Original ATen: [aten.bmm]
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(primals_2, reinterpret_tensor(buf9, (4, 4, 1), (4, 1, 0), 0), out=buf10)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf8, (4, 4), (4, 1), 0), reinterpret_tensor(buf10, (4, 4), (4, 1), 0), buf2, reinterpret_tensor(primals_2, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(primals_1, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf0, (4, 16), (1, 4), 0), )
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:51:11.394000 2310141 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:51:11.401000 2310141 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/rh/crhqwi3kg4p6jsav4mnfc5rm5zxmoj5jxk2mxmvflgrrzuf2ew5d.py
