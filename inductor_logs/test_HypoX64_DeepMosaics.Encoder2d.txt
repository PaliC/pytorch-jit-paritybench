V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['5_forward']
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3x/c3xmvpybmfnc62cgeakruueet65rcvnhdyyozmr4njvc27jgowqu.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 64}, tile_hint=TileHint.SQUARE,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 49*y3), xmask & ymask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 196*y1), tmp0, xmask & ymask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/go/cgo5yvcpsdo7ccayypnrczxk7qgcb2byi3l3urldeuo7w7driicv.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 8192, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 8192
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 576*y1), tmp0, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4n/c4nkl2c6l4tz3ixmrm42ed4wujb6nnj2rn6pxzlc2mi2ovxr6iyr.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32768, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32768
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3v/c3vtbyc7yinbl2k7gl7nvdvegxq3cywakfc52ynlfwnzjrp4kqps.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_3 = async_compile.triton('triton_poi_fused_3', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 131072
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6y/c6ywsg7hetpzjpwibzne2b5lyyhp47aeuxc6q4pbpqofmn6r4e7z.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.reflection_pad2d]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => _unsafe_index, _unsafe_index_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_1, [None, None, %sub_1, None]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %sub_1]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_reflection_pad2d_4 = async_compile.triton('triton_poi_fused_reflection_pad2d_4', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8192}, tile_hint=TileHint.SQUARE,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_reflection_pad2d_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_reflection_pad2d_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4900
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 70)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 70
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4095 + ((-1)*tl_math.abs((-63) + tl_math.abs((-3) + x2))) + ((-64)*tl_math.abs((-63) + tl_math.abs((-3) + x3))) + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x5 + 19600*y1), tmp0, xmask & ymask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vm/cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv => mul, sum_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %primals_4), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_5 = async_compile.triton('triton_red_fused_mv_5', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 128},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_5(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 98
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (2*x0 + 4*((r2 % 49)) + 196*x1 + (r2 // 49)), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 98*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/n7/cn72quq3cocwjzljupd3ugimkjoomlqadew6mwu3xzpt5pkregbk.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv => mul, sum_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %primals_4), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_6 = async_compile.triton('triton_per_fused_mv_6', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 2},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_6(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 2*x0), xmask, other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5r/c5rp26spx4maazycbo2beonvwxke2segwkf3y3nx53qiin36r2h6.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma], Original ATen: [aten.dot]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma => mul_1, sum_2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, %sum_1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_1,), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_7 = async_compile.triton('triton_per_fused_dot_7', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_7(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp3, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/td/ctdhatcmfujbrfb5cp6d5wrtrho4b4mgbl32jw4la4lhgfd6q372.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [weight, input_2], Original ATen: [aten.div, aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => convolution
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight => div
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_2, %sum_2), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_1, %div, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_div_8 = async_compile.triton('triton_poi_fused_convolution_div_8', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_div_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_div_8(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 196*y1), xmask & ymask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 49*y3), tmp3, xmask & ymask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 4*x2 + 196*y1), tmp3, xmask & ymask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/do/cdo36tieb2a3v57pg2qyzke7cfpai7rsxd2mbkk2d3owgxbzgmzs.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => convolution
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_1, %div, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_9 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_9', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_9(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sr/csrjdjzsrcukr2xi2xamwvotovs6hvx2cyykgiohygn35ogfqtl4.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => convolution
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => mul_2, where
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => _unsafe_index_2, _unsafe_index_3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_1, %div, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.2), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul_2), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %sub_5, None]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_2, [None, None, None, %sub_5]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1115136
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 66)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4224) % 66)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 278784
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (262080 + x0 + ((-4096)*tl_math.abs((-63) + tl_math.abs((-1) + x2))) + ((-64)*tl_math.abs((-63) + tl_math.abs((-1) + x1))) + 262144*x3), xmask).to(tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (262080 + x0 + ((-4096)*tl_math.abs((-63) + tl_math.abs((-1) + x2))) + ((-64)*tl_math.abs((-63) + tl_math.abs((-1) + x1))) + 262144*x3), xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(tmp0, tmp3, tmp5)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp6, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/u6/cu666laezw2iyqag5t7ao64gjhwqmhh5bd73aje56i5dcw7cejoi.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_1 => mul_3, sum_3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, %primals_8), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [1]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_11 = async_compile.triton('triton_red_fused_mv_11', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 128},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_11(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 640
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 116
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 5
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp9 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = r2 + 116*x0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.full([1, 1], 576, tl.int32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 < tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (64*(((r2 + 116*x0) % 9)) + 576*x1 + ((((r2 + 116*x0) // 9) % 64))), rmask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl.load(in_ptr1 + (r2 + 116*x0), rmask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp3 * tmp4
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tl.full(tmp5.shape, 0, tmp5.dtype)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tl.where(tmp2, tmp5, tmp6)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tl.broadcast_to(tmp7, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = _tmp9 + tmp8
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp9 = tl.where(rmask & xmask, tmp10, _tmp9)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sum(_tmp9, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp9, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_1 => mul_3, sum_3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, %primals_8), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [1]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_12 = async_compile.triton('triton_per_fused_mv_12', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 8},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_12(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 5
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 8
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 5*x0), rmask & xmask, other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(rmask & xmask, tmp1, 0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xz/cxzlppxu5bqkulbxrk63epy3yaqez2wrpgikez7wggw3hnd57suh.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_1], Original ATen: [aten.dot]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_1 => mul_4, sum_4
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, %sum_3), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_4,), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_13 = async_compile.triton('triton_per_fused_dot_13', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 128},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_13(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 128
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp3, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hs/chsslsmfnk7untiqij46yeb3khg6ojo74arremstybswpavcmcwb.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [weight_1, input_5], Original ATen: [aten.div, aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_1 => div_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_6, %sum_4), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_3, %div_1, %primals_9, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_div_14 = async_compile.triton('triton_poi_fused_convolution_div_14', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 8192, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_div_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_div_14(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 8192
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 64*x2 + 576*y1), xmask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp3, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 64*x2 + 576*y1), tmp3, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ku/ckuruezi257juono55wuuhrooo6ferm2qfqkvrus5xe7nthatn4y.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_3, %div_1, %primals_9, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_15 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_15', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_15(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7c/c7cisrtarlmfwpcqs34o4s43ocscj6ezpndjaqqj24yeip2mv2k2.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, input_7], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => mul_5, where_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => _unsafe_index_4, _unsafe_index_5
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_3, %div_1, %primals_9, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.2), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_5), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where_1, [None, None, %sub_9, None]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_4, [None, None, None, %sub_9]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 591872
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 128) % 34)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4352) % 34)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 147968
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (130944 + x0 + ((-4096)*tl_math.abs((-31) + tl_math.abs((-1) + x2))) + ((-128)*tl_math.abs((-31) + tl_math.abs((-1) + x1))) + 131072*x3), xmask).to(tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (130944 + x0 + ((-4096)*tl_math.abs((-31) + tl_math.abs((-1) + x2))) + ((-128)*tl_math.abs((-31) + tl_math.abs((-1) + x1))) + 131072*x3), xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(tmp0, tmp3, tmp5)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp6, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fc/cfctj2if3j4y6mf366xpdlvpssf5f7crjl6hoa6abu4egsmimat4.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_2], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_2 => mul_6, sum_5
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_2, %primals_12), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_6, [1]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_17 = async_compile.triton('triton_red_fused_mv_17', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096, 'r': 128},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_17', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_17(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2304
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 9)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (128*(((r2 + 128*x0) % 9)) + 1152*x1 + ((r2 + 128*x0) // 9)), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 128*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hw/chwl32g5f4s4i6tkyuzmlme55jj3aag4b3v62oqaz6dmwszr3lv4.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_2], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_2 => mul_6, sum_5
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_2, %primals_12), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_6, [1]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_18 = async_compile.triton('triton_per_fused_mv_18', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 16},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_18(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 9*x0), rmask & xmask, other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(rmask & xmask, tmp1, 0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/g6/cg63sawcuw3llqzbch7acc5lgv4d5iu4ptwkticuzql37r22womo.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_2], Original ATen: [aten.dot]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_2 => mul_7, sum_6
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_11, %sum_5), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_7,), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_19 = async_compile.triton('triton_per_fused_dot_19', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_19', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_19(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z3/cz3y5mukpjyhvr5frybp6jwkbxmskzeumqp3k7mcwbkzyveaecps.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [weight_2, input_8], Original ATen: [aten.div, aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => convolution_2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_2 => div_2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_10, %sum_6), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_5, %div_2, %primals_13, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_div_20 = async_compile.triton('triton_poi_fused_convolution_div_20', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32768, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_div_20', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_div_20(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32768
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 128*x2 + 1152*y1), xmask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp3, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 128*x2 + 1152*y1), tmp3, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vj/cvjcdvbelas5u4qvdmjzbwgrnz6tlbk3riqfh4wdt6cokblixg7g.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, input_9], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => convolution_2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => gt_2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_5, %div_2, %primals_13, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_2, 0), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_21 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_21', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_21', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_21(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/27/c27n47fepscw673ol3xkpi5obbz2isp5dsqjjbwzyrv2n7hkjbfg.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, input_9, input_10], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => _unsafe_index_6, _unsafe_index_7
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => convolution_2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => mul_8, where_2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_5, %div_2, %primals_13, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_2, 0.2), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %convolution_2, %mul_8), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where_2, [None, None, %sub_13, None]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_6, [None, None, None, %sub_13]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 331776
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 18)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4608) % 18)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 82944
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (65280 + x0 + ((-4096)*tl_math.abs((-15) + tl_math.abs((-1) + x2))) + ((-256)*tl_math.abs((-15) + tl_math.abs((-1) + x1))) + 65536*x3), None).to(tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (65280 + x0 + ((-4096)*tl_math.abs((-15) + tl_math.abs((-1) + x2))) + ((-256)*tl_math.abs((-15) + tl_math.abs((-1) + x1))) + 65536*x3), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(tmp0, tmp3, tmp5)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp6, None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2s/c2ssd2vsebmkbp33liwbv3ajc3ojmywrg7razthpmz37tlupkxws.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_3 => mul_9, sum_7
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %primals_16), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_9, [1]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_23 = async_compile.triton('triton_red_fused_mv_23', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384, 'r': 128},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_23', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_23(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9216
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 18)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 18
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (256*(((r2 + 128*x0) % 9)) + 2304*x1 + ((r2 + 128*x0) // 9)), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 128*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vv/cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_3 => mul_9, sum_7
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %primals_16), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_9, [1]), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_24 = async_compile.triton('triton_per_fused_mv_24', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512, 'r': 32},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_24', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_24(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 18
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 18*x0), rmask & xmask, other=0.0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(rmask & xmask, tmp1, 0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/53/c534tdi22iq7plbqvtdfljjt2g465h6ndxl3vovm4kzorhbmf6nb.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_3], Original ATen: [aten.dot]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_3 => mul_10, sum_8
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_15, %sum_7), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_8 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_10,), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_25 = async_compile.triton('triton_per_fused_dot_25', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 512},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_25', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_25(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 512
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 512
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [weight_3, input_11], Original ATen: [aten.div, aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => convolution_3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_3 => div_3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_14, %sum_8), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_7, %div_3, %primals_17, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_div_26 = async_compile.triton('triton_poi_fused_convolution_div_26', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_div_26', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_div_26(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 131072
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 2304*y1), xmask & ymask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp3, xmask & ymask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 256*x2 + 2304*y1), tmp3, xmask & ymask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sn/csnv7xak3ajfacpz54ybn5r32qvqs6r5t2oxgx6z5nmxl4luk2i7.py
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => convolution_3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => gt_3, mul_11, where_3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_7, %div_3, %primals_17, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_3, 0), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_3, 0.2), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %convolution_3, %mul_11), kwargs = {})
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_27 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_27', '''
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 512}, tile_hint=TileHint.DEFAULT,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_27', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_27(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = (yindex % 64)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex // 64
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 512*y0), xmask & ymask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 512*y0), tmp4, xmask & ymask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y2 + 64*x1 + 32768*y3), tmp7, xmask & ymask)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17 = args
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 64, 64), (16384, 4096, 64, 1))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, 4, 7, 7), (196, 49, 7, 1))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (64, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (196, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (128, 64, 3, 3), (576, 9, 3, 1))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (128, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (576, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (128, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1152, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (512, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (512, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (2304, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (512, ), (1, ))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4, 7, 7), (196, 1, 28, 4), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_2, buf0, 256, 49, grid=grid(256, 49), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((128, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_6, buf1, 8192, 9, grid=grid(8192, 9), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((256, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_10, buf2, 32768, 9, grid=grid(32768, 9), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((512, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_3.run(primals_14, buf3, 131072, 9, grid=grid(131072, 9), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 70, 70), (19600, 1, 280, 4), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.reflection_pad2d]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_4.run(primals_1, buf4, 16, 4900, grid=grid(16, 4900), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 2), (2, 1), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_5.run(buf0, primals_4, buf5, 128, 98, grid=grid(128), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_6.run(buf5, buf6, 64, 2, grid=grid(64), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((), (), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma], Original ATen: [aten.dot]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_7.run(primals_3, buf6, buf7, 1, 64, grid=grid(1), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((64, 4, 7, 7), (196, 49, 7, 1), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((64, 4, 7, 7), (196, 1, 28, 4), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight, input_2], Original ATen: [aten.div, aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_div_8.run(buf0, buf7, buf8, buf9, 256, 49, grid=grid(256, 49), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf4, buf9, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.bool)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_9.run(buf10, primals_5, buf11, 1048576, grid=grid(1048576), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 64, 66, 66), (278784, 1, 4224, 64), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10.run(buf11, buf10, primals_5, buf12, 1115136, grid=grid(1115136), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((128, 5), (5, 1), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_11.run(buf1, primals_8, buf13, 640, 116, grid=grid(640), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf5, (128, ), (1, ), 0); del buf5  # reuse
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_12.run(buf13, buf14, 128, 5, grid=grid(128), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((), (), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_1], Original ATen: [aten.dot]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_13.run(primals_7, buf14, buf15, 1, 128, grid=grid(1), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((128, 64, 3, 3), (576, 9, 3, 1), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((128, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight_1, input_5], Original ATen: [aten.div, aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_div_14.run(buf1, buf15, buf16, buf17, 8192, 9, grid=grid(8192, 9), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = extern_kernels.convolution(buf12, buf17, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf18, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.bool)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_15.run(buf18, primals_9, buf19, 524288, grid=grid(524288), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 128, 34, 34), (147968, 1, 4352, 128), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, input_7], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16.run(buf19, buf18, primals_9, buf20, 591872, grid=grid(591872), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((256, 9), (9, 1), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_2], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_17.run(buf2, primals_12, buf21, 2304, 128, grid=grid(2304), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_2], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_18.run(buf21, buf22, 256, 9, grid=grid(256), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf21
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((), (), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_2], Original ATen: [aten.dot]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_19.run(primals_11, buf22, buf23, 1, 256, grid=grid(1), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf22
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((256, 128, 3, 3), (1152, 9, 3, 1), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((256, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight_2, input_8], Original ATen: [aten.div, aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_div_20.run(buf2, buf23, buf24, buf25, 32768, 9, grid=grid(32768, 9), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = extern_kernels.convolution(buf20, buf25, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf26, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.bool)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, input_9], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_21.run(buf26, primals_13, buf27, 262144, grid=grid(262144), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 256, 18, 18), (82944, 1, 4608, 256), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, input_9, input_10], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22.run(buf27, buf26, primals_13, buf28, 331776, grid=grid(331776), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((512, 18), (18, 1), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_23.run(buf3, primals_16, buf29, 9216, 128, grid=grid(9216), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((512, ), (1, ), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_24.run(buf29, buf30, 512, 18, grid=grid(512), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf29
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((), (), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_3], Original ATen: [aten.dot]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_25.run(primals_15, buf30, buf31, 1, 512, grid=grid(1), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf30
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((512, 256, 3, 3), (2304, 9, 3, 1), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((512, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight_3, input_11], Original ATen: [aten.div, aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_div_26.run(buf3, buf31, buf32, buf33, 131072, 9, grid=grid(131072, 9), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = extern_kernels.convolution(buf28, buf33, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf34, (4, 512, 8, 8), (32768, 1, 4096, 512))
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf33
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = empty_strided_cuda((4, 512, 8, 8), (32768, 1, 4096, 512), torch.bool)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = empty_strided_cuda((4, 512, 8, 8), (32768, 64, 8, 1), torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_27.run(buf34, primals_17, buf35, buf36, 256, 512, grid=grid(256, 512), stream=stream0)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf34
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf36, buf8, buf16, buf24, buf32, buf0, primals_3, primals_4, buf1, primals_7, primals_8, buf2, primals_11, primals_12, buf3, primals_15, primals_16, buf4, buf7, buf8, buf11, buf12, buf15, buf16, buf19, buf20, buf23, buf24, buf27, buf28, buf31, buf32, buf35, )
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, 4, 7, 7), (196, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((196, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((128, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((576, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1152, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((512, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17])
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:06:47.621000 504416 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:06:47.648000 504416 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/dj/cdjsnszyom2fusf6xklxvtnreokkgefgjj6rgr3cryr6v6z2vvse.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['5_forward']
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3x/c3xmvpybmfnc62cgeakruueet65rcvnhdyyozmr4njvc27jgowqu.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 64}, tile_hint=TileHint.SQUARE,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 49*y3), xmask & ymask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 196*y1), tmp0, xmask & ymask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/go/cgo5yvcpsdo7ccayypnrczxk7qgcb2byi3l3urldeuo7w7driicv.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 8192, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 8192
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 576*y1), tmp0, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4n/c4nkl2c6l4tz3ixmrm42ed4wujb6nnj2rn6pxzlc2mi2ovxr6iyr.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32768, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32768
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3v/c3vtbyc7yinbl2k7gl7nvdvegxq3cywakfc52ynlfwnzjrp4kqps.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_3 = async_compile.triton('triton_poi_fused_3', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 131072
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6y/c6ywsg7hetpzjpwibzne2b5lyyhp47aeuxc6q4pbpqofmn6r4e7z.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.reflection_pad2d]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => _unsafe_index, _unsafe_index_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_1, [None, None, %sub_1, None]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %sub_1]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_reflection_pad2d_4 = async_compile.triton('triton_poi_fused_reflection_pad2d_4', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8192}, tile_hint=TileHint.SQUARE,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_reflection_pad2d_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_reflection_pad2d_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4900
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 70)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 70
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4095 + ((-1)*tl_math.abs((-63) + tl_math.abs((-3) + x2))) + ((-64)*tl_math.abs((-63) + tl_math.abs((-3) + x3))) + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x5 + 19600*y1), tmp0, xmask & ymask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vm/cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv => mul, sum_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %primals_4), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_5 = async_compile.triton('triton_red_fused_mv_5', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 128},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_5(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 98
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (2*x0 + 4*((r2 % 49)) + 196*x1 + (r2 // 49)), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 98*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/n7/cn72quq3cocwjzljupd3ugimkjoomlqadew6mwu3xzpt5pkregbk.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv => mul, sum_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %primals_4), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_6 = async_compile.triton('triton_per_fused_mv_6', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 2},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_6(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 2*x0), xmask, other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5r/c5rp26spx4maazycbo2beonvwxke2segwkf3y3nx53qiin36r2h6.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma], Original ATen: [aten.dot]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma => mul_1, sum_2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, %sum_1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_1,), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_7 = async_compile.triton('triton_per_fused_dot_7', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_7(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp3, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/td/ctdhatcmfujbrfb5cp6d5wrtrho4b4mgbl32jw4la4lhgfd6q372.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [weight, input_2], Original ATen: [aten.div, aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => convolution
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight => div
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_2, %sum_2), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_1, %div, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_div_8 = async_compile.triton('triton_poi_fused_convolution_div_8', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_div_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_div_8(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 196*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 49*y3), tmp3, xmask & ymask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 4*x2 + 196*y1), tmp3, xmask & ymask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/do/cdo36tieb2a3v57pg2qyzke7cfpai7rsxd2mbkk2d3owgxbzgmzs.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => convolution
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_1, %div, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_9 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_9', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_9(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sr/csrjdjzsrcukr2xi2xamwvotovs6hvx2cyykgiohygn35ogfqtl4.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => convolution
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => mul_2, where
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => _unsafe_index_2, _unsafe_index_3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_1, %div, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.2), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul_2), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %sub_5, None]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_2, [None, None, None, %sub_5]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1115136
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 66)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4224) % 66)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 278784
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (262080 + x0 + ((-4096)*tl_math.abs((-63) + tl_math.abs((-1) + x2))) + ((-64)*tl_math.abs((-63) + tl_math.abs((-1) + x1))) + 262144*x3), xmask).to(tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (262080 + x0 + ((-4096)*tl_math.abs((-63) + tl_math.abs((-1) + x2))) + ((-64)*tl_math.abs((-63) + tl_math.abs((-1) + x1))) + 262144*x3), xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(tmp0, tmp3, tmp5)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp6, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/u6/cu666laezw2iyqag5t7ao64gjhwqmhh5bd73aje56i5dcw7cejoi.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_1 => mul_3, sum_3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, %primals_8), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [1]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_11 = async_compile.triton('triton_red_fused_mv_11', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 128},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_11(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 640
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 116
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 5
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp9 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = r2 + 116*x0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.full([1, 1], 576, tl.int32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 < tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (64*(((r2 + 116*x0) % 9)) + 576*x1 + ((((r2 + 116*x0) // 9) % 64))), rmask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl.load(in_ptr1 + (r2 + 116*x0), rmask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp3 * tmp4
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tl.full(tmp5.shape, 0, tmp5.dtype)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tl.where(tmp2, tmp5, tmp6)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tl.broadcast_to(tmp7, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = _tmp9 + tmp8
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp9 = tl.where(rmask & xmask, tmp10, _tmp9)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sum(_tmp9, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp9, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_1 => mul_3, sum_3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, %primals_8), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [1]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_12 = async_compile.triton('triton_per_fused_mv_12', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 8},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_12(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 5
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 8
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 5*x0), rmask & xmask, other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(rmask & xmask, tmp1, 0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xz/cxzlppxu5bqkulbxrk63epy3yaqez2wrpgikez7wggw3hnd57suh.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_1], Original ATen: [aten.dot]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_1 => mul_4, sum_4
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, %sum_3), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_4,), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_13 = async_compile.triton('triton_per_fused_dot_13', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 128},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_13(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 128
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp3, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hs/chsslsmfnk7untiqij46yeb3khg6ojo74arremstybswpavcmcwb.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [weight_1, input_5], Original ATen: [aten.div, aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_1 => div_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_6, %sum_4), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_3, %div_1, %primals_9, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_div_14 = async_compile.triton('triton_poi_fused_convolution_div_14', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 8192, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_div_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_div_14(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 8192
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 64*x2 + 576*y1), xmask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp3, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 64*x2 + 576*y1), tmp3, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ku/ckuruezi257juono55wuuhrooo6ferm2qfqkvrus5xe7nthatn4y.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => gt_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_3, %div_1, %primals_9, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_15 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_15', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_15(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7c/c7cisrtarlmfwpcqs34o4s43ocscj6ezpndjaqqj24yeip2mv2k2.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, input_7], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => convolution_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => mul_5, where_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => _unsafe_index_4, _unsafe_index_5
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_3, %div_1, %primals_9, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.2), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_5), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where_1, [None, None, %sub_9, None]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_4, [None, None, None, %sub_9]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 591872
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 128) % 34)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4352) % 34)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 147968
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (130944 + x0 + ((-4096)*tl_math.abs((-31) + tl_math.abs((-1) + x2))) + ((-128)*tl_math.abs((-31) + tl_math.abs((-1) + x1))) + 131072*x3), xmask).to(tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (130944 + x0 + ((-4096)*tl_math.abs((-31) + tl_math.abs((-1) + x2))) + ((-128)*tl_math.abs((-31) + tl_math.abs((-1) + x1))) + 131072*x3), xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(tmp0, tmp3, tmp5)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp6, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fc/cfctj2if3j4y6mf366xpdlvpssf5f7crjl6hoa6abu4egsmimat4.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_2], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_2 => mul_6, sum_5
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_2, %primals_12), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_6, [1]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_17 = async_compile.triton('triton_red_fused_mv_17', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096, 'r': 128},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_17', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_17(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2304
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 9)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (128*(((r2 + 128*x0) % 9)) + 1152*x1 + ((r2 + 128*x0) // 9)), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 128*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hw/chwl32g5f4s4i6tkyuzmlme55jj3aag4b3v62oqaz6dmwszr3lv4.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_2], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_2 => mul_6, sum_5
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_2, %primals_12), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_6, [1]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_18 = async_compile.triton('triton_per_fused_mv_18', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 16},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_18(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 9*x0), rmask & xmask, other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(rmask & xmask, tmp1, 0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/g6/cg63sawcuw3llqzbch7acc5lgv4d5iu4ptwkticuzql37r22womo.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_2], Original ATen: [aten.dot]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_2 => mul_7, sum_6
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_11, %sum_5), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_7,), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_19 = async_compile.triton('triton_per_fused_dot_19', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_19', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_19(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z3/cz3y5mukpjyhvr5frybp6jwkbxmskzeumqp3k7mcwbkzyveaecps.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [weight_2, input_8], Original ATen: [aten.div, aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => convolution_2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_2 => div_2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_10, %sum_6), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_5, %div_2, %primals_13, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_div_20 = async_compile.triton('triton_poi_fused_convolution_div_20', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32768, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_div_20', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_div_20(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32768
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 128*x2 + 1152*y1), xmask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp3, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 128*x2 + 1152*y1), tmp3, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vj/cvjcdvbelas5u4qvdmjzbwgrnz6tlbk3riqfh4wdt6cokblixg7g.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, input_9], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => convolution_2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => gt_2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_5, %div_2, %primals_13, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_2, 0), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_21 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_21', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_21', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_21(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/27/c27n47fepscw673ol3xkpi5obbz2isp5dsqjjbwzyrv2n7hkjbfg.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, input_9, input_10], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => _unsafe_index_6, _unsafe_index_7
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => convolution_2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => mul_8, where_2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_5, %div_2, %primals_13, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_2, 0.2), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %convolution_2, %mul_8), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where_2, [None, None, %sub_13, None]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_6, [None, None, None, %sub_13]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 331776
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 18)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4608) % 18)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 82944
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (65280 + x0 + ((-4096)*tl_math.abs((-15) + tl_math.abs((-1) + x2))) + ((-256)*tl_math.abs((-15) + tl_math.abs((-1) + x1))) + 65536*x3), None).to(tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (65280 + x0 + ((-4096)*tl_math.abs((-15) + tl_math.abs((-1) + x2))) + ((-256)*tl_math.abs((-15) + tl_math.abs((-1) + x1))) + 65536*x3), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.where(tmp0, tmp3, tmp5)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp6, None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2s/c2ssd2vsebmkbp33liwbv3ajc3ojmywrg7razthpmz37tlupkxws.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_3 => mul_9, sum_7
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %primals_16), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_9, [1]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mv_23 = async_compile.triton('triton_red_fused_mv_23', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384, 'r': 128},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mv_23', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mv_23(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9216
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 18)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 18
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (256*(((r2 + 128*x0) % 9)) + 2304*x1 + ((r2 + 128*x0) // 9)), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r2 + 128*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vv/cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mv_3 => mul_9, sum_7
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %primals_16), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_9, [1]), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mv_24 = async_compile.triton('triton_per_fused_mv_24', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512, 'r': 32},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mv_24', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mv_24(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 18
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 18*x0), rmask & xmask, other=0.0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(rmask & xmask, tmp1, 0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/53/c534tdi22iq7plbqvtdfljjt2g465h6ndxl3vovm4kzorhbmf6nb.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigma_3], Original ATen: [aten.dot]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigma_3 => mul_10, sum_8
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_15, %sum_7), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_8 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%mul_10,), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_dot_25 = async_compile.triton('triton_per_fused_dot_25', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 512},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_dot_25', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_dot_25(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 512
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 512
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(tl.sum(tmp3, 0))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [weight_3, input_11], Original ATen: [aten.div, aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => convolution_3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_3 => div_3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_14, %sum_8), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_7, %div_3, %primals_17, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_div_26 = async_compile.triton('triton_poi_fused_convolution_div_26', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_div_26', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_div_26(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 131072
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 2304*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp3, xmask & ymask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 256*x2 + 2304*y1), tmp3, xmask & ymask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sn/csnv7xak3ajfacpz54ybn5r32qvqs6r5t2oxgx6z5nmxl4luk2i7.py
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => convolution_3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => gt_3, mul_11, where_3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_7, %div_3, %primals_17, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_3, 0), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_3, 0.2), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %convolution_3, %mul_11), kwargs = {})
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_27 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_27', '''
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 512}, tile_hint=TileHint.DEFAULT,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_27', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_27(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = (yindex % 64)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex // 64
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 512*y0), xmask & ymask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 512*y0), tmp4, xmask & ymask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y2 + 64*x1 + 32768*y3), tmp7, xmask & ymask)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17 = args
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 64, 64), (16384, 4096, 64, 1))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, 4, 7, 7), (196, 49, 7, 1))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (64, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (196, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (128, 64, 3, 3), (576, 9, 3, 1))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (128, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (576, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (128, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1152, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (512, 256, 3, 3), (2304, 9, 3, 1))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (512, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (2304, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (512, ), (1, ))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4, 7, 7), (196, 1, 28, 4), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_2, buf0, 256, 49, grid=grid(256, 49), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((128, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_6, buf1, 8192, 9, grid=grid(8192, 9), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((256, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_10, buf2, 32768, 9, grid=grid(32768, 9), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((512, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_3.run(primals_14, buf3, 131072, 9, grid=grid(131072, 9), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 70, 70), (19600, 1, 280, 4), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.reflection_pad2d]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_reflection_pad2d_4.run(primals_1, buf4, 16, 4900, grid=grid(16, 4900), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 2), (2, 1), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_5.run(buf0, primals_4, buf5, 128, 98, grid=grid(128), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_6.run(buf5, buf6, 64, 2, grid=grid(64), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((), (), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma], Original ATen: [aten.dot]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_7.run(primals_3, buf6, buf7, 1, 64, grid=grid(1), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((64, 4, 7, 7), (196, 49, 7, 1), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((64, 4, 7, 7), (196, 1, 28, 4), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight, input_2], Original ATen: [aten.div, aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_div_8.run(buf0, buf7, buf8, buf9, 256, 49, grid=grid(256, 49), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf4, buf9, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.bool)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_9.run(buf10, primals_5, buf11, 1048576, grid=grid(1048576), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 64, 66, 66), (278784, 1, 4224, 64), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10.run(buf11, buf10, primals_5, buf12, 1115136, grid=grid(1115136), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((128, 5), (5, 1), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_11.run(buf1, primals_8, buf13, 640, 116, grid=grid(640), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf5, (128, ), (1, ), 0); del buf5  # reuse
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_1], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_12.run(buf13, buf14, 128, 5, grid=grid(128), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((), (), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_1], Original ATen: [aten.dot]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_13.run(primals_7, buf14, buf15, 1, 128, grid=grid(1), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((128, 64, 3, 3), (576, 9, 3, 1), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((128, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight_1, input_5], Original ATen: [aten.div, aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_div_14.run(buf1, buf15, buf16, buf17, 8192, 9, grid=grid(8192, 9), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = extern_kernels.convolution(buf12, buf17, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf18, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.bool)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_15.run(buf18, primals_9, buf19, 524288, grid=grid(524288), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 128, 34, 34), (147968, 1, 4352, 128), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, input_7], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_reflection_pad2d_16.run(buf19, buf18, primals_9, buf20, 591872, grid=grid(591872), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((256, 9), (9, 1), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_2], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_17.run(buf2, primals_12, buf21, 2304, 128, grid=grid(2304), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_2], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_18.run(buf21, buf22, 256, 9, grid=grid(256), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf21
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((), (), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_2], Original ATen: [aten.dot]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_19.run(primals_11, buf22, buf23, 1, 256, grid=grid(1), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf22
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((256, 128, 3, 3), (1152, 9, 3, 1), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((256, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight_2, input_8], Original ATen: [aten.div, aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_div_20.run(buf2, buf23, buf24, buf25, 32768, 9, grid=grid(32768, 9), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = extern_kernels.convolution(buf20, buf25, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf26, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.bool)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, input_9], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_21.run(buf26, primals_13, buf27, 262144, grid=grid(262144), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 256, 18, 18), (82944, 1, 4608, 256), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, input_9, input_10], Original ATen: [aten.convolution, aten.leaky_relu, aten.reflection_pad2d]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_reflection_pad2d_22.run(buf27, buf26, primals_13, buf28, 331776, grid=grid(331776), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((512, 18), (18, 1), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mv_23.run(buf3, primals_16, buf29, 9216, 128, grid=grid(9216), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((512, ), (1, ), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mv_3], Original ATen: [aten.mv]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mv_24.run(buf29, buf30, 512, 18, grid=grid(512), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf29
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((), (), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigma_3], Original ATen: [aten.dot]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_dot_25.run(primals_15, buf30, buf31, 1, 512, grid=grid(1), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf30
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((512, 256, 3, 3), (2304, 9, 3, 1), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((512, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight_3, input_11], Original ATen: [aten.div, aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_div_26.run(buf3, buf31, buf32, buf33, 131072, 9, grid=grid(131072, 9), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = extern_kernels.convolution(buf28, buf33, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf34, (4, 512, 8, 8), (32768, 1, 4096, 512))
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf33
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = empty_strided_cuda((4, 512, 8, 8), (32768, 1, 4096, 512), torch.bool)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = empty_strided_cuda((4, 512, 8, 8), (32768, 64, 8, 1), torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_27.run(buf34, primals_17, buf35, buf36, 256, 512, grid=grid(256, 512), stream=stream0)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf34
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf36, buf8, buf16, buf24, buf32, buf0, primals_3, primals_4, buf1, primals_7, primals_8, buf2, primals_11, primals_12, buf3, primals_15, primals_16, buf4, buf7, buf8, buf11, buf12, buf15, buf16, buf19, buf20, buf23, buf24, buf27, buf28, buf31, buf32, buf35, )
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, 4, 7, 7), (196, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((196, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((128, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((576, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1152, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((512, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17])
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:57:01.896000 3241715 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:57:01.929000 3241715 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/nx/cnxx2k54vtlkmbhp2vlmngingk5thcvdqzxymgx3yb7rme6ubl5y.py
