V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [inverse_temperature, inverse_temperature_1, neg_dist_1, max_1, neg_dist_2, logsumexp], Original ATen: [aten.exp, aten.clamp, aten.mul, aten.max, aten.sub, aten.logsumexp]
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inverse_temperature => exp
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inverse_temperature_1 => clamp_max
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logsumexp => abs_1, amax, eq, exp_1, full_default, sub_2, sum_1, where
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_dist_1 => mul_1
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_dist_2 => sub_1
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%primals_1,), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%exp, inf), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, %clamp_max), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%mul_1, 1, True), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_1, %getitem), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=2] = call_function[target=torch.ops.aten.amax.default](args = (%sub_1, [1], True), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%amax,), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%abs_1, inf), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%eq, %full_default, %amax), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %where), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1]), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0 = async_compile.triton('triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0', '''
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.exp(tmp2)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = float("inf")
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.minimum(tmp3, tmp4)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp5
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp6, tmp8)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp5
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp9, tmp11)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp5
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp12, tmp14)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp6 - tmp15
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 - tmp15
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp16, tmp17)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp11 - tmp15
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = triton_helpers.maximum(tmp18, tmp19)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 - tmp15
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp20, tmp21)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl_math.abs(tmp22)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 == tmp4
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = 0.0
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp25, tmp22)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 - tmp26
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.exp(tmp27)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp17 - tmp26
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp28 + tmp30
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp19 - tmp26
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl_math.exp(tmp32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 + tmp33
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp21 - tmp26
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl_math.exp(tmp35)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 + tmp36
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp15, xmask)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp22, xmask)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp37, xmask)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/so/csop5o7ehzov3ebto6cq4qsy2beoydvi5rpg6mivabe67nyvspf2.py
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [inverse_temperature, inverse_temperature_1, pos_dist_1, pos_dist_2, neg, align, logsumexp, uniform, c_mean, align_corrected, uniform_corrected, add_1], Original ATen: [aten.exp, aten.clamp, aten.mul, aten.sub, aten.neg, aten.mean, aten.logsumexp, aten.add]
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_2
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   align => mean
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   align_corrected => sub_3
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   c_mean => mean_2
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inverse_temperature => exp
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inverse_temperature_1 => clamp_max
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logsumexp => add, log
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos_dist_1 => mul
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos_dist_2 => sub
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   uniform => mean_1
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   uniform_corrected => add_1
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%primals_1,), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%exp, inf), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %clamp_max), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, %squeeze), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sub,), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.default](args = (%neg,), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_1,), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%log, %squeeze_1), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.default](args = (%add,), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=2] = call_function[target=torch.ops.aten.mean.default](args = (%getitem,), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean, %mean_2), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, %mean_2), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, %mean_1), kwargs = {})
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1 = async_compile.triton('triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1', '''
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': (8,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 17, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr2, out_ptr3, out_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (0))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp3, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (1))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (2))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.broadcast_to(tmp21, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (2))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (3))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.broadcast_to(tmp31, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr1 + (3))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.broadcast_to(tmp34, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr2 + (0))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.broadcast_to(tmp43, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr3 + (0))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.broadcast_to(tmp45, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr4 + (0))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.broadcast_to(tmp50, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr2 + (1))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.broadcast_to(tmp54, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr4 + (1))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.broadcast_to(tmp57, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr2 + (2))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.broadcast_to(tmp62, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr4 + (2))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.broadcast_to(tmp65, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr2 + (3))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.broadcast_to(tmp70, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr4 + (3))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.broadcast_to(tmp73, [XBLOCK])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl_math.log(tmp1)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl_math.abs(tmp4)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = float("inf")
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 == tmp6
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.0
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp7, tmp8, tmp4)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl_math.log(tmp12)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.abs(tmp15)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 == tmp6
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp17, tmp8, tmp15)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp13 + tmp18
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp10 + tmp19
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl_math.log(tmp22)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.abs(tmp25)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 == tmp6
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp27, tmp8, tmp25)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 + tmp28
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp20 + tmp29
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl_math.log(tmp32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl_math.abs(tmp35)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 == tmp6
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp37, tmp8, tmp35)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp33 + tmp38
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp30 + tmp39
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = 4.0
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 / tmp41
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl_math.exp(tmp46)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = triton_helpers.minimum(tmp47, tmp6)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp44 * tmp48
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 - tmp51
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = -tmp52
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 * tmp48
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp56 - tmp58
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = -tmp59
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp53 + tmp60
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp48
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp64 - tmp66
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = -tmp67
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp61 + tmp68
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 * tmp48
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp72 - tmp74
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = -tmp75
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp69 + tmp76
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp77 / tmp41
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp51 + tmp58
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp79 + tmp66
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp80 + tmp74
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81 / tmp41
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp78 - tmp82
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp42 + tmp82
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp78 + tmp42
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (tl.full([XBLOCK], 0, tl.int32)), tmp83, None)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (tl.full([XBLOCK], 0, tl.int32)), tmp84, None)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (tl.full([XBLOCK], 0, tl.int32)), tmp85, None)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (), ())
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 1), (1, 1, 1), torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pos_dist], Original ATen: [aten.bmm]
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_2, (4, 1, 4), (4, 4, 1), 0), reinterpret_tensor(primals_3, (4, 4, 1), (4, 1, 1), 0), out=buf0)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [neg_dist], Original ATen: [aten.bmm]
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_2, (1, 4, 4), (16, 4, 1), 0), reinterpret_tensor(primals_4, (1, 4, 4), (0, 1, 4), 0), out=buf1)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [inverse_temperature, inverse_temperature_1, neg_dist_1, max_1, neg_dist_2, logsumexp], Original ATen: [aten.exp, aten.clamp, aten.mul, aten.max, aten.sub, aten.logsumexp]
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0.run(buf1, primals_1, buf2, buf4, buf5, 4, grid=grid(4), stream=stream0)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((), (), torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((), (), torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((), (), torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [inverse_temperature, inverse_temperature_1, pos_dist_1, pos_dist_2, neg, align, logsumexp, uniform, c_mean, align_corrected, uniform_corrected, add_1], Original ATen: [aten.exp, aten.clamp, aten.mul, aten.sub, aten.neg, aten.mean, aten.logsumexp, aten.add]
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1.run(buf5, buf4, buf0, primals_1, buf2, buf8, buf9, buf7, 1, grid=grid(1), stream=stream0)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf8, buf9, primals_1, buf0, buf1, )
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:26:04.796000 3465118 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:26:04.800000 3465118 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gs/cgsbpslzm5nghgxcoy6fkp4xfppefujpe6tim4nzpvivmrtlp3da.py
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [inverse_temperature, inverse_temperature_1, neg_dist_1, max_1, neg_dist_2, logsumexp], Original ATen: [aten.exp, aten.clamp, aten.mul, aten.max, aten.sub, aten.logsumexp]
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inverse_temperature => exp
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inverse_temperature_1 => clamp_max
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logsumexp => abs_1, amax, eq, exp_1, full_default, sub_2, sum_1, where
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_dist_1 => mul_1
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_dist_2 => sub_1
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%primals_1,), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%exp, inf), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, %clamp_max), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%mul_1, 1, True), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_1, %getitem), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=2] = call_function[target=torch.ops.aten.amax.default](args = (%sub_1, [1], True), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%amax,), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%abs_1, inf), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%eq, %full_default, %amax), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %where), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1]), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0 = async_compile.triton('triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0', '''
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.exp(tmp2)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = float("inf")
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.minimum(tmp3, tmp4)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp5
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp6, tmp8)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp5
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp9, tmp11)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp5
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp12, tmp14)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp6 - tmp15
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 - tmp15
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp16, tmp17)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp11 - tmp15
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = triton_helpers.maximum(tmp18, tmp19)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 - tmp15
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp20, tmp21)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl_math.abs(tmp22)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 == tmp4
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = 0.0
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp25, tmp22)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 - tmp26
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.exp(tmp27)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp17 - tmp26
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp28 + tmp30
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp19 - tmp26
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl_math.exp(tmp32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 + tmp33
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp21 - tmp26
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl_math.exp(tmp35)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 + tmp36
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp15, xmask)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp22, xmask)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp37, xmask)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/so/csop5o7ehzov3ebto6cq4qsy2beoydvi5rpg6mivabe67nyvspf2.py
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [inverse_temperature, inverse_temperature_1, pos_dist_1, pos_dist_2, neg, align, logsumexp, uniform, c_mean, align_corrected, uniform_corrected, add_1], Original ATen: [aten.exp, aten.clamp, aten.mul, aten.sub, aten.neg, aten.mean, aten.logsumexp, aten.add]
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_2
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   align => mean
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   align_corrected => sub_3
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   c_mean => mean_2
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inverse_temperature => exp
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inverse_temperature_1 => clamp_max
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logsumexp => add, log
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos_dist_1 => mul
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pos_dist_2 => sub
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   uniform => mean_1
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   uniform_corrected => add_1
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%primals_1,), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%exp, inf), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %clamp_max), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, %squeeze), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sub,), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.default](args = (%neg,), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_1,), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%log, %squeeze_1), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.default](args = (%add,), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=2] = call_function[target=torch.ops.aten.mean.default](args = (%getitem,), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean, %mean_2), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, %mean_2), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, %mean_1), kwargs = {})
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1 = async_compile.triton('triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1', '''
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': (8,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 17, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr2, out_ptr3, out_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (0))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp3, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (1))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (2))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.broadcast_to(tmp21, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (2))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (3))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.broadcast_to(tmp31, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr1 + (3))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.broadcast_to(tmp34, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr2 + (0))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.broadcast_to(tmp43, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr3 + (0))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.broadcast_to(tmp45, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr4 + (0))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.broadcast_to(tmp50, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr2 + (1))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.broadcast_to(tmp54, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr4 + (1))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.broadcast_to(tmp57, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr2 + (2))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.broadcast_to(tmp62, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr4 + (2))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.broadcast_to(tmp65, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr2 + (3))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.broadcast_to(tmp70, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr4 + (3))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.broadcast_to(tmp73, [XBLOCK])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl_math.log(tmp1)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl_math.abs(tmp4)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = float("inf")
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 == tmp6
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.0
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp7, tmp8, tmp4)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl_math.log(tmp12)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.abs(tmp15)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 == tmp6
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp17, tmp8, tmp15)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp13 + tmp18
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp10 + tmp19
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl_math.log(tmp22)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.abs(tmp25)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 == tmp6
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp27, tmp8, tmp25)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 + tmp28
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp20 + tmp29
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl_math.log(tmp32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl_math.abs(tmp35)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 == tmp6
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp37, tmp8, tmp35)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp33 + tmp38
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp30 + tmp39
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = 4.0
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 / tmp41
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl_math.exp(tmp46)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = triton_helpers.minimum(tmp47, tmp6)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp44 * tmp48
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 - tmp51
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = -tmp52
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 * tmp48
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp56 - tmp58
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = -tmp59
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp53 + tmp60
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp48
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp64 - tmp66
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = -tmp67
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp61 + tmp68
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 * tmp48
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp72 - tmp74
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = -tmp75
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp69 + tmp76
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp77 / tmp41
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp51 + tmp58
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp79 + tmp66
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp80 + tmp74
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81 / tmp41
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp78 - tmp82
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp42 + tmp82
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp78 + tmp42
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (tl.full([XBLOCK], 0, tl.int32)), tmp83, None)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (tl.full([XBLOCK], 0, tl.int32)), tmp84, None)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (tl.full([XBLOCK], 0, tl.int32)), tmp85, None)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (), ())
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 1), (1, 1, 1), torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pos_dist], Original ATen: [aten.bmm]
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_2, (4, 1, 4), (4, 4, 1), 0), reinterpret_tensor(primals_3, (4, 4, 1), (4, 1, 1), 0), out=buf0)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [neg_dist], Original ATen: [aten.bmm]
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_2, (1, 4, 4), (16, 4, 1), 0), reinterpret_tensor(primals_4, (1, 4, 4), (0, 1, 4), 0), out=buf1)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [inverse_temperature, inverse_temperature_1, neg_dist_1, max_1, neg_dist_2, logsumexp], Original ATen: [aten.exp, aten.clamp, aten.mul, aten.max, aten.sub, aten.logsumexp]
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0.run(buf1, primals_1, buf2, buf4, buf5, 4, grid=grid(4), stream=stream0)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((), (), torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((), (), torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((), (), torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [inverse_temperature, inverse_temperature_1, pos_dist_1, pos_dist_2, neg, align, logsumexp, uniform, c_mean, align_corrected, uniform_corrected, add_1], Original ATen: [aten.exp, aten.clamp, aten.mul, aten.sub, aten.neg, aten.mean, aten.logsumexp, aten.add]
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_exp_logsumexp_mean_mul_neg_sub_1.run(buf5, buf4, buf0, primals_1, buf2, buf8, buf9, buf7, 1, grid=grid(1), stream=stream0)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf8, buf9, primals_1, buf0, buf1, )
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:16:01.853000 2116845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:16:01.859000 2116845 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/k5/ck5wmdgqvnqri73yhis72pui4inlm7wuj4jhzefwkxpr77o2foe6.py
