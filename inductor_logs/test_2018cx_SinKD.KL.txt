V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_inference']
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/be/cbe2wf7zw4r52qzaxcmhri6uwqcfja7uyfpeill4qibufrn7pva7.py
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => amax_1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_1, [-1], True), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax_0 = async_compile.triton('triton_red_fused__log_softmax_0', '''
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp2 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 8032*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = triton_helpers.maximum(_tmp2, tmp1)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp2 = tl.where(rmask & xmask, tmp3, _tmp2)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.max2(_tmp2, 1)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ra/crabigd6v3wgdbhh54cck4o2nhnfwxpsh6aortcc4muodu4pxs52.py
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => amax_1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_1, [-1], True), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__log_softmax_1 = async_compile.triton('triton_per_fused__log_softmax_1', '''
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 4},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__log_softmax_1(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 4*x0), xmask, other=0.0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gi/cgihnn2dfjlggohq4qkjk2tbe4k7widahwckg7ppwcrenb72c77s.py
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => exp_1, sub_2, sum_2
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax_2 = async_compile.triton('triton_red_fused__log_softmax_2', '''
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax_2(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp5 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl_math.exp(tmp2)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, RBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = _tmp5 + tmp4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp5 = tl.where(rmask & xmask, tmp6, _tmp5)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(_tmp5, 1)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp5, xmask)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i4/ci44mtzytvsk33va3uuy3plym7njwo2bl76ijna3kzz5irnlogky.py
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => exp_1, sub_2, sum_2
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__log_softmax_3 = async_compile.triton('triton_per_fused__log_softmax_3', '''
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 4},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__log_softmax_3(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 4*x0), xmask, other=0.0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yp/cypqudo7s3mxxqr67xllgucvfdztfhpokdm32moa3eed3wmgnjkk.py
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => log_1, sub_2, sub_3
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_2, %log_1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, 1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [-1], True), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax_4 = async_compile.triton('triton_red_fused__log_softmax_4', '''
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp9 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl_math.log(tmp3)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp2 - tmp4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = 1.0
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tmp5 * tmp6
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tl.broadcast_to(tmp7, [XBLOCK, RBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = triton_helpers.maximum(_tmp9, tmp8)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp9 = tl.where(rmask & xmask, tmp10, _tmp9)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.max2(_tmp9, 1)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp9, xmask)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/b3/cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1, p_t], Original ATen: [aten._log_softmax, aten._softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_t => exp_3, sum_4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => log_1, sub_2, sub_3
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_2, %log_1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, 1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_3 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_3, [-1], True), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax__softmax_5 = async_compile.triton('triton_red_fused__log_softmax__softmax_5', '''
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax__softmax_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax__softmax_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp13 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl_math.log(tmp3)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp2 - tmp4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = 1.0
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tmp5 * tmp6
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp7 - tmp8
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp9 * tmp6
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tl_math.exp(tmp10)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp12 = tl.broadcast_to(tmp11, [XBLOCK, RBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp14 = _tmp13 + tmp12
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp13 = tl.where(rmask & xmask, tmp14, _tmp13)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.sum(_tmp13, 1)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp13, xmask)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/b4/cb476mfmtunxk3kfwctyqltxtrr5chgtz2lztgdpnjimlkzdtn5i.py
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1, p_t, y_s_1, p_s, mul, sum_1], Original ATen: [aten._log_softmax, aten._softmax, aten.mul, aten.sum]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_s => log_2, sub_5
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_t => div_2, exp_3
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_5
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_s_1 => log, sub, sub_1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => log_1, sub_2, sub_3
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_2, %log_1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, 1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_3 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_3, %sum_4), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %amax), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_1,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, %log), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor_1 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, 1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor_1, %amax_default_1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor_1, 1), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_2 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_3,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_tensor_1, %log_2), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %sub_5), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [-1]), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax__softmax_mul_sum_6 = async_compile.triton('triton_red_fused__log_softmax__softmax_mul_sum_6', '''
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax__softmax_mul_sum_6', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax__softmax_mul_sum_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr8 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr9 + (x1), xmask, eviction_policy='evict_last')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp29 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp14 = tl.load(in_ptr5 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl_math.log(tmp3)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp2 - tmp4
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = 1.0
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tmp5 * tmp6
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp7 - tmp8
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp9 * tmp6
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tl_math.exp(tmp10)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp13 = tmp11 / tmp12
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp16 = tmp14 - tmp15
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp18 = tl_math.log(tmp17)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp19 = tmp16 - tmp18
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = tmp19 * tmp6
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp22 = tmp20 - tmp21
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp23 = tmp22 * tmp6
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp25 = tl_math.log(tmp24)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp26 = tmp23 - tmp25
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp27 = tmp13 * tmp26
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp28 = tl.broadcast_to(tmp27, [XBLOCK, RBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp30 = _tmp29 + tmp28
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp29 = tl.where(rmask & xmask, tmp30, _tmp29)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.sum(_tmp29, 1)[:, None]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp29, xmask)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jb/cjbkqebkkg3a44nogjkwfpntwpav5rfxrtbh2kuppqqa5legczqn.py
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean, loss], Original ATen: [aten.mean, aten.neg]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => neg
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_5,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mean,), kwargs = {})
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_neg_7 = async_compile.triton('triton_poi_fused_mean_neg_7', '''
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_neg_7', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_neg_7(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1))
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2))
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3))
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 4.0
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = -tmp12
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp13, None)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 32128), (32128, 1))
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 32128), (32128, 1))
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 4), (4, 16, 1), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_0.run(arg1_1, buf0, 16, 8032, grid=grid(16), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_1.run(buf0, buf1, 4, 4, grid=grid(4), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf0; del buf0  # reuse
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_2.run(arg1_1, buf1, buf2, 16, 8032, grid=grid(16), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf2, buf3, 4, 4, grid=grid(4), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf2; del buf2  # reuse
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_4.run(arg1_1, buf1, buf3, buf4, 16, 8032, grid=grid(16), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_1.run(buf4, buf5, 4, 4, grid=grid(4), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1, p_t], Original ATen: [aten._log_softmax, aten._softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax__softmax_5.run(arg1_1, buf1, buf3, buf5, buf6, 16, 8032, grid=grid(16), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1, p_t], Original ATen: [aten._log_softmax, aten._softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf6, buf7, 4, 4, grid=grid(4), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf6; del buf6  # reuse
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_0.run(arg0_1, buf8, 16, 8032, grid=grid(16), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_1.run(buf8, buf9, 4, 4, grid=grid(4), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf8; del buf8  # reuse
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_2.run(arg0_1, buf9, buf10, 16, 8032, grid=grid(16), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf10, buf11, 4, 4, grid=grid(4), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf10; del buf10  # reuse
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_4.run(arg0_1, buf9, buf11, buf12, 16, 8032, grid=grid(16), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_1.run(buf12, buf13, 4, 4, grid=grid(4), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = buf12; del buf12  # reuse
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1, p_s], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax__softmax_5.run(arg0_1, buf9, buf11, buf13, buf14, 16, 8032, grid=grid(16), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1, p_s], Original ATen: [aten._log_softmax]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf14, buf15, 4, 4, grid=grid(4), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = reinterpret_tensor(buf14, (4, 4), (4, 1), 0); del buf14  # reuse
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1, p_t, y_s_1, p_s, mul, sum_1], Original ATen: [aten._log_softmax, aten._softmax, aten.mul, aten.sum]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax__softmax_mul_sum_6.run(arg1_1, buf1, buf3, buf5, buf7, arg0_1, buf9, buf11, buf13, buf15, buf17, 16, 8032, grid=grid(16), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf9, (4, ), (1, ), 0); del buf9  # reuse
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_1], Original ATen: [aten.sum]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf17, buf18, 4, 4, grid=grid(4), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((), (), torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean, loss], Original ATen: [aten.mean, aten.neg]
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_neg_7.run(buf18, buf19, 1, grid=grid(1), stream=stream0)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf19, )
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 32128), (32128, 1), device='cuda:0', dtype=torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 32128), (32128, 1), device='cuda:0', dtype=torch.float32)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:21:27.273000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:27.280000 3326316 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xn/cxnhkpz3zfdmd6thbq2yyhpbcl53672ittplvkqyyxfwaawvtfcm.py
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_inference']
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/be/cbe2wf7zw4r52qzaxcmhri6uwqcfja7uyfpeill4qibufrn7pva7.py
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => amax_1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_1, [-1], True), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax_0 = async_compile.triton('triton_red_fused__log_softmax_0', '''
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp2 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 8032*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = triton_helpers.maximum(_tmp2, tmp1)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp2 = tl.where(rmask & xmask, tmp3, _tmp2)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.max2(_tmp2, 1)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ra/crabigd6v3wgdbhh54cck4o2nhnfwxpsh6aortcc4muodu4pxs52.py
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => amax_1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_1, [-1], True), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__log_softmax_1 = async_compile.triton('triton_per_fused__log_softmax_1', '''
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 4},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__log_softmax_1(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 4*x0), xmask, other=0.0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gi/cgihnn2dfjlggohq4qkjk2tbe4k7widahwckg7ppwcrenb72c77s.py
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => exp_1, sub_2, sum_2
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax_2 = async_compile.triton('triton_red_fused__log_softmax_2', '''
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax_2(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp5 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl_math.exp(tmp2)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, RBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = _tmp5 + tmp4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp5 = tl.where(rmask & xmask, tmp6, _tmp5)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(_tmp5, 1)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp5, xmask)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i4/ci44mtzytvsk33va3uuy3plym7njwo2bl76ijna3kzz5irnlogky.py
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => exp_1, sub_2, sum_2
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__log_softmax_3 = async_compile.triton('triton_per_fused__log_softmax_3', '''
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 4},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__log_softmax_3(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 4*x0), xmask, other=0.0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yp/cypqudo7s3mxxqr67xllgucvfdztfhpokdm32moa3eed3wmgnjkk.py
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => log_1, sub_2, sub_3
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_2, %log_1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, 1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [-1], True), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax_4 = async_compile.triton('triton_red_fused__log_softmax_4', '''
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp9 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl_math.log(tmp3)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp2 - tmp4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = 1.0
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tmp5 * tmp6
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tl.broadcast_to(tmp7, [XBLOCK, RBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = triton_helpers.maximum(_tmp9, tmp8)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp9 = tl.where(rmask & xmask, tmp10, _tmp9)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.max2(_tmp9, 1)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp9, xmask)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/b3/cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1, p_t], Original ATen: [aten._log_softmax, aten._softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_t => exp_3, sum_4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => log_1, sub_2, sub_3
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_2, %log_1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, 1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_3 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_3, [-1], True), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax__softmax_5 = async_compile.triton('triton_red_fused__log_softmax__softmax_5', '''
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax__softmax_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax__softmax_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp13 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl_math.log(tmp3)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp2 - tmp4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = 1.0
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tmp5 * tmp6
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp7 - tmp8
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp9 * tmp6
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tl_math.exp(tmp10)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp12 = tl.broadcast_to(tmp11, [XBLOCK, RBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp14 = _tmp13 + tmp12
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp13 = tl.where(rmask & xmask, tmp14, _tmp13)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.sum(_tmp13, 1)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp13, xmask)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/b4/cb476mfmtunxk3kfwctyqltxtrr5chgtz2lztgdpnjimlkzdtn5i.py
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_t_1, p_t, y_s_1, p_s, mul, sum_1], Original ATen: [aten._log_softmax, aten._softmax, aten.mul, aten.sum]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_s => log_2, sub_5
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_t => div_2, exp_3
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_5
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_s_1 => log, sub, sub_1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_t_1 => log_1, sub_2, sub_3
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %amax_1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_2, %log_1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, 1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_3 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_3, %sum_4), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %amax), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_1,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, %log), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor_1 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, 1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor_1, %amax_default_1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor_1, 1), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_2 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_3,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_tensor_1, %log_2), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %sub_5), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [-1]), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__log_softmax__softmax_mul_sum_6 = async_compile.triton('triton_red_fused__log_softmax__softmax_mul_sum_6', '''
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8192},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax__softmax_mul_sum_6', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__log_softmax__softmax_mul_sum_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8032
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr8 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr9 + (x1), xmask, eviction_policy='evict_last')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp29 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp14 = tl.load(in_ptr5 + (r2 + 8032*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl_math.log(tmp3)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp2 - tmp4
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = 1.0
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tmp5 * tmp6
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp7 - tmp8
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp9 * tmp6
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tl_math.exp(tmp10)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp13 = tmp11 / tmp12
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp16 = tmp14 - tmp15
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp18 = tl_math.log(tmp17)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp19 = tmp16 - tmp18
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = tmp19 * tmp6
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp22 = tmp20 - tmp21
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp23 = tmp22 * tmp6
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp25 = tl_math.log(tmp24)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp26 = tmp23 - tmp25
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp27 = tmp13 * tmp26
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp28 = tl.broadcast_to(tmp27, [XBLOCK, RBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp30 = _tmp29 + tmp28
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp29 = tl.where(rmask & xmask, tmp30, _tmp29)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.sum(_tmp29, 1)[:, None]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp29, xmask)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/jb/cjbkqebkkg3a44nogjkwfpntwpav5rfxrtbh2kuppqqa5legczqn.py
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean, loss], Original ATen: [aten.mean, aten.neg]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => neg
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_5,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mean,), kwargs = {})
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_neg_7 = async_compile.triton('triton_poi_fused_mean_neg_7', '''
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_neg_7', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_neg_7(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1))
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2))
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3))
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 4.0
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = -tmp12
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp13, None)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 32128), (32128, 1))
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 32128), (32128, 1))
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 4), (4, 16, 1), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_0.run(arg1_1, buf0, 16, 8032, grid=grid(16), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_1.run(buf0, buf1, 4, 4, grid=grid(4), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf0; del buf0  # reuse
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_2.run(arg1_1, buf1, buf2, 16, 8032, grid=grid(16), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf2, buf3, 4, 4, grid=grid(4), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf2; del buf2  # reuse
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_4.run(arg1_1, buf1, buf3, buf4, 16, 8032, grid=grid(16), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_1.run(buf4, buf5, 4, 4, grid=grid(4), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1, p_t], Original ATen: [aten._log_softmax, aten._softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax__softmax_5.run(arg1_1, buf1, buf3, buf5, buf6, 16, 8032, grid=grid(16), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1, p_t], Original ATen: [aten._log_softmax, aten._softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf6, buf7, 4, 4, grid=grid(4), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf6; del buf6  # reuse
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_0.run(arg0_1, buf8, 16, 8032, grid=grid(16), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_1.run(buf8, buf9, 4, 4, grid=grid(4), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf8; del buf8  # reuse
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_2.run(arg0_1, buf9, buf10, 16, 8032, grid=grid(16), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf10, buf11, 4, 4, grid=grid(4), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf10; del buf10  # reuse
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax_4.run(arg0_1, buf9, buf11, buf12, 16, 8032, grid=grid(16), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_1.run(buf12, buf13, 4, 4, grid=grid(4), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = buf12; del buf12  # reuse
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1, p_s], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax__softmax_5.run(arg0_1, buf9, buf11, buf13, buf14, 16, 8032, grid=grid(16), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 1), (1, 4), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_s_1, p_s], Original ATen: [aten._log_softmax]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf14, buf15, 4, 4, grid=grid(4), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = reinterpret_tensor(buf14, (4, 4), (4, 1), 0); del buf14  # reuse
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_t_1, p_t, y_s_1, p_s, mul, sum_1], Original ATen: [aten._log_softmax, aten._softmax, aten.mul, aten.sum]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__log_softmax__softmax_mul_sum_6.run(arg1_1, buf1, buf3, buf5, buf7, arg0_1, buf9, buf11, buf13, buf15, buf17, 16, 8032, grid=grid(16), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf9, (4, ), (1, ), 0); del buf9  # reuse
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_1], Original ATen: [aten.sum]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax_3.run(buf17, buf18, 4, 4, grid=grid(4), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((), (), torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean, loss], Original ATen: [aten.mean, aten.neg]
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_neg_7.run(buf18, buf19, 1, grid=grid(1), stream=stream0)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf19, )
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 32128), (32128, 1), device='cuda:0', dtype=torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 32128), (32128, 1), device='cuda:0', dtype=torch.float32)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:11:29.274000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:29.292000 1954318 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/bx/cbx7whcvdedhfha2lkxh6vghkzijol4ooclcu4jvhahxaiuju7et.py
