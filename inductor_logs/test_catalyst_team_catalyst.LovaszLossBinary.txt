V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['37_inference']
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bi/cbidvvppow55ovsd3ldirnuri4ao4mv2bleubtzbebhqnb6l54gp.py
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, signs, mul_1, errors, sort, gt_sorted, gts, cumsum, sub_3, cumsum_1], Original ATen: [aten.mul, aten.sub, aten.rsub, aten.sort, aten.index, aten.sum, aten.cumsum]
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cumsum => cumsum
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cumsum_1 => cumsum_1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   errors => sub_1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt_sorted => index
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gts => sum_1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   signs => sub
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sort => sort
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, 2.0), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, 1.0), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %sub), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %mul_1), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sort : [num_users=2] = call_function[target=torch.ops.aten.sort.default](args = (%sub_1, 0, True), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=3] = call_function[target=torch.ops.aten.index.Tensor](args = (%view_1, [%getitem_1]), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%index,), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%index, 0), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %index), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum_1 : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%sub_3, 0), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0 = async_compile.triton('triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0', '''
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0(in_ptr0, in_ptr1, out_ptr0, out_ptr2, out_ptr3, out_ptr4, xnumel, rnumel):
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 2.0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 - tmp4
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 - tmp6
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = r0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int16)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.broadcast_to(tmp7, [RBLOCK])
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.broadcast_to(tmp9, [RBLOCK])
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12, tmp13, = triton_helpers.sort_with_index(tmp10, tmp11, None, 0, stable=False, descending=True)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13.to(tl.int64)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([RBLOCK], 256, tl.int32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 < 0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp17, tmp16, tmp14)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp18) & (tmp18 < 256), "index out of bounds: 0 <= tmp18 < 256")
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (tmp18), None, eviction_policy='evict_last')
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [RBLOCK])
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.promote_to_tensor(tl.sum(tmp21, 0))
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20.to(tl.float32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [RBLOCK])
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26, = tl.associative_scan((tmp25,), 0, _triton_helper_fn_add0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp4 - tmp20
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27.to(tl.float32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.broadcast_to(tmp28, [RBLOCK])
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30, = tl.associative_scan((tmp29,), 0, _triton_helper_fn_add0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(r0, [RBLOCK])), tmp12, None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (tl.broadcast_to(r0, [RBLOCK])), tmp26, None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (tl.broadcast_to(r0, [RBLOCK])), tmp30, None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (tl.full([1], 0, tl.int32)), tmp23, None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7o/c7ozq2psro2uaxn24cezpycrpv2xhuzc23kb5icmg6jh74x4by7w.py
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [intersection, union, truediv, jaccard, relu, sub_5, loss], Original ATen: [aten.sub, aten.add, aten.div, aten.rsub, aten.relu, aten.dot]
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   intersection => sub_2
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   jaccard => sub_4
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => mul_2, sum_2
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu => relu
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   union => add
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sum_1, %cumsum), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %cumsum_1), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_2, %add), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=4] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %div), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%getitem,), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_1, %slice_2), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%sub_4, %sub_5, 0, 1, 256), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%relu, %slice_scatter_default), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%mul_2,), kwargs = {})
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_dot_relu_rsub_sub_1 = async_compile.triton('triton_per_fused_add_div_dot_relu_rsub_sub_1', '''
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_dot_relu_rsub_sub_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 9, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_dot_relu_rsub_sub_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, rnumel):
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_out_ptr0 + (0))
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [RBLOCK])
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_out_ptr0 + (0))
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [RBLOCK])
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (r0), None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (r0), None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = r0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 >= tmp4
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp5, other=0.0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 - tmp8
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (tl.broadcast_to(r0, [RBLOCK])), tmp5, other=0.0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 + tmp10
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 / tmp11
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 - tmp12
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (tl.broadcast_to((-1) + r0, [RBLOCK])), tmp5, other=0.0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 - tmp15
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr2 + (tl.broadcast_to((-1) + r0, [RBLOCK])), tmp5, other=0.0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp7 + tmp17
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 / tmp18
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp13 - tmp19
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 - tmp20
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp5, tmp21, tmp22)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 - tmp26
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 + tmp28
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp27 / tmp29
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 1.0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 - tmp30
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp5, tmp23, tmp32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp2 * tmp33
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.broadcast_to(tmp34, [RBLOCK])
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.promote_to_tensor(tl.sum(tmp35, 0))
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp37, None)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((), (), torch.float32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, signs, mul_1, errors, sort, gt_sorted, gts, cumsum, sub_3, cumsum_1], Original ATen: [aten.mul, aten.sub, aten.rsub, aten.sort, aten.index, aten.sum, aten.cumsum]
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0.run(arg0_1, arg1_1, buf0, buf2, buf3, buf4, 1, 256, grid=grid(1), stream=stream0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf2; del buf2  # reuse
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [intersection, union, truediv, jaccard, relu, sub_5, loss], Original ATen: [aten.sub, aten.add, aten.div, aten.rsub, aten.relu, aten.dot]
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_dot_relu_rsub_sub_1.run(buf5, buf0, buf3, buf4, 1, 256, grid=grid(1), stream=stream0)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf5, )
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:20:07.601000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:07.607000 1413504 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/iq/ciquvzq76vnaqq3ngmmuvk5uf2n2zkjtiktlnii6fnjtlymocpld.py
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['37_inference']
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bi/cbidvvppow55ovsd3ldirnuri4ao4mv2bleubtzbebhqnb6l54gp.py
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, signs, mul_1, errors, sort, gt_sorted, gts, cumsum, sub_3, cumsum_1], Original ATen: [aten.mul, aten.sub, aten.rsub, aten.sort, aten.index, aten.sum, aten.cumsum]
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cumsum => cumsum
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cumsum_1 => cumsum_1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   errors => sub_1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt_sorted => index
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gts => sum_1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   signs => sub
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sort => sort
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, 2.0), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, 1.0), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %sub), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %mul_1), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sort : [num_users=2] = call_function[target=torch.ops.aten.sort.default](args = (%sub_1, 0, True), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=3] = call_function[target=torch.ops.aten.index.Tensor](args = (%view_1, [%getitem_1]), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.default](args = (%index,), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%index, 0), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %index), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum_1 : [num_users=1] = call_function[target=torch.ops.aten.cumsum.default](args = (%sub_3, 0), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0 = async_compile.triton('triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0', '''
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0(in_ptr0, in_ptr1, out_ptr0, out_ptr2, out_ptr3, out_ptr4, xnumel, rnumel):
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 2.0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 - tmp4
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 - tmp6
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = r0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int16)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.broadcast_to(tmp7, [RBLOCK])
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.broadcast_to(tmp9, [RBLOCK])
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12, tmp13, = triton_helpers.sort_with_index(tmp10, tmp11, None, 0, stable=False, descending=True)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13.to(tl.int64)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([RBLOCK], 256, tl.int32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 < 0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp17, tmp16, tmp14)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp18) & (tmp18 < 256), "index out of bounds: 0 <= tmp18 < 256")
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (tmp18), None, eviction_policy='evict_last')
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [RBLOCK])
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.promote_to_tensor(tl.sum(tmp21, 0))
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20.to(tl.float32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [RBLOCK])
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26, = tl.associative_scan((tmp25,), 0, _triton_helper_fn_add0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp4 - tmp20
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27.to(tl.float32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.broadcast_to(tmp28, [RBLOCK])
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30, = tl.associative_scan((tmp29,), 0, _triton_helper_fn_add0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(r0, [RBLOCK])), tmp12, None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (tl.broadcast_to(r0, [RBLOCK])), tmp26, None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (tl.broadcast_to(r0, [RBLOCK])), tmp30, None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (tl.full([1], 0, tl.int32)), tmp23, None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7o/c7ozq2psro2uaxn24cezpycrpv2xhuzc23kb5icmg6jh74x4by7w.py
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [intersection, union, truediv, jaccard, relu, sub_5, loss], Original ATen: [aten.sub, aten.add, aten.div, aten.rsub, aten.relu, aten.dot]
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   intersection => sub_2
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   jaccard => sub_4
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => mul_2, sum_2
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu => relu
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   union => add
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sum_1, %cumsum), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %cumsum_1), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_2, %add), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=4] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %div), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%getitem,), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_1, %slice_2), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%sub_4, %sub_5, 0, 1, 256), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%relu, %slice_scatter_default), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%mul_2,), kwargs = {})
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_dot_relu_rsub_sub_1 = async_compile.triton('triton_per_fused_add_div_dot_relu_rsub_sub_1', '''
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_dot_relu_rsub_sub_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 9, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_dot_relu_rsub_sub_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, rnumel):
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_out_ptr0 + (0))
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [RBLOCK])
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_out_ptr0 + (0))
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [RBLOCK])
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (r0), None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (r0), None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = r0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 >= tmp4
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp5, other=0.0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 - tmp8
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (tl.broadcast_to(r0, [RBLOCK])), tmp5, other=0.0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 + tmp10
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 / tmp11
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 - tmp12
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (tl.broadcast_to((-1) + r0, [RBLOCK])), tmp5, other=0.0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 - tmp15
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr2 + (tl.broadcast_to((-1) + r0, [RBLOCK])), tmp5, other=0.0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp7 + tmp17
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 / tmp18
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp13 - tmp19
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 - tmp20
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp5, tmp21, tmp22)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 - tmp26
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 + tmp28
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp27 / tmp29
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 1.0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 - tmp30
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp5, tmp23, tmp32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp2 * tmp33
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.broadcast_to(tmp34, [RBLOCK])
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.promote_to_tensor(tl.sum(tmp35, 0))
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp37, None)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((), (), torch.float32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((256, ), (1, ), torch.float32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, signs, mul_1, errors, sort, gt_sorted, gts, cumsum, sub_3, cumsum_1], Original ATen: [aten.mul, aten.sub, aten.rsub, aten.sort, aten.index, aten.sum, aten.cumsum]
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0.run(arg0_1, arg1_1, buf0, buf2, buf3, buf4, 1, 256, grid=grid(1), stream=stream0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf2; del buf2  # reuse
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [intersection, union, truediv, jaccard, relu, sub_5, loss], Original ATen: [aten.sub, aten.add, aten.div, aten.rsub, aten.relu, aten.dot]
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_dot_relu_rsub_sub_1.run(buf5, buf0, buf3, buf4, 1, 256, grid=grid(1), stream=stream0)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf5, )
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:09:52.333000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:52.339000 2785343 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/xf/cxfzx2ccb4wxfubutnvbprqojbvy2624gk4u6gbfiqldtf7sgvet.py
