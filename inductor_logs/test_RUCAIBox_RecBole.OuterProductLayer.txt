V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['17_forward']
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ps/cpsmdunzyz2vosncs2j2xkalvoiapdlfjq6uk6fvupfyf3himjts.py
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [p_1, p_2], Original ATen: [aten.mul, aten.sum]
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_1 => mul
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_2 => sum_1
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [-1]), kwargs = {})
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sum_0 = async_compile.triton('triton_poi_fused_mul_sum_0', '''
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sum_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sum_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 96
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 24
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 24)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr1 + (4*x3), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (1 + 4*x3), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr1 + (2 + 4*x3), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (3 + 4*x3), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 3, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.full([1], 2, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 < tmp5
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 0, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp6, tmp7, tmp7)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp4, tmp7, tmp8)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 4, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 < tmp10
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 5, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 < tmp12
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp13, tmp3, tmp5)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp11, tmp3, tmp14)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp2, tmp9, tmp15)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (4*tmp16 + 16*x2), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (1 + 4*tmp16 + 16*x2), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp21
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp19 + tmp22
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + (2 + 4*tmp16 + 16*x2), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 * tmp25
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 + tmp26
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (3 + 4*tmp16 + 16*x2), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp27 + tmp30
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp31, xmask)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i2/ci2b6mbfmrebmsjoxxktnmapyhpwjgprusj3gqdvhsmfdycg4wjt.py
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [q, outer_product, sum_2], Original ATen: [aten.index, aten.mul, aten.sum]
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   outer_product => mul_1
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   q => index_1
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%primals_1, [None, %lift_fresh_copy_1]), kwargs = {})
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %index_1), kwargs = {})
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [-1]), kwargs = {})
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_mul_sum_1 = async_compile.triton('triton_poi_fused_index_mul_sum_1', '''
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_mul_sum_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_mul_sum_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 24
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 6
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 24*x1), xmask)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (6 + x0 + 24*x1), xmask)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (12 + x0 + 24*x1), xmask)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (18 + x0 + 24*x1), xmask)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x0
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([1], 3, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 < tmp2
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 < tmp4
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 2, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 < tmp6
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp2)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp5, tmp4, tmp8)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 4, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 < tmp10
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 5, tl.int64)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp1 < tmp12
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp13, tmp2, tmp2)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp11, tmp6, tmp14)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp3, tmp9, tmp15)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (4*tmp16 + 16*x1), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp0 * tmp17
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (1 + 4*tmp16 + 16*x1), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 + tmp21
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (2 + 4*tmp16 + 16*x1), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr1 + (3 + 4*tmp16 + 16*x1), xmask, eviction_policy='evict_last')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 + tmp29
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp30, xmask)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2 = args
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 6, 4), (24, 4, 1))
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 6), (24, 6, 1), torch.float32)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [p_1, p_2], Original ATen: [aten.mul, aten.sum]
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sum_0.run(primals_1, primals_2, buf0, 96, grid=grid(96), stream=stream0)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 6), (6, 1), torch.float32)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [q, outer_product, sum_2], Original ATen: [aten.index, aten.mul, aten.sum]
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_mul_sum_1.run(buf0, primals_1, buf1, 24, grid=grid(24), stream=stream0)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf1, primals_1, )
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 6, 4), (24, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:48:58.917000 2229286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:48:58.920000 2229286 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/uu/cuuiq5ntfz2kxvvcxs72een7qbvf7mur5s5iup4q275frcbjk5ix.py
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['17_forward']
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ps/cpsmdunzyz2vosncs2j2xkalvoiapdlfjq6uk6fvupfyf3himjts.py
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [p_1, p_2], Original ATen: [aten.mul, aten.sum]
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_1 => mul
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_2 => sum_1
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [-1]), kwargs = {})
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sum_0 = async_compile.triton('triton_poi_fused_mul_sum_0', '''
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sum_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sum_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 96
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 24
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 24)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr1 + (4*x3), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (1 + 4*x3), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr1 + (2 + 4*x3), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (3 + 4*x3), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 3, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.full([1], 2, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 < tmp5
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 0, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp6, tmp7, tmp7)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp4, tmp7, tmp8)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 4, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 < tmp10
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 5, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 < tmp12
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp13, tmp3, tmp5)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp11, tmp3, tmp14)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp2, tmp9, tmp15)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (4*tmp16 + 16*x2), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (1 + 4*tmp16 + 16*x2), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp21
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp19 + tmp22
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + (2 + 4*tmp16 + 16*x2), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 * tmp25
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 + tmp26
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (3 + 4*tmp16 + 16*x2), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp27 + tmp30
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp31, xmask)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i2/ci2b6mbfmrebmsjoxxktnmapyhpwjgprusj3gqdvhsmfdycg4wjt.py
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [q, outer_product, sum_2], Original ATen: [aten.index, aten.mul, aten.sum]
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   outer_product => mul_1
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   q => index_1
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%primals_1, [None, %lift_fresh_copy_1]), kwargs = {})
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute, %index_1), kwargs = {})
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [-1]), kwargs = {})
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_mul_sum_1 = async_compile.triton('triton_poi_fused_index_mul_sum_1', '''
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_mul_sum_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_mul_sum_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 24
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 6
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 24*x1), xmask)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (6 + x0 + 24*x1), xmask)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (12 + x0 + 24*x1), xmask)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (18 + x0 + 24*x1), xmask)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x0
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([1], 3, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 < tmp2
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 < tmp4
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 2, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 < tmp6
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp2)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp5, tmp4, tmp8)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 4, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 < tmp10
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 5, tl.int64)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp1 < tmp12
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp13, tmp2, tmp2)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp11, tmp6, tmp14)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp3, tmp9, tmp15)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (4*tmp16 + 16*x1), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp0 * tmp17
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (1 + 4*tmp16 + 16*x1), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 + tmp21
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (2 + 4*tmp16 + 16*x1), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr1 + (3 + 4*tmp16 + 16*x1), xmask, eviction_policy='evict_last')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 + tmp29
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp30, xmask)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2 = args
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 6, 4), (24, 4, 1))
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 6), (24, 6, 1), torch.float32)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [p_1, p_2], Original ATen: [aten.mul, aten.sum]
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sum_0.run(primals_1, primals_2, buf0, 96, grid=grid(96), stream=stream0)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 6), (6, 1), torch.float32)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [q, outer_product, sum_2], Original ATen: [aten.index, aten.mul, aten.sum]
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_mul_sum_1.run(buf0, primals_1, buf1, 24, grid=grid(24), stream=stream0)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf1, primals_1, )
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 6, 4), (24, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:39:00.703000 256782 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:39:00.707000 256782 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/di/cdics6srwmsff2e5qqjmlf6fu2awtzhwlmdaazxrfxpbvmdk33gh.py
