V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3n/c3nngdeoq6hxu6ekd2z5o7urefalqxq6b4yv2vfnje6ie3xb4yft.py
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [adaptive_max_pool2d], Original ATen: [aten.adaptive_max_pool2d]
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   adaptive_max_pool2d => _low_memory_max_pool2d_with_offsets
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%arg0_1, [4, 4], [4, 4], [0, 0], [1, 1], False), kwargs = {})
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_adaptive_max_pool2d_0 = async_compile.triton('triton_poi_fused_adaptive_max_pool2d_0', '''
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_adaptive_max_pool2d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_adaptive_max_pool2d_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (7 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (8 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (9 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (10 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (11 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (12 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (13 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (14 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (15 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp10)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp12)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp17, tmp16)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = triton_helpers.maximum(tmp19, tmp18)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp23, tmp22)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp25, tmp24)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp27, tmp26)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = triton_helpers.maximum(tmp29, tmp28)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 8*x1), tmp30, xmask)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4s/c4ssqv2ssip5jqnrj3mcwj7qy2fk6rfy7m6fm7p3shxgbiiovuez.py
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [adaptive_avg_pool2d], Original ATen: [aten.mean]
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   adaptive_avg_pool2d => mean
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [-1, -2], True), kwargs = {})
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_1 = async_compile.triton('triton_per_fused_mean_1', '''
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_1(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 4)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2 + 8*x3), tmp6, xmask)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 8, 1, 1), (8, 1, 1, 1), torch.float32)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = reinterpret_tensor(buf3, (4, 4, 1, 1), (8, 1, 1, 1), 0)  # alias
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [adaptive_max_pool2d], Original ATen: [aten.adaptive_max_pool2d]
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_adaptive_max_pool2d_0.run(arg0_1, buf0, 16, grid=grid(16), stream=stream0)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf3, (4, 4, 1, 1), (8, 1, 1, 1), 4)  # alias
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [adaptive_avg_pool2d], Original ATen: [aten.mean]
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_1.run(arg0_1, buf2, 16, 16, grid=grid(16), stream=stream0)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:21:35.301000 1466791 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:35.303000 1466791 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/md/cmdjlrfeurdtqxuy7r6cp44ziwel47fe4y36x5hc7yocrp2utbjk.py
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3n/c3nngdeoq6hxu6ekd2z5o7urefalqxq6b4yv2vfnje6ie3xb4yft.py
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [adaptive_max_pool2d], Original ATen: [aten.adaptive_max_pool2d]
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   adaptive_max_pool2d => _low_memory_max_pool2d_with_offsets
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%arg0_1, [4, 4], [4, 4], [0, 0], [1, 1], False), kwargs = {})
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_adaptive_max_pool2d_0 = async_compile.triton('triton_poi_fused_adaptive_max_pool2d_0', '''
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_adaptive_max_pool2d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_adaptive_max_pool2d_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (7 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (8 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (9 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (10 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (11 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (12 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (13 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (14 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (15 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp10)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp12)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp17, tmp16)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = triton_helpers.maximum(tmp19, tmp18)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp23, tmp22)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp25, tmp24)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp27, tmp26)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = triton_helpers.maximum(tmp29, tmp28)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 8*x1), tmp30, xmask)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4s/c4ssqv2ssip5jqnrj3mcwj7qy2fk6rfy7m6fm7p3shxgbiiovuez.py
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [adaptive_avg_pool2d], Original ATen: [aten.mean]
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   adaptive_avg_pool2d => mean
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [-1, -2], True), kwargs = {})
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_1 = async_compile.triton('triton_per_fused_mean_1', '''
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_1(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 4)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2 + 8*x3), tmp6, xmask)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 8, 1, 1), (8, 1, 1, 1), torch.float32)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = reinterpret_tensor(buf3, (4, 4, 1, 1), (8, 1, 1, 1), 0)  # alias
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [adaptive_max_pool2d], Original ATen: [aten.adaptive_max_pool2d]
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_adaptive_max_pool2d_0.run(arg0_1, buf0, 16, grid=grid(16), stream=stream0)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf3, (4, 4, 1, 1), (8, 1, 1, 1), 4)  # alias
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [adaptive_avg_pool2d], Original ATen: [aten.mean]
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_1.run(arg0_1, buf2, 16, 16, grid=grid(16), stream=stream0)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:11:22.438000 2881049 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:22.442000 2881049 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/yq/cyqiv3xvzix2kpodr24vi6zeew7cycvokuxswge7kfactdmgxwcd.py
