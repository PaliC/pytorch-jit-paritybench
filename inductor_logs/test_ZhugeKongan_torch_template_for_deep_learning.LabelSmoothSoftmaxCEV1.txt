V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['109_inference']
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/aw/cawudshzg2bdlnknayrcmsoeoqqgdyhxiarrddzoqcjdyhrgl5zm.py
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [logits, logs], Original ATen: [aten._to_copy, aten._log_softmax]
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits => convert_element_type
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logs => amax, sub
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%arg0_1, torch.float32), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%convert_element_type, [1], True), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type, %amax), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__to_copy_0 = async_compile.triton('triton_poi_fused__log_softmax__to_copy_0', '''
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__to_copy_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__to_copy_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2.to(tl.float32)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp3, tmp5)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp6, tmp8)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp9, tmp11)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp1 - tmp12
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp13, xmask)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fx/cfxv2mcqauthrxytgtwmwwo6fx2sly473z2blbibzkaanmmjpn26.py
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [logs, setitem, scatter_, mul, sum_2, loss, setitem_1], Original ATen: [aten._log_softmax, aten.lift_fresh, aten.index_put, aten.scatter, aten.mul, aten.sum, aten.neg]
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logs => exp, log, sub_1, sum_2
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => neg
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scatter_ => scatter_upon_const_tensor
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => full_default, index_put
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => full_default_2, index_put_1
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_3
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, %log), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put.default](args = (%arg1_1, [%eq], %full_default), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=1] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [4, 4], background_val: 0.025, dtype: torch.float32, dim: 1, selector: %unsqueeze_1, val: 0.9})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %scatter_upon_const_tensor), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_3,), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put_1 : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%neg, [%eq], %full_default_2), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1 = async_compile.triton('triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1', '''
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], -100, tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp2, tmp3, tmp0)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl_math.exp(tmp7)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl_math.exp(tmp10)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 + tmp11
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 + tmp14
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.log(tmp15)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp16
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp4 == tmp3
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 0.9
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.025
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp18, tmp19, tmp20)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp17 * tmp21
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp7 - tmp16
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 1, tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp4 == tmp24
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp25, tmp19, tmp20)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 * tmp26
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp22 + tmp27
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp10 - tmp16
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.full([1], 2, tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp4 == tmp30
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp31, tmp19, tmp20)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 * tmp32
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp28 + tmp33
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp13 - tmp16
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full([1], 3, tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp4 == tmp36
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp37, tmp19, tmp20)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 * tmp38
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 + tmp39
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = -tmp40
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.0
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp2, tmp42, tmp41)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp43, xmask)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zr/czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ignore, sum_3, eq_1, n_valid, loss_1], Original ATen: [aten.eq, aten.sum, aten.div]
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq_1 => eq_1
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ignore => eq
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => div
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   n_valid => sum_1
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_4
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=3] = call_function[target=torch.ops.aten.eq.Scalar](args = (%arg1_1, -100), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%index_put_1,), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_1 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%eq, 0), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq_1,), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_4, %sum_1), kwargs = {})
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_eq_sum_2 = async_compile.triton('triton_poi_fused_div_eq_sum_2', '''
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_eq_sum_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_eq_sum_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (0))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK])
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (1))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK])
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (2))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.broadcast_to(tmp26, [XBLOCK])
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (3))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.broadcast_to(tmp33, [XBLOCK])
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], -100, tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 == tmp13
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 == tmp16
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17.to(tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 == tmp13
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21.to(tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 == tmp16
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23.to(tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp18 + tmp24
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 == tmp13
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28.to(tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 == tmp16
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30.to(tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp25 + tmp31
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 == tmp13
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35.to(tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 == tmp16
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37.to(tl.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp32 + tmp38
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39.to(tl.float32)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp10 / tmp40
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp41, None)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits, logs], Original ATen: [aten._to_copy, aten._log_softmax]
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__to_copy_0.run(arg0_1, buf0, 16, grid=grid(16), stream=stream0)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logs, setitem, scatter_, mul, sum_2, loss, setitem_1], Original ATen: [aten._log_softmax, aten.lift_fresh, aten.index_put, aten.scatter, aten.mul, aten.sum, aten.neg]
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1.run(buf3, arg1_1, buf0, 4, grid=grid(4), stream=stream0)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ignore, sum_3, eq_1, n_valid, loss_1], Original ATen: [aten.eq, aten.sum, aten.div]
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_eq_sum_2.run(buf3, arg1_1, buf4, 1, grid=grid(1), stream=stream0)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, )
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:44:02.474000 435219 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:44:02.479000 435219 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/r2/cr26qmqqu7nw4n3wpvpmiinuwxrcfnzrxo7y554bkm45elnhu656.py
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['109_inference']
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/aw/cawudshzg2bdlnknayrcmsoeoqqgdyhxiarrddzoqcjdyhrgl5zm.py
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [logits, logs], Original ATen: [aten._to_copy, aten._log_softmax]
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits => convert_element_type
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logs => amax, sub
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%arg0_1, torch.float32), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%convert_element_type, [1], True), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type, %amax), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__to_copy_0 = async_compile.triton('triton_poi_fused__log_softmax__to_copy_0', '''
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__to_copy_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__to_copy_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2.to(tl.float32)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp3, tmp5)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp6, tmp8)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp9, tmp11)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp1 - tmp12
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp13, xmask)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fx/cfxv2mcqauthrxytgtwmwwo6fx2sly473z2blbibzkaanmmjpn26.py
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [logs, setitem, scatter_, mul, sum_2, loss, setitem_1], Original ATen: [aten._log_softmax, aten.lift_fresh, aten.index_put, aten.scatter, aten.mul, aten.sum, aten.neg]
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logs => exp, log, sub_1, sum_2
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => neg
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scatter_ => scatter_upon_const_tensor
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => full_default, index_put
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => full_default_2, index_put_1
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_3
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, %log), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put.default](args = (%arg1_1, [%eq], %full_default), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=1] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [4, 4], background_val: 0.025, dtype: torch.float32, dim: 1, selector: %unsqueeze_1, val: 0.9})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %scatter_upon_const_tensor), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_3,), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put_1 : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%neg, [%eq], %full_default_2), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1 = async_compile.triton('triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1', '''
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], -100, tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp2, tmp3, tmp0)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl_math.exp(tmp7)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl_math.exp(tmp10)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 + tmp11
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 + tmp14
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.log(tmp15)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp16
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp4 == tmp3
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 0.9
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.025
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp18, tmp19, tmp20)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp17 * tmp21
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp7 - tmp16
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 1, tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp4 == tmp24
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp25, tmp19, tmp20)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 * tmp26
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp22 + tmp27
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp10 - tmp16
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.full([1], 2, tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp4 == tmp30
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp31, tmp19, tmp20)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 * tmp32
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp28 + tmp33
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp13 - tmp16
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full([1], 3, tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp4 == tmp36
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp37, tmp19, tmp20)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 * tmp38
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 + tmp39
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = -tmp40
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.0
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp2, tmp42, tmp41)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp43, xmask)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zr/czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ignore, sum_3, eq_1, n_valid, loss_1], Original ATen: [aten.eq, aten.sum, aten.div]
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq_1 => eq_1
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ignore => eq
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => div
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   n_valid => sum_1
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_4
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=3] = call_function[target=torch.ops.aten.eq.Scalar](args = (%arg1_1, -100), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%index_put_1,), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_1 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%eq, 0), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq_1,), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_4, %sum_1), kwargs = {})
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_eq_sum_2 = async_compile.triton('triton_poi_fused_div_eq_sum_2', '''
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_eq_sum_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_eq_sum_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (0))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK])
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (1))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK])
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (2))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.broadcast_to(tmp26, [XBLOCK])
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (3))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.broadcast_to(tmp33, [XBLOCK])
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], -100, tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 == tmp13
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 == tmp16
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17.to(tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 == tmp13
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21.to(tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 == tmp16
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23.to(tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp18 + tmp24
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 == tmp13
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28.to(tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 == tmp16
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30.to(tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp25 + tmp31
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 == tmp13
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35.to(tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 == tmp16
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37.to(tl.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp32 + tmp38
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39.to(tl.float32)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp10 / tmp40
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp41, None)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits, logs], Original ATen: [aten._to_copy, aten._log_softmax]
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__to_copy_0.run(arg0_1, buf0, 16, grid=grid(16), stream=stream0)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logs, setitem, scatter_, mul, sum_2, loss, setitem_1], Original ATen: [aten._log_softmax, aten.lift_fresh, aten.index_put, aten.scatter, aten.mul, aten.sum, aten.neg]
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1.run(buf3, arg1_1, buf0, 4, grid=grid(4), stream=stream0)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ignore, sum_3, eq_1, n_valid, loss_1], Original ATen: [aten.eq, aten.sum, aten.div]
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_eq_sum_2.run(buf3, arg1_1, buf4, 1, grid=grid(1), stream=stream0)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, )
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:32:52.259000 1734606 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:32:52.265000 1734606 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/xq/cxqxxntvqz3hf6o3qlmhxifwwbwcyaaylthwudskyohjwloppwfn.py
