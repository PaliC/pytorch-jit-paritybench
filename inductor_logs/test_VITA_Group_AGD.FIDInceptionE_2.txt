V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['14_forward']
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dq/cdq3h7u7hbia7enqve2p6q7tnmwfo7ieewqjxqkuspsdo3kpimq7.py
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pr/cprfmx4bzl3hi7stuqyfu7ov33lgejqhi4fczavq5tcoh6pnckhh.py
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 262144, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 147456
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 384)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 384
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 3*y3), xmask & ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 384*x2 + 1152*y1), tmp0, xmask & ymask)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5n/c5nz4lbszcn44kiyfp3wznj4bawkxbt5wwaksvu22iecs3gaylvt.py
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 262144, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 172032
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 448)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 448
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 448*x2 + 4032*y1), tmp0, xmask & ymask)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x5/cx5rq6qogbqfupwvrrwef5kl5mdyjbr72u6jnhgehw2im7usmuny.py
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, branch3x3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch3x3 => relu_1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_3, mul_4, mul_5, sub_1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_3', '''
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 24576
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 384)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pm/cpmwnpghp6awc7i6he4iyvvbir4ib3s7tqhv7bu52sjo6yah3evo.py
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [branch3x3_1], Original ATen: [aten.cat]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch3x3_1 => cat
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%relu_2, %relu_3], 1), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49152
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 768)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 12288
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 12288)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 384, tl.int64)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (384*x0 + 6144*x2 + (x1)), tmp4, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.001
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp4, tmp22, tmp23)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp3
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 768, tl.int64)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr5 + (384*x0 + 6144*x2 + ((-384) + x1)), tmp25, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr6 + ((-384) + x1), tmp25, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 - tmp29
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr7 + ((-384) + x1), tmp25, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 0.001
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = libdevice.sqrt(tmp33)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 1, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp34
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 1.0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp30 * tmp38
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr8 + ((-384) + x1), tmp25, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 * tmp40
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr9 + ((-384) + x1), tmp25, eviction_policy='evict_last', other=0.0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.full([1], 0, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp44, tmp43)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full(tmp45.shape, 0.0, tmp45.dtype)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp25, tmp45, tmp46)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp4, tmp24, tmp47)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3 + 32768*x2), tmp48, None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sl/cslmyund5ngfyhxbnxt33nwjqjckxuhxuazia447zg3kkynvje57.py
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_9, branch3x3dbl], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch3x3dbl => relu_4
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_9 => add_9, mul_13, mul_14, sub_4
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_37), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_39), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_9,), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_5', '''
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 28672
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 448)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lz/clzl747b7uembunjcqx5pm6wqu44rdvt2e6qoiowuksrwrelynug.py
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [branch_pool], Original ATen: [aten.max_pool2d_with_indices]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch_pool => getitem
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem : [num_users=2] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_6 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_6', '''
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x2
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + x1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-20) + x6), tmp10 & xmask, other=float("-inf"))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = x1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-16) + x6), tmp16 & xmask, other=float("-inf"))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp17, tmp11)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + x1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-12) + x6), tmp23 & xmask, other=float("-inf"))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp18)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = x2
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-4) + x6), tmp30 & xmask, other=float("-inf"))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.maximum(tmp31, tmp25)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (x6), tmp33 & xmask, other=float("-inf"))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.maximum(tmp34, tmp32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (4 + x6), tmp36 & xmask, other=float("-inf"))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = triton_helpers.maximum(tmp37, tmp35)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + x2
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (12 + x6), tmp43 & xmask, other=float("-inf"))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp44, tmp38)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (16 + x6), tmp46 & xmask, other=float("-inf"))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = triton_helpers.maximum(tmp47, tmp45)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (20 + x6), tmp49 & xmask, other=float("-inf"))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = triton_helpers.maximum(tmp50, tmp48)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp51, xmask)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/64/c64wslgpojeehncbzwi7zzwzihetlunofsylmnioglx4e6j6gemt.py
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, branch1x1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch1x1 => relu
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_1, mul_1, mul_2, sub
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_7', '''
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1280
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 320)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 320
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 320*x2 + 5120*y1), xmask & ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y0), ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (y0), ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (y0), ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y0 + 32768*y1), tmp17, xmask & ymask)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bn/cbnvkrnoxq6dn7yfl6xmxdnvpnmhjt3ibl5ltpslbztqj57vbavz.py
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_17, branch_pool_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch_pool_1 => relu_8
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_17 => add_17, mul_25, mul_26, sub_8
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_8, %unsqueeze_65), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %unsqueeze_67), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_25, %unsqueeze_69), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_26, %unsqueeze_71), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_17,), kwargs = {})
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_8', '''
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 768
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 192)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 192
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 192*x2 + 3072*y1), xmask & ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y0), ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (y0), ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (y0), ymask, eviction_policy='evict_last')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y0 + 32768*y1), tmp17, xmask & ymask)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46 = args
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (320, 4, 1, 1), (4, 1, 1, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (320, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (320, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (320, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (320, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (384, 4, 1, 1), (4, 1, 1, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (384, 384, 1, 3), (1152, 3, 3, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (384, 384, 3, 1), (1152, 3, 1, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (448, 4, 1, 1), (4, 1, 1, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (448, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (448, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (448, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (448, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (384, 448, 3, 3), (4032, 9, 3, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (384, 384, 1, 3), (1152, 3, 3, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (384, 384, 3, 1), (1152, 3, 1, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (384, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (192, 4, 1, 1), (4, 1, 1, 1))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (192, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (192, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (192, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (192, ), (1, ))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_2, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((384, 384, 1, 3), (1152, 1, 1152, 384), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_12, buf1, 147456, 3, grid=grid(147456, 3), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((384, 384, 3, 1), (1152, 1, 384, 384), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_17, buf2, 147456, 3, grid=grid(147456, 3), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((384, 448, 3, 3), (4032, 1, 1344, 448), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_27, buf3, 172032, 9, grid=grid(172032, 9), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((384, 384, 1, 3), (1152, 1, 1152, 384), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_32, buf4, 147456, 3, grid=grid(147456, 3), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_32
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((384, 384, 3, 1), (1152, 1, 384, 384), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_37, buf5, 147456, 3, grid=grid(147456, 3), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf0, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 320, 4, 4), (5120, 1, 1280, 320))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf0, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 384, 4, 4), (6144, 1, 1536, 384), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, branch3x3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_3.run(buf7, primals_8, primals_9, primals_10, primals_11, buf8, 24576, grid=grid(24576), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.convolution]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, buf1, stride=(1, 1), padding=(0, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf8, buf2, stride=(1, 1), padding=(1, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 2048, 4, 4), (32768, 16, 4, 1), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf23, (4, 768, 4, 4), (32768, 16, 4, 1), 5120)  # alias
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [branch3x3_1], Original ATen: [aten.cat]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(buf9, primals_13, primals_14, primals_15, primals_16, buf10, primals_18, primals_19, primals_20, primals_21, buf11, 49152, grid=grid(49152), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.convolution]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = extern_kernels.convolution(buf0, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf12, (4, 448, 4, 4), (7168, 1, 1792, 448))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 448, 4, 4), (7168, 1, 1792, 448), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9, branch3x3dbl], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_5.run(buf12, primals_23, primals_24, primals_25, primals_26, buf13, 28672, grid=grid(28672), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf13, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 384, 4, 4), (6144, 1, 1536, 384), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_11, branch3x3dbl_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_3.run(buf14, primals_28, primals_29, primals_30, primals_31, buf15, 24576, grid=grid(24576), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_31
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, buf4, stride=(1, 1), padding=(0, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_14], Original ATen: [aten.convolution]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf15, buf5, stride=(1, 1), padding=(1, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf23, (4, 768, 4, 4), (32768, 16, 4, 1), 17408)  # alias
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [branch3x3dbl_2], Original ATen: [aten.cat]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(buf16, primals_33, primals_34, primals_35, primals_36, buf17, primals_38, primals_39, primals_40, primals_41, buf18, 49152, grid=grid(49152), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [branch_pool], Original ATen: [aten.max_pool2d_with_indices]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_6.run(buf0, buf19, 256, grid=grid(256), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_16], Original ATen: [aten.convolution]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_42, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 192, 4, 4), (3072, 1, 768, 192))
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = reinterpret_tensor(buf23, (4, 320, 4, 4), (32768, 16, 4, 1), 0)  # alias
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, branch1x1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_7.run(buf6, primals_3, primals_4, primals_5, primals_6, buf21, 1280, 16, grid=grid(1280, 16), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = reinterpret_tensor(buf23, (4, 192, 4, 4), (32768, 16, 4, 1), 29696)  # alias
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_17, branch_pool_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_8.run(buf20, primals_43, primals_44, primals_45, primals_46, buf22, 768, 16, grid=grid(768, 16), stream=stream0)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf23, primals_1, buf0, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, buf1, primals_13, primals_14, primals_15, primals_16, buf2, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, buf3, primals_28, primals_29, primals_30, buf4, primals_33, primals_34, primals_35, primals_36, buf5, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, buf6, buf7, buf8, buf9, buf10, buf12, buf13, buf14, buf15, buf16, buf17, buf19, buf20, )
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((320, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((320, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((320, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((320, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((320, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((384, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((384, 384, 1, 3), (1152, 3, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((384, 384, 3, 1), (1152, 3, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((448, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((448, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((448, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((448, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((448, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((384, 448, 3, 3), (4032, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((384, 384, 1, 3), (1152, 3, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((384, 384, 3, 1), (1152, 3, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((192, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46])
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:17:57.132000 3699863 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:57.148000 3699863 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/fs/cfsn23irhj7qrafu3afqoynsfhojqgvweowfpmiid3voax5r2sjn.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['14_forward']
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dq/cdq3h7u7hbia7enqve2p6q7tnmwfo7ieewqjxqkuspsdo3kpimq7.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pr/cprfmx4bzl3hi7stuqyfu7ov33lgejqhi4fczavq5tcoh6pnckhh.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 262144, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 147456
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 384)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 384
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 3*y3), xmask & ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 384*x2 + 1152*y1), tmp0, xmask & ymask)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5n/c5nz4lbszcn44kiyfp3wznj4bawkxbt5wwaksvu22iecs3gaylvt.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 262144, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 172032
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 448)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 448
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 448*x2 + 4032*y1), tmp0, xmask & ymask)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/x5/cx5rq6qogbqfupwvrrwef5kl5mdyjbr72u6jnhgehw2im7usmuny.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, branch3x3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch3x3 => relu_1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_3, mul_4, mul_5, sub_1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_3', '''
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 24576
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 384)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pm/cpmwnpghp6awc7i6he4iyvvbir4ib3s7tqhv7bu52sjo6yah3evo.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [branch3x3_1], Original ATen: [aten.cat]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch3x3_1 => cat
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%relu_2, %relu_3], 1), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49152
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 768)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 12288
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 12288)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 384, tl.int64)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (384*x0 + 6144*x2 + (x1)), tmp4, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.001
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp4, tmp22, tmp23)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp3
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 768, tl.int64)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr5 + (384*x0 + 6144*x2 + ((-384) + x1)), tmp25, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr6 + ((-384) + x1), tmp25, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 - tmp29
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr7 + ((-384) + x1), tmp25, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 0.001
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = libdevice.sqrt(tmp33)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 1, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp34
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 1.0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp30 * tmp38
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr8 + ((-384) + x1), tmp25, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 * tmp40
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr9 + ((-384) + x1), tmp25, eviction_policy='evict_last', other=0.0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.full([1], 0, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp44, tmp43)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full(tmp45.shape, 0.0, tmp45.dtype)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp25, tmp45, tmp46)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp4, tmp24, tmp47)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3 + 32768*x2), tmp48, None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sl/cslmyund5ngfyhxbnxt33nwjqjckxuhxuazia447zg3kkynvje57.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_9, branch3x3dbl], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch3x3dbl => relu_4
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_9 => add_9, mul_13, mul_14, sub_4
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_37), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_39), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_9,), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_5', '''
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 28672
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 448)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lz/clzl747b7uembunjcqx5pm6wqu44rdvt2e6qoiowuksrwrelynug.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [branch_pool], Original ATen: [aten.max_pool2d_with_indices]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch_pool => getitem
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem : [num_users=2] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_6 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_6', '''
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x2
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + x1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-20) + x6), tmp10 & xmask, other=float("-inf"))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = x1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-16) + x6), tmp16 & xmask, other=float("-inf"))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp17, tmp11)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + x1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-12) + x6), tmp23 & xmask, other=float("-inf"))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp18)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = x2
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-4) + x6), tmp30 & xmask, other=float("-inf"))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.maximum(tmp31, tmp25)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (x6), tmp33 & xmask, other=float("-inf"))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.maximum(tmp34, tmp32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (4 + x6), tmp36 & xmask, other=float("-inf"))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = triton_helpers.maximum(tmp37, tmp35)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + x2
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (12 + x6), tmp43 & xmask, other=float("-inf"))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp44, tmp38)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (16 + x6), tmp46 & xmask, other=float("-inf"))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = triton_helpers.maximum(tmp47, tmp45)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (20 + x6), tmp49 & xmask, other=float("-inf"))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = triton_helpers.maximum(tmp50, tmp48)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp51, xmask)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/64/c64wslgpojeehncbzwi7zzwzihetlunofsylmnioglx4e6j6gemt.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, branch1x1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch1x1 => relu
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_1, mul_1, mul_2, sub
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_7', '''
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1280
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 320)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 320
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 320*x2 + 5120*y1), xmask & ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y0), ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (y0), ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (y0), ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y0 + 32768*y1), tmp17, xmask & ymask)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bn/cbnvkrnoxq6dn7yfl6xmxdnvpnmhjt3ibl5ltpslbztqj57vbavz.py
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_17, branch_pool_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   branch_pool_1 => relu_8
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_17 => add_17, mul_25, mul_26, sub_8
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_8, %unsqueeze_65), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %unsqueeze_67), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_25, %unsqueeze_69), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_26, %unsqueeze_71), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_17,), kwargs = {})
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_8', '''
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 768
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 192)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 192
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 192*x2 + 3072*y1), xmask & ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y0), ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (y0), ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (y0), ymask, eviction_policy='evict_last')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y0 + 32768*y1), tmp17, xmask & ymask)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46 = args
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (320, 4, 1, 1), (4, 1, 1, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (320, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (320, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (320, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (320, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (384, 4, 1, 1), (4, 1, 1, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (384, 384, 1, 3), (1152, 3, 3, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (384, 384, 3, 1), (1152, 3, 1, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (448, 4, 1, 1), (4, 1, 1, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (448, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (448, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (448, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (448, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (384, 448, 3, 3), (4032, 9, 3, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (384, 384, 1, 3), (1152, 3, 3, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (384, 384, 3, 1), (1152, 3, 1, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (384, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (192, 4, 1, 1), (4, 1, 1, 1))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (192, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (192, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (192, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (192, ), (1, ))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_2, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((384, 384, 1, 3), (1152, 1, 1152, 384), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_12, buf1, 147456, 3, grid=grid(147456, 3), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((384, 384, 3, 1), (1152, 1, 384, 384), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_17, buf2, 147456, 3, grid=grid(147456, 3), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((384, 448, 3, 3), (4032, 1, 1344, 448), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_27, buf3, 172032, 9, grid=grid(172032, 9), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((384, 384, 1, 3), (1152, 1, 1152, 384), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_32, buf4, 147456, 3, grid=grid(147456, 3), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_32
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((384, 384, 3, 1), (1152, 1, 384, 384), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_37, buf5, 147456, 3, grid=grid(147456, 3), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf0, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 320, 4, 4), (5120, 1, 1280, 320))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf0, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 384, 4, 4), (6144, 1, 1536, 384), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, branch3x3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_3.run(buf7, primals_8, primals_9, primals_10, primals_11, buf8, 24576, grid=grid(24576), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.convolution]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, buf1, stride=(1, 1), padding=(0, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf8, buf2, stride=(1, 1), padding=(1, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 2048, 4, 4), (32768, 16, 4, 1), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf23, (4, 768, 4, 4), (32768, 16, 4, 1), 5120)  # alias
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [branch3x3_1], Original ATen: [aten.cat]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(buf9, primals_13, primals_14, primals_15, primals_16, buf10, primals_18, primals_19, primals_20, primals_21, buf11, 49152, grid=grid(49152), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.convolution]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = extern_kernels.convolution(buf0, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf12, (4, 448, 4, 4), (7168, 1, 1792, 448))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 448, 4, 4), (7168, 1, 1792, 448), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9, branch3x3dbl], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_5.run(buf12, primals_23, primals_24, primals_25, primals_26, buf13, 28672, grid=grid(28672), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf13, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 384, 4, 4), (6144, 1, 1536, 384), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_11, branch3x3dbl_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_3.run(buf14, primals_28, primals_29, primals_30, primals_31, buf15, 24576, grid=grid(24576), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_31
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, buf4, stride=(1, 1), padding=(0, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_14], Original ATen: [aten.convolution]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf15, buf5, stride=(1, 1), padding=(1, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 384, 4, 4), (6144, 1, 1536, 384))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf23, (4, 768, 4, 4), (32768, 16, 4, 1), 17408)  # alias
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [branch3x3dbl_2], Original ATen: [aten.cat]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(buf16, primals_33, primals_34, primals_35, primals_36, buf17, primals_38, primals_39, primals_40, primals_41, buf18, 49152, grid=grid(49152), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [branch_pool], Original ATen: [aten.max_pool2d_with_indices]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_6.run(buf0, buf19, 256, grid=grid(256), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_16], Original ATen: [aten.convolution]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_42, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 192, 4, 4), (3072, 1, 768, 192))
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = reinterpret_tensor(buf23, (4, 320, 4, 4), (32768, 16, 4, 1), 0)  # alias
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, branch1x1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_7.run(buf6, primals_3, primals_4, primals_5, primals_6, buf21, 1280, 16, grid=grid(1280, 16), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = reinterpret_tensor(buf23, (4, 192, 4, 4), (32768, 16, 4, 1), 29696)  # alias
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_17, branch_pool_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_8.run(buf20, primals_43, primals_44, primals_45, primals_46, buf22, 768, 16, grid=grid(768, 16), stream=stream0)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf23, primals_1, buf0, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, buf1, primals_13, primals_14, primals_15, primals_16, buf2, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, buf3, primals_28, primals_29, primals_30, buf4, primals_33, primals_34, primals_35, primals_36, buf5, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, buf6, buf7, buf8, buf9, buf10, buf12, buf13, buf14, buf15, buf16, buf17, buf19, buf20, )
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((320, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((320, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((320, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((320, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((320, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((384, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((384, 384, 1, 3), (1152, 3, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((384, 384, 3, 1), (1152, 3, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((448, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((448, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((448, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((448, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((448, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((384, 448, 3, 3), (4032, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((384, 384, 1, 3), (1152, 3, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((384, 384, 3, 1), (1152, 3, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((192, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46])
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:06:57.483000 1052893 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:57.498000 1052893 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/2n/c2nhzjzk5f5p2dcwq7wij56aaefg2rvslbbm5kuf2dosfcv3jhhg.py
