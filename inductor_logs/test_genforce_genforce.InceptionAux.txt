V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['11_forward']
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rq/crqfjavukyndawnxhopu7qb3wbshhh2n6vgujufojujxmsof256v.py
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 32}, tile_hint=TileHint.SQUARE,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 98304
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 25
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 25*y3), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 3200*y1), tmp0, xmask & ymask)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yx/cyxrejcjt55ktn5myjl3lvrcxskawj67uqh25wa7brid356jhdfu.py
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.avg_pool2d]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => avg_pool2d
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%primals_1, [5, 5], [3, 3]), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_1 = async_compile.triton('triton_poi_fused_avg_pool2d_1', '''
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 512}, tile_hint=TileHint.SQUARE,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 25, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 400
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 20)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 20
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (64 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (65 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (66 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (67 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (68 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (128 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (129 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (130 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (131 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (132 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (192 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (193 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr0 + (194 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (195 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (196 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr0 + (256 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr0 + (257 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (258 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr0 + (259 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (260 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp8
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp10
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp12
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp14
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp16
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp18
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp20
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp22
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp24
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp26
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp28
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp30
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp32
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 + tmp34
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp36
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp38
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 + tmp40
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 + tmp42
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 + tmp44
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp46
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 0.04
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 * tmp49
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x5 + 1600*y1), tmp50, xmask & ymask)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lv/clv477udrpv47y27xycqz575i5wbqwrl6fkpm5om56dudqupuezr.py
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => add_1, mul_1, mul_2, sub
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => relu
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_2', '''
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 204800
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tb/ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => add_3, mul_4, mul_5, sub_1
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => relu_1
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => mean
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%relu_1, [-1, -2], True), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3 = async_compile.triton('triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3', '''
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192, 'r': 128},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 6144
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 768)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 768
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp19 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 768*r2 + 98304*x1), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = 0.001
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp3 + tmp4
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = libdevice.sqrt(tmp5)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tl.full([1, 1], 1, tl.int32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tmp7 / tmp6
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = 1.0
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp8 * tmp9
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tmp2 * tmp10
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp13 = tmp11 * tmp12
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp15 = tmp13 + tmp14
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp16 = tl.full([1, 1], 0, tl.int32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = _tmp19 + tmp18
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp19 = tl.where(rmask & xmask, tmp20, _tmp19)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.sum(_tmp19, 1)[:, None]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xl/cxls7y6t6mc4lvp6g3p53dn5ldsltraf6spywdi5eucjq2nxwhsv.py
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => add_3, mul_4, mul_5, sub_1
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => relu_1
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => mean
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%relu_1, [-1, -2], True), kwargs = {})
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4 = async_compile.triton('triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4', '''
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096, 'r': 2},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3072
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 768)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 768
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 768*r2 + 1536*x1), xmask, other=0.0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 256.0
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp6, xmask)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 64, 64), (16384, 4096, 64, 1))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (128, 4, 1, 1), (4, 1, 1, 1))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (128, ), (1, ))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (128, ), (1, ))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (128, ), (1, ))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (128, ), (1, ))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (768, 128, 5, 5), (3200, 25, 5, 1))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (768, ), (1, ))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (768, ), (1, ))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (768, ), (1, ))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (768, ), (1, ))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 768), (768, 1))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((768, 128, 5, 5), (3200, 1, 640, 128), torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_7, buf0, 98304, 25, grid=grid(98304, 25), stream=stream0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 20, 20), (1600, 1, 80, 4), torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.avg_pool2d]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_1.run(primals_1, buf1, 16, 400, grid=grid(16, 400), stream=stream0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 128, 20, 20), (51200, 1, 2560, 128))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 128, 20, 20), (51200, 1, 2560, 128), torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_2.run(buf2, primals_3, primals_4, primals_5, primals_6, buf3, 204800, grid=grid(204800), stream=stream0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.convolution]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, buf0, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 768, 16, 16), (196608, 1, 12288, 768))
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 768, 1, 1, 2), (1536, 1, 6144, 6144, 768), torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3.run(buf4, primals_8, primals_9, primals_10, primals_11, buf5, 6144, 128, grid=grid(6144), stream=stream0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 768, 1, 1), (768, 1, 3072, 3072), torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4.run(buf7, buf5, 3072, 2, grid=grid(3072), stream=stream0)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten.addmm]
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_13, reinterpret_tensor(buf7, (4, 768), (768, 1), 0), reinterpret_tensor(primals_12, (768, 4), (1, 768), 0), alpha=1, beta=1, out=buf8)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, primals_2, primals_3, primals_4, primals_5, buf0, primals_8, primals_9, primals_10, primals_11, buf1, buf2, buf3, buf4, reinterpret_tensor(buf7, (4, 768), (768, 1), 0), primals_12, )
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((128, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((768, 128, 5, 5), (3200, 25, 5, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 768), (768, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:23:15.927000 2881143 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:15.935000 2881143 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ll/cllr7fgphezp5cfh4fmk7axlgp34uylmptf52dvnrzy6laggktmp.py
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['11_forward']
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rq/crqfjavukyndawnxhopu7qb3wbshhh2n6vgujufojujxmsof256v.py
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 32}, tile_hint=TileHint.SQUARE,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 98304
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 25
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 25*y3), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 3200*y1), tmp0, xmask & ymask)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yx/cyxrejcjt55ktn5myjl3lvrcxskawj67uqh25wa7brid356jhdfu.py
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.avg_pool2d]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => avg_pool2d
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%primals_1, [5, 5], [3, 3]), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_1 = async_compile.triton('triton_poi_fused_avg_pool2d_1', '''
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 512}, tile_hint=TileHint.SQUARE,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 25, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 400
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 20)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 20
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (64 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (65 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (66 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (67 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (68 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (128 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (129 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (130 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (131 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (132 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (192 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (193 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr0 + (194 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (195 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (196 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr0 + (256 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr0 + (257 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (258 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr0 + (259 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (260 + 3*x2 + 192*x3 + 4096*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp8
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp10
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp12
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp14
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp16
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp18
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp20
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp22
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp24
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp26
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp28
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp30
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp32
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 + tmp34
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp36
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp38
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 + tmp40
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 + tmp42
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 + tmp44
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp46
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 0.04
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 * tmp49
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x5 + 1600*y1), tmp50, xmask & ymask)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lv/clv477udrpv47y27xycqz575i5wbqwrl6fkpm5om56dudqupuezr.py
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => add_1, mul_1, mul_2, sub
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => relu
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_2', '''
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 204800
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tb/ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => add_3, mul_4, mul_5, sub_1
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => relu_1
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => mean
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%relu_1, [-1, -2], True), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3 = async_compile.triton('triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3', '''
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192, 'r': 128},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 6144
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 768)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 768
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp19 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 768*r2 + 98304*x1), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = 0.001
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp3 + tmp4
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = libdevice.sqrt(tmp5)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tl.full([1, 1], 1, tl.int32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tmp7 / tmp6
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = 1.0
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp8 * tmp9
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tmp2 * tmp10
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp13 = tmp11 * tmp12
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp15 = tmp13 + tmp14
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp16 = tl.full([1, 1], 0, tl.int32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = _tmp19 + tmp18
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp19 = tl.where(rmask & xmask, tmp20, _tmp19)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.sum(_tmp19, 1)[:, None]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xl/cxls7y6t6mc4lvp6g3p53dn5ldsltraf6spywdi5eucjq2nxwhsv.py
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => add_3, mul_4, mul_5, sub_1
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => relu_1
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => mean
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%relu_1, [-1, -2], True), kwargs = {})
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4 = async_compile.triton('triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4', '''
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096, 'r': 2},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3072
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 768)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 768
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 768*r2 + 1536*x1), xmask, other=0.0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 256.0
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp6, xmask)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 64, 64), (16384, 4096, 64, 1))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (128, 4, 1, 1), (4, 1, 1, 1))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (128, ), (1, ))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (128, ), (1, ))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (128, ), (1, ))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (128, ), (1, ))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (768, 128, 5, 5), (3200, 25, 5, 1))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (768, ), (1, ))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (768, ), (1, ))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (768, ), (1, ))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (768, ), (1, ))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 768), (768, 1))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((768, 128, 5, 5), (3200, 1, 640, 128), torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_7, buf0, 98304, 25, grid=grid(98304, 25), stream=stream0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 20, 20), (1600, 1, 80, 4), torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.avg_pool2d]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_1.run(primals_1, buf1, 16, 400, grid=grid(16, 400), stream=stream0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 128, 20, 20), (51200, 1, 2560, 128))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 128, 20, 20), (51200, 1, 2560, 128), torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_2.run(buf2, primals_3, primals_4, primals_5, primals_6, buf3, 204800, grid=grid(204800), stream=stream0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.convolution]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, buf0, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 768, 16, 16), (196608, 1, 12288, 768))
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 768, 1, 1, 2), (1536, 1, 6144, 6144, 768), torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3.run(buf4, primals_8, primals_9, primals_10, primals_11, buf5, 6144, 128, grid=grid(6144), stream=stream0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 768, 1, 1), (768, 1, 3072, 3072), torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_4.run(buf7, buf5, 3072, 2, grid=grid(3072), stream=stream0)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten.addmm]
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_13, reinterpret_tensor(buf7, (4, 768), (768, 1), 0), reinterpret_tensor(primals_12, (768, 4), (1, 768), 0), alpha=1, beta=1, out=buf8)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, primals_2, primals_3, primals_4, primals_5, buf0, primals_8, primals_9, primals_10, primals_11, buf1, buf2, buf3, buf4, reinterpret_tensor(buf7, (4, 768), (768, 1), 0), primals_12, )
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((128, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((768, 128, 5, 5), (3200, 25, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 768), (768, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:12:08.255000 328339 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:08.263000 328339 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/hy/chy3pu4hhbeudb3eeo2qwc6n7lhaepsfdxhxccy7uvzttpqtbp3l.py
