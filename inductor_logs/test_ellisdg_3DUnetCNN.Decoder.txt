V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_forward']
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pi/cpitalsgksdfiwguyg256s532giziucp5cm5lwb72p6g6pgf3pre.py
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.relu]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze,), kwargs = {})
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_0 = async_compile.triton('triton_poi_fused_relu_0', '''
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5n/c5n2rmqd4ycicfxbetdiwu724mbln6thx2dtgg53wavytnxoojd4.py
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze_4,), kwargs = {})
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_7 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%squeeze_7, 0), kwargs = {})
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_1 = async_compile.triton('triton_poi_fused_relu_threshold_backward_1', '''
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_1(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pn/cpng2x22fyhofzgzrmi3ujpoxbvswry5shbr67lag5k5qgvw75y6.py
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => relu_2
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze_9,), kwargs = {})
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_8 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%squeeze_1, 0), kwargs = {})
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_2 = async_compile.triton('triton_poi_fused_relu_threshold_backward_2', '''
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_2(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.full([1], 0, tl.int32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 <= tmp7
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp6, xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f2/cf2fxe7ekq752mxzfm36tshrbxozbkmfmtv7kwfkbvhx6nljtfou.py
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_18], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => relu_8
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze_39,), kwargs = {})
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%squeeze_45, 0), kwargs = {})
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%squeeze_31, 0), kwargs = {})
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_3 = async_compile.triton('triton_poi_fused_relu_threshold_backward_3', '''
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_3(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.full([1], 0, tl.int32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 <= tmp7
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 <= tmp7
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp6, xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp9, xmask)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19 = args
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 1, 1, 1), (4, 1, 1, 1, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 4, 1, 1, 1), (4, 1, 1, 1, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 4, 1, 1, 1), (4, 1, 1, 1, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, 4, 1, 1, 1), (4, 1, 1, 1, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, ), (1, ))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(reinterpret_tensor(primals_3, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), primals_1, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf0  # reuse
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.relu]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_0.run(buf1, primals_2, 256, grid=grid(256), stream=stream0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(buf1, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_4, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf2, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf2  # reuse
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_1.run(buf3, primals_5, buf25, 256, grid=grid(256), stream=stream0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(reinterpret_tensor(buf3, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_6, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf4, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf4  # reuse
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_2.run(buf5, primals_7, buf1, buf26, 256, grid=grid(256), stream=stream0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(reinterpret_tensor(buf5, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_8, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf6  # reuse
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_1.run(buf7, primals_9, buf23, 256, grid=grid(256), stream=stream0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(reinterpret_tensor(buf7, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_10, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf8, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf8  # reuse
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_2.run(buf9, primals_11, buf5, buf24, 256, grid=grid(256), stream=stream0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(reinterpret_tensor(buf9, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_12, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf10, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf10  # reuse
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_1.run(buf11, primals_13, buf21, 256, grid=grid(256), stream=stream0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.convolution]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = extern_kernels.convolution(reinterpret_tensor(buf11, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_14, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf12, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf12, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf12  # reuse
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_2.run(buf13, primals_15, buf9, buf22, 256, grid=grid(256), stream=stream0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15], Original ATen: [aten.convolution]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(reinterpret_tensor(buf13, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_16, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf14, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf14  # reuse
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_16], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_1.run(buf15, primals_17, buf19, 256, grid=grid(256), stream=stream0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_17], Original ATen: [aten.convolution]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(reinterpret_tensor(buf15, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_18, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = reinterpret_tensor(buf16, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf16  # reuse
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18], Original ATen: [aten.relu, aten.threshold_backward]
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_3.run(buf17, primals_19, buf13, buf18, buf20, 256, grid=grid(256), stream=stream0)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf17, primals_1, primals_4, primals_6, primals_8, primals_10, primals_12, primals_14, primals_16, primals_18, reinterpret_tensor(primals_3, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf1, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf3, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf5, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf7, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf9, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf11, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf13, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf15, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), buf18, buf19, buf20, buf21, buf22, buf23, buf24, buf25, buf26, )
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 1, 1, 1), (4, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 4, 1, 1, 1), (4, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 4, 1, 1, 1), (4, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, 4, 1, 1, 1), (4, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19])
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:06:43.584000 2476712 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:06:43.594000 2476712 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/qz/cqzblpde5dcmmwyscle5zfq2qqyhuxbcgvoczszt2f2w4352ptla.py
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_forward']
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pi/cpitalsgksdfiwguyg256s532giziucp5cm5lwb72p6g6pgf3pre.py
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.relu]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze,), kwargs = {})
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_0 = async_compile.triton('triton_poi_fused_relu_0', '''
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5n/c5n2rmqd4ycicfxbetdiwu724mbln6thx2dtgg53wavytnxoojd4.py
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze_4,), kwargs = {})
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_7 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%squeeze_7, 0), kwargs = {})
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_1 = async_compile.triton('triton_poi_fused_relu_threshold_backward_1', '''
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_1(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pn/cpng2x22fyhofzgzrmi3ujpoxbvswry5shbr67lag5k5qgvw75y6.py
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => relu_2
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze_9,), kwargs = {})
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_8 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%squeeze_1, 0), kwargs = {})
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_2 = async_compile.triton('triton_poi_fused_relu_threshold_backward_2', '''
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_2(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.full([1], 0, tl.int32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 <= tmp7
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp6, xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f2/cf2fxe7ekq752mxzfm36tshrbxozbkmfmtv7kwfkbvhx6nljtfou.py
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_18], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => relu_8
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze_39,), kwargs = {})
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%squeeze_45, 0), kwargs = {})
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%squeeze_31, 0), kwargs = {})
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_3 = async_compile.triton('triton_poi_fused_relu_threshold_backward_3', '''
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_3(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.full([1], 0, tl.int32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 <= tmp7
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 <= tmp7
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp6, xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp9, xmask)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19 = args
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 1, 1, 1), (4, 1, 1, 1, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 4, 1, 1, 1), (4, 1, 1, 1, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 4, 1, 1, 1), (4, 1, 1, 1, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, 4, 3, 3, 3), (108, 27, 9, 3, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, 4, 1, 1, 1), (4, 1, 1, 1, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, ), (1, ))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(reinterpret_tensor(primals_3, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), primals_1, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf0  # reuse
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.relu]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_0.run(buf1, primals_2, 256, grid=grid(256), stream=stream0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(buf1, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_4, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf2, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf2  # reuse
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_1.run(buf3, primals_5, buf25, 256, grid=grid(256), stream=stream0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(reinterpret_tensor(buf3, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_6, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf4, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf4  # reuse
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_2.run(buf5, primals_7, buf1, buf26, 256, grid=grid(256), stream=stream0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(reinterpret_tensor(buf5, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_8, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf6  # reuse
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_1.run(buf7, primals_9, buf23, 256, grid=grid(256), stream=stream0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(reinterpret_tensor(buf7, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_10, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf8, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf8  # reuse
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_2.run(buf9, primals_11, buf5, buf24, 256, grid=grid(256), stream=stream0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(reinterpret_tensor(buf9, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_12, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf10, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf10  # reuse
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_1.run(buf11, primals_13, buf21, 256, grid=grid(256), stream=stream0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.convolution]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = extern_kernels.convolution(reinterpret_tensor(buf11, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_14, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf12, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf12, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf12  # reuse
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_2.run(buf13, primals_15, buf9, buf22, 256, grid=grid(256), stream=stream0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15], Original ATen: [aten.convolution]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(reinterpret_tensor(buf13, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_16, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf14, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf14  # reuse
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_16], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_1.run(buf15, primals_17, buf19, 256, grid=grid(256), stream=stream0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_17], Original ATen: [aten.convolution]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(reinterpret_tensor(buf15, (1, 4, 4, 4, 4), (0, 64, 16, 4, 1), 0), primals_18, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = reinterpret_tensor(buf16, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf16  # reuse
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_3.run(buf17, primals_19, buf13, buf18, buf20, 256, grid=grid(256), stream=stream0)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf17, primals_1, primals_4, primals_6, primals_8, primals_10, primals_12, primals_14, primals_16, primals_18, reinterpret_tensor(primals_3, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf1, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf3, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf5, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf7, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf9, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf11, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf13, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf15, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), buf18, buf19, buf20, buf21, buf22, buf23, buf24, buf25, buf26, )
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 1, 1, 1), (4, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 4, 1, 1, 1), (4, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 4, 1, 1, 1), (4, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, 4, 3, 3, 3), (108, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, 4, 1, 1, 1), (4, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19])
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:55:51.657000 4113714 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:55:51.665000 4113714 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/eb/cebghnlffte3z4aj3qehzzidxbdwcerrxug5hnbl4xlk453ycaxt.py
