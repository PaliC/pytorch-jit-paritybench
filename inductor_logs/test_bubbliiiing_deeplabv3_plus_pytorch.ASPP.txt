V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zp/czp35rtqpmtwk6q4hww5ukuytylpkbmm4232sdx4ja2dsxqlxtvb.py
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rd/crd7y7slfoy7efoybkabyqqvkwpfkumhzg7v6ucub5sfq7u4yknv.py
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature, global_feature_1], Original ATen: [aten.mean]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature => mean
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_1 => mean_1
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [2], True), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%mean, [3], True), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_1 = async_compile.triton('triton_poi_fused_mean_1', '''
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp7
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 / tmp7
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 / tmp7
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp7
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp36, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lz/clzwygpny7avfpc5ou3dkx2mvunu3hnltom2f3saijq2c7bkpfqw.py
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature_2, global_feature_3, global_feature_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_2 => convolution_4
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_3 => add_9, mul_13, mul_14, sub_4
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_4 => relu_4
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%mean_1, %primals_26, %primals_27, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_37), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_39), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=4] = call_function[target=torch.ops.aten.relu.default](args = (%add_9,), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2', '''
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4m/c4mrnc4qku43uznb55ucex6aybazqqnyo2bk36eg4um2c4neluxo.py
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten._to_copy]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_5 => convert_element_type_11
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_11 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_3 = async_compile.triton('triton_poi_fused__to_copy_3', '''
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cp/ccpucf7hgp3stry6pw6ghhjpyqfalaq4g336wm334gydb5jnuboh.py
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_5 => clamp_max_2, clamp_min, clamp_min_2, convert_element_type_10, iota, mul_15, sub_5
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_10 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_10, 0.0), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_15, 0.0), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_13), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0.0), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_4 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_4', '''
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5h/c5h4rnax7ixpycgrwewkhltkzgz653yiv4jmgvpehyybchw6gpeq.py
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_5 => _unsafe_index, _unsafe_index_1, add_12, mul_17, sub_6
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_4, [None, None, %convert_element_type_11, %convert_element_type_13]), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_4, [None, None, %convert_element_type_11, %clamp_max_1]), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_2), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_17), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_mul_sub_5 = async_compile.triton('triton_poi_fused__unsafe_index_add_mul_sub_5', '''
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_mul_sub_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_mul_sub_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp9 - tmp9
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 + tmp16
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gm/cgmdd6qxxquwcku4ufix5jwpoxd3ehmeiyk2dpwuhjtbm4vb2pbo.py
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feature_cat], Original ATen: [aten.cat]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feature_cat => cat
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%relu, %relu_1, %relu_2, %relu_3, %add_14], 1), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_6 = async_compile.triton('triton_poi_fused_cat_6', '''
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'in_ptr15': '*fp32', 'in_ptr16': '*fp32', 'in_ptr17': '*fp32', 'in_ptr18': '*fp32', 'in_ptr19': '*fp32', 'in_ptr20': '*fp32', 'in_ptr21': '*i64', 'in_ptr22': '*i64', 'in_ptr23': '*fp32', 'in_ptr24': '*i64', 'in_ptr25': '*fp32', 'in_ptr26': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 27, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, in_ptr15, in_ptr16, in_ptr17, in_ptr18, in_ptr19, in_ptr20, in_ptr21, in_ptr22, in_ptr23, in_ptr24, in_ptr25, in_ptr26, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1280
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 20)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 320
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x2) + 64*x3), tmp4 & xmask, other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-05
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp4, tmp22, tmp23)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp3
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 8, tl.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr5 + (x4 + 16*((-4) + x2) + 64*x3), tmp28 & xmask, other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + ((-4) + x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 - tmp30
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr7 + ((-4) + x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = 1e-05
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 + tmp33
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = libdevice.sqrt(tmp34)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full([1], 1, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 / tmp35
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 1.0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp31 * tmp39
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr8 + ((-4) + x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 * tmp41
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr9 + ((-4) + x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp42 + tmp43
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full([1], 0, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp45, tmp44)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full(tmp46.shape, 0.0, tmp46.dtype)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp28, tmp46, tmp47)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp0 >= tmp26
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full([1], 12, tl.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp0 < tmp50
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 & tmp51
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr10 + (x4 + 16*((-8) + x2) + 64*x3), tmp52 & xmask, other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr11 + ((-8) + x2), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 - tmp54
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr12 + ((-8) + x2), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = 1e-05
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 + tmp57
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = libdevice.sqrt(tmp58)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.full([1], 1, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 / tmp59
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = 1.0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 * tmp62
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp55 * tmp63
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr13 + ((-8) + x2), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 * tmp65
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.load(in_ptr14 + ((-8) + x2), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 + tmp67
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.full([1], 0, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = triton_helpers.maximum(tmp69, tmp68)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.full(tmp70.shape, 0.0, tmp70.dtype)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.where(tmp52, tmp70, tmp71)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp0 >= tmp50
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.full([1], 16, tl.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp0 < tmp74
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp73 & tmp75
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr15 + (x4 + 16*((-12) + x2) + 64*x3), tmp76 & xmask, other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.load(in_ptr16 + ((-12) + x2), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 - tmp78
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.load(in_ptr17 + ((-12) + x2), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = 1e-05
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 + tmp81
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = libdevice.sqrt(tmp82)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.full([1], 1, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp84 / tmp83
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = 1.0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 * tmp86
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp79 * tmp87
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.load(in_ptr18 + ((-12) + x2), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.load(in_ptr19 + ((-12) + x2), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp90 + tmp91
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.full([1], 0, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = triton_helpers.maximum(tmp93, tmp92)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.full(tmp94.shape, 0.0, tmp94.dtype)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.where(tmp76, tmp94, tmp95)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp0 >= tmp74
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.full([1], 20, tl.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp0 < tmp98
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.load(in_ptr20 + (x4 + 16*((-16) + x2) + 64*x3), tmp97 & xmask, other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tl.load(in_ptr21 + (x1), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.full([XBLOCK], 1, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp101 + tmp102
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp101 < 0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tl.where(tmp104, tmp103, tmp101)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tl.load(in_ptr22 + (x0), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp106 + tmp102
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp106 < 0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tl.where(tmp108, tmp107, tmp106)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tl.load(in_ptr23 + (4*x3 + ((-16) + x2)), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.load(in_ptr24 + (x0), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp111 + tmp102
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp111 < 0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = tl.where(tmp113, tmp112, tmp111)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp110 - tmp110
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tl.load(in_ptr25 + (x0), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp115 * tmp116
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tmp110 + tmp117
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp118 - tmp100
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tl.load(in_ptr26 + (x1), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tmp119 * tmp120
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tmp100 + tmp121
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tl.full(tmp122.shape, 0.0, tmp122.dtype)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tl.where(tmp97, tmp122, tmp123)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.where(tmp76, tmp96, tmp124)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = tl.where(tmp52, tmp72, tmp125)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = tl.where(tmp28, tmp48, tmp126)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tl.where(tmp4, tmp24, tmp127)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp128, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rj/crj4bogy47vcdfq3ahuakxk46tydeiwpdnq7khpxftew6tof4y4p.py
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_13, input_14, input_15], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_13 => convolution_5
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_14 => add_16, mul_21, mul_22, sub_10
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => relu_5
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_32, %primals_33, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %unsqueeze_43), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_21, %unsqueeze_45), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_22, %unsqueeze_47), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_16,), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_5, 0), kwargs = {})
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7', '''
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.0
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 <= tmp20
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp21, xmask)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37 = args
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, 20, 1, 1), (20, 1, 1, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (4, ), (1, ))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf1, primals_3, 256, grid=grid(256), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(primals_1, primals_8, stride=(1, 1), padding=(6, 6), dilation=(6, 6), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf3, primals_9, 256, grid=grid(256), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(primals_1, primals_14, stride=(1, 1), padding=(12, 12), dilation=(12, 12), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf5, primals_15, 256, grid=grid(256), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(primals_1, primals_20, stride=(1, 1), padding=(18, 18), dilation=(18, 18), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf7, primals_21, 256, grid=grid(256), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature, global_feature_1], Original ATen: [aten.mean]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_1.run(primals_1, buf8, 16, grid=grid(16), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_2], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_26, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_2, global_feature_3, global_feature_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2.run(buf10, primals_27, primals_28, primals_29, primals_30, primals_31, buf11, 16, grid=grid(16), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten._to_copy]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_3.run(buf12, 4, grid=grid(4), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.add, aten.clamp]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_3.run(buf13, 4, grid=grid(4), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_3.run(buf14, 4, grid=grid(4), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.add, aten.clamp]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_3.run(buf15, 4, grid=grid(4), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_4.run(buf16, 4, grid=grid(4), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_mul_sub_5.run(buf12, buf14, buf11, buf15, buf16, buf17, 256, grid=grid(256), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.sub, aten.clamp]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_4.run(buf18, 4, grid=grid(4), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 20, 4, 4), (320, 16, 4, 1), torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feature_cat], Original ATen: [aten.cat]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_6.run(buf1, primals_4, primals_5, primals_6, primals_7, buf3, primals_10, primals_11, primals_12, primals_13, buf5, primals_16, primals_17, primals_18, primals_19, buf7, primals_22, primals_23, primals_24, primals_25, buf17, buf13, buf14, buf11, buf15, buf16, buf18, buf19, 1280, grid=grid(1280), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.convolution]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf20; del buf20  # reuse
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf17; del buf17  # reuse
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13, input_14, input_15], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7.run(buf21, primals_33, primals_34, primals_35, primals_36, primals_37, buf22, buf23, 256, grid=grid(256), stream=stream0)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf22, primals_1, primals_2, primals_4, primals_5, primals_6, primals_7, primals_8, primals_10, primals_11, primals_12, primals_13, primals_14, primals_16, primals_17, primals_18, primals_19, primals_20, primals_22, primals_23, primals_24, primals_25, primals_26, primals_28, primals_29, primals_30, primals_31, primals_32, primals_34, primals_35, primals_36, buf1, buf3, buf5, buf7, buf8, buf10, buf12, buf13, buf14, buf15, buf16, buf18, buf19, buf21, buf23, )
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, 20, 1, 1), (20, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37])
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:12:51.671000 1254841 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:12:51.687000 1254841 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/wa/cwaxhq2ynho5ipsprwrswxpsshmltflhz63blefq3seimvhqiws7.py
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zp/czp35rtqpmtwk6q4hww5ukuytylpkbmm4232sdx4ja2dsxqlxtvb.py
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rd/crd7y7slfoy7efoybkabyqqvkwpfkumhzg7v6ucub5sfq7u4yknv.py
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature, global_feature_1], Original ATen: [aten.mean]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature => mean
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_1 => mean_1
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [2], True), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%mean, [3], True), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_1 = async_compile.triton('triton_poi_fused_mean_1', '''
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp7
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 / tmp7
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 / tmp7
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp7
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp36, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lz/clzwygpny7avfpc5ou3dkx2mvunu3hnltom2f3saijq2c7bkpfqw.py
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature_2, global_feature_3, global_feature_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_2 => convolution_4
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_3 => add_9, mul_13, mul_14, sub_4
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_4 => relu_4
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%mean_1, %primals_26, %primals_27, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_37), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_39), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=4] = call_function[target=torch.ops.aten.relu.default](args = (%add_9,), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2', '''
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4m/c4mrnc4qku43uznb55ucex6aybazqqnyo2bk36eg4um2c4neluxo.py
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten._to_copy]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_5 => convert_element_type_11
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_11 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_3 = async_compile.triton('triton_poi_fused__to_copy_3', '''
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cp/ccpucf7hgp3stry6pw6ghhjpyqfalaq4g336wm334gydb5jnuboh.py
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_5 => clamp_max_2, clamp_min, clamp_min_2, convert_element_type_10, iota, mul_15, sub_5
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_10 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_10, 0.0), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_15, 0.0), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_13), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0.0), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_4 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_4', '''
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5h/c5h4rnax7ixpycgrwewkhltkzgz653yiv4jmgvpehyybchw6gpeq.py
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_feature_5 => _unsafe_index, _unsafe_index_1, add_12, mul_17, sub_6
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_4, [None, None, %convert_element_type_11, %convert_element_type_13]), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu_4, [None, None, %convert_element_type_11, %clamp_max_1]), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_2), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_17), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_mul_sub_5 = async_compile.triton('triton_poi_fused__unsafe_index_add_mul_sub_5', '''
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_mul_sub_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_mul_sub_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp9 - tmp9
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 + tmp16
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gm/cgmdd6qxxquwcku4ufix5jwpoxd3ehmeiyk2dpwuhjtbm4vb2pbo.py
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feature_cat], Original ATen: [aten.cat]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feature_cat => cat
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%relu, %relu_1, %relu_2, %relu_3, %add_14], 1), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_6 = async_compile.triton('triton_poi_fused_cat_6', '''
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'in_ptr15': '*fp32', 'in_ptr16': '*fp32', 'in_ptr17': '*fp32', 'in_ptr18': '*fp32', 'in_ptr19': '*fp32', 'in_ptr20': '*fp32', 'in_ptr21': '*i64', 'in_ptr22': '*i64', 'in_ptr23': '*fp32', 'in_ptr24': '*i64', 'in_ptr25': '*fp32', 'in_ptr26': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 27, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, in_ptr15, in_ptr16, in_ptr17, in_ptr18, in_ptr19, in_ptr20, in_ptr21, in_ptr22, in_ptr23, in_ptr24, in_ptr25, in_ptr26, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1280
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 20)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 320
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x2) + 64*x3), tmp4 & xmask, other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-05
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp4, tmp22, tmp23)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp3
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 8, tl.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr5 + (x4 + 16*((-4) + x2) + 64*x3), tmp28 & xmask, other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + ((-4) + x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 - tmp30
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr7 + ((-4) + x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = 1e-05
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 + tmp33
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = libdevice.sqrt(tmp34)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full([1], 1, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 / tmp35
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 1.0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp31 * tmp39
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr8 + ((-4) + x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 * tmp41
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr9 + ((-4) + x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp42 + tmp43
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full([1], 0, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp45, tmp44)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full(tmp46.shape, 0.0, tmp46.dtype)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp28, tmp46, tmp47)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp0 >= tmp26
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full([1], 12, tl.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp0 < tmp50
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 & tmp51
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr10 + (x4 + 16*((-8) + x2) + 64*x3), tmp52 & xmask, other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr11 + ((-8) + x2), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 - tmp54
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr12 + ((-8) + x2), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = 1e-05
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 + tmp57
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = libdevice.sqrt(tmp58)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.full([1], 1, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 / tmp59
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = 1.0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 * tmp62
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp55 * tmp63
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr13 + ((-8) + x2), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 * tmp65
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.load(in_ptr14 + ((-8) + x2), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 + tmp67
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.full([1], 0, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = triton_helpers.maximum(tmp69, tmp68)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.full(tmp70.shape, 0.0, tmp70.dtype)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.where(tmp52, tmp70, tmp71)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp0 >= tmp50
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.full([1], 16, tl.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp0 < tmp74
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp73 & tmp75
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr15 + (x4 + 16*((-12) + x2) + 64*x3), tmp76 & xmask, other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.load(in_ptr16 + ((-12) + x2), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 - tmp78
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.load(in_ptr17 + ((-12) + x2), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = 1e-05
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 + tmp81
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = libdevice.sqrt(tmp82)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.full([1], 1, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp84 / tmp83
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = 1.0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 * tmp86
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp79 * tmp87
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.load(in_ptr18 + ((-12) + x2), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.load(in_ptr19 + ((-12) + x2), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp90 + tmp91
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.full([1], 0, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = triton_helpers.maximum(tmp93, tmp92)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.full(tmp94.shape, 0.0, tmp94.dtype)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.where(tmp76, tmp94, tmp95)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp0 >= tmp74
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.full([1], 20, tl.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp0 < tmp98
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.load(in_ptr20 + (x4 + 16*((-16) + x2) + 64*x3), tmp97 & xmask, other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tl.load(in_ptr21 + (x1), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.full([XBLOCK], 1, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp101 + tmp102
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp101 < 0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tl.where(tmp104, tmp103, tmp101)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tl.load(in_ptr22 + (x0), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp106 + tmp102
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp106 < 0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tl.where(tmp108, tmp107, tmp106)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tl.load(in_ptr23 + (4*x3 + ((-16) + x2)), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.load(in_ptr24 + (x0), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp111 + tmp102
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp111 < 0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = tl.where(tmp113, tmp112, tmp111)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp110 - tmp110
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tl.load(in_ptr25 + (x0), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp115 * tmp116
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tmp110 + tmp117
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp118 - tmp100
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tl.load(in_ptr26 + (x1), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tmp119 * tmp120
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tmp100 + tmp121
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tl.full(tmp122.shape, 0.0, tmp122.dtype)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tl.where(tmp97, tmp122, tmp123)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.where(tmp76, tmp96, tmp124)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = tl.where(tmp52, tmp72, tmp125)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = tl.where(tmp28, tmp48, tmp126)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tl.where(tmp4, tmp24, tmp127)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp128, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rj/crj4bogy47vcdfq3ahuakxk46tydeiwpdnq7khpxftew6tof4y4p.py
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_13, input_14, input_15], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_13 => convolution_5
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_14 => add_16, mul_21, mul_22, sub_10
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => relu_5
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_32, %primals_33, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %unsqueeze_43), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_21, %unsqueeze_45), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_22, %unsqueeze_47), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_16,), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_5, 0), kwargs = {})
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7', '''
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.0
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 <= tmp20
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp21, xmask)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37 = args
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, 20, 1, 1), (20, 1, 1, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (4, ), (1, ))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf1, primals_3, 256, grid=grid(256), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(primals_1, primals_8, stride=(1, 1), padding=(6, 6), dilation=(6, 6), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf3, primals_9, 256, grid=grid(256), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(primals_1, primals_14, stride=(1, 1), padding=(12, 12), dilation=(12, 12), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf5, primals_15, 256, grid=grid(256), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(primals_1, primals_20, stride=(1, 1), padding=(18, 18), dilation=(18, 18), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf7, primals_21, 256, grid=grid(256), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature, global_feature_1], Original ATen: [aten.mean]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_1.run(primals_1, buf8, 16, grid=grid(16), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_2], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_26, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_2, global_feature_3, global_feature_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2.run(buf10, primals_27, primals_28, primals_29, primals_30, primals_31, buf11, 16, grid=grid(16), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten._to_copy]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_3.run(buf12, 4, grid=grid(4), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.add, aten.clamp]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_3.run(buf13, 4, grid=grid(4), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_3.run(buf14, 4, grid=grid(4), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.add, aten.clamp]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_3.run(buf15, 4, grid=grid(4), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_4.run(buf16, 4, grid=grid(4), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_mul_sub_5.run(buf12, buf14, buf11, buf15, buf16, buf17, 256, grid=grid(256), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_feature_5], Original ATen: [aten.sub, aten.clamp]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_4.run(buf18, 4, grid=grid(4), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 20, 4, 4), (320, 16, 4, 1), torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feature_cat], Original ATen: [aten.cat]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_6.run(buf1, primals_4, primals_5, primals_6, primals_7, buf3, primals_10, primals_11, primals_12, primals_13, buf5, primals_16, primals_17, primals_18, primals_19, buf7, primals_22, primals_23, primals_24, primals_25, buf17, buf13, buf14, buf11, buf15, buf16, buf18, buf19, 1280, grid=grid(1280), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.convolution]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf20; del buf20  # reuse
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf17; del buf17  # reuse
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13, input_14, input_15], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_7.run(buf21, primals_33, primals_34, primals_35, primals_36, primals_37, buf22, buf23, 256, grid=grid(256), stream=stream0)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf22, primals_1, primals_2, primals_4, primals_5, primals_6, primals_7, primals_8, primals_10, primals_11, primals_12, primals_13, primals_14, primals_16, primals_17, primals_18, primals_19, primals_20, primals_22, primals_23, primals_24, primals_25, primals_26, primals_28, primals_29, primals_30, primals_31, primals_32, primals_34, primals_35, primals_36, buf1, buf3, buf5, buf7, buf8, buf10, buf12, buf13, buf14, buf15, buf16, buf18, buf19, buf21, buf23, )
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, 20, 1, 1), (20, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37])
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:02:18.933000 2578050 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:02:18.947000 2578050 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/27/c27vwhbldxkw67pr2qpxixwlgfoepxf2chkcrfzuov27ait2pbto.py
