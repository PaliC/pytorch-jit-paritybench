V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['17_inference']
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] cpp_fused_cat_0 = async_compile.cpp_pybinding(['const float*', 'const float*', 'float*', 'float*'], '''
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #include "/tmp/torchinductor_sahanp/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        const float* in_ptr1,
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr0,
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr1)
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         #pragma GCC ivdep
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(64L); x1+=static_cast<int64_t>(16L))
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     if(C10_LIKELY(x1 >= static_cast<int64_t>(0) && x1 < static_cast<int64_t>(64L)))
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<int64_t>(x1 + 64L*x0), static_cast<int64_t>(16));
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         tmp0.store(out_ptr0 + static_cast<int64_t>(x1 + 128L*x0));
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         #pragma GCC ivdep
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(64L); x1+=static_cast<int64_t>(16L))
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     if(C10_LIKELY(x1 >= static_cast<int64_t>(0) && x1 < static_cast<int64_t>(64L)))
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<int64_t>(x1 + 64L*x0), static_cast<int64_t>(16));
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         tmp0.store(out_ptr1 + static_cast<int64_t>(x1 + 128L*x0));
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] }
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''')
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf2 = empty_strided_cpu((4, 8, 4, 4), (128, 16, 4, 1), torch.float32)
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf0 = reinterpret_tensor(buf2, (4, 4, 4, 4), (128, 16, 4, 1), 0)  # alias
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf1 = reinterpret_tensor(buf2, (4, 4, 4, 4), (128, 16, 4, 1), 64)  # alias
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cpp_fused_cat_0(arg0_1, arg1_1, buf0, buf1)
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del arg0_1
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del arg1_1
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cpu', dtype=torch.float32)
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cpu', dtype=torch.float32)
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:21:14.614000 3831937 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:14.615000 3831937 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/i4/ci4kgqq46mnqxmcf5tpw27uvjnxphg3mioep35ogrmlmkrjpcdfd.py
I0204 14:21:15.971000 3831937 site-packages/torch/_inductor/graph.py:2087] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/i4/ci4kgqq46mnqxmcf5tpw27uvjnxphg3mioep35ogrmlmkrjpcdfd.py
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['17_inference']
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] cpp_fused_cat_0 = async_compile.cpp_pybinding(['const float*', 'const float*', 'float*', 'float*'], '''
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #include "inductor_cache/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        const float* in_ptr1,
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr0,
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr1)
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         #pragma GCC ivdep
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             #pragma GCC ivdep
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(64L); x1+=static_cast<int64_t>(1L))
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         auto tmp0 = in_ptr0[static_cast<int64_t>(x1 + 64L*x0)];
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         out_ptr0[static_cast<int64_t>(x1 + 128L*x0)] = tmp0;
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         #pragma GCC ivdep
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             #pragma GCC ivdep
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(64L); x1+=static_cast<int64_t>(1L))
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         auto tmp0 = in_ptr1[static_cast<int64_t>(x1 + 64L*x0)];
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         out_ptr1[static_cast<int64_t>(x1 + 128L*x0)] = tmp0;
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] }
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''')
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf2 = empty_strided_cpu((4, 8, 4, 4), (128, 16, 4, 1), torch.float32)
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf0 = reinterpret_tensor(buf2, (4, 4, 4, 4), (128, 16, 4, 1), 0)  # alias
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf1 = reinterpret_tensor(buf2, (4, 4, 4, 4), (128, 16, 4, 1), 64)  # alias
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cpp_fused_cat_0(arg0_1, arg1_1, buf0, buf1)
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del arg0_1
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del arg1_1
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cpu', dtype=torch.float32)
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cpu', dtype=torch.float32)
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:10:09.439000 1129093 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:09.440000 1129093 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/so/cso5dju7sdj4redmesigcuohupp7omivfrundpgx5omtn4r7q5kz.py
