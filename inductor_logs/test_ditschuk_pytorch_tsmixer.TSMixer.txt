V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_forward']
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rl/crlbufqwgy3fkgn4ttr66jgjsbunvjq6yfb4kar7fv7eo76biwco.py
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.clone]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear => clone
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l6/cl6fcfmwoymjkpolyoekalv3vg6ogvfius46u23gvoxqgbtnuza2.py
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear, x_temp_1], Original ATen: [aten.add, aten.relu, aten.threshold_backward]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear => add
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_temp_1 => relu
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_1, %primals_3), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add,), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_relu_threshold_backward_1 = async_compile.triton('triton_poi_fused_add_relu_threshold_backward_1', '''
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_relu_threshold_backward_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_relu_threshold_backward_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qn/cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, x_1, x_4], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_1
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_3, mul_1, mul_2, sub
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => add_5, mul_4, mul_5, sub_1
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %permute_2), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %unsqueeze), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_1), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_2), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_3), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %unsqueeze_4), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_5), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_6), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_7), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_2', '''
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, out_ptr0, out_ptr1, out_ptr2, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (y0), ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr4 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr6 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr8 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr9 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr10 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1, 1], 0, tl.int32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp4, tmp3)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 + tmp5
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-05
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1, 1], 1, tl.int32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp12
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1.0
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp10
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.sqrt(tmp25)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp13 / tmp26
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 * tmp15
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 * tmp28
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp6, xmask & ymask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2 + 4*y3), tmp21, xmask & ymask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2 + 4*y3), tmp33, xmask & ymask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sy/csyhmvcimd5lhcz7i7wawymc2mrftrd2rk45qkmbdna6g5xjukdz.py
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.relu, aten.threshold_backward]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => relu_1
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%view_7,), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_3 = async_compile.triton('triton_poi_fused_relu_threshold_backward_3', '''
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_3(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z5/cz56zaqvzm5mcw2beeqwj6e3awcfzicquyfa3icwtmv5evks2gv6.py
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.clone]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_temp_4 => clone_4
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_5,), kwargs = {memory_format: torch.contiguous_format})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 16*y1), tmp4, xmask & ymask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3a/c3anrul5uup5bqiibmvshyatu7xbkczmhauquanetjfsfbig46yd.py
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.add]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_temp_4 => add_7
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_11, %primals_17), kwargs = {})
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_5 = async_compile.triton('triton_poi_fused_add_5', '''
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_5(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17 = args
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (16, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (16, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (16, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, 4), (4, 1))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (64, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 64), (64, 1))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, 4), (4, 1))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.clone]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_1, buf0, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.mm]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), out=buf1)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear, x_temp_1], Original ATen: [aten.add, aten.relu, aten.threshold_backward]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_relu_threshold_backward_1.run(buf1, primals_3, buf12, 64, grid=grid(64), stream=stream0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 1), (16, 1, 1), torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, x_1, x_4], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_2.run(primals_1, buf1, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, buf2, buf3, buf4, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((16, 64), (64, 1), torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.addmm]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (16, 4), (4, 1), 0), reinterpret_tensor(primals_12, (4, 64), (1, 4), 0), out=buf5)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf5, (4, 4, 64), (256, 64, 1), 0); del buf5  # reuse
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 64), (256, 64, 1), torch.bool)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.relu, aten.threshold_backward]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_3.run(buf6, primals_13, buf11, 1024, grid=grid(1024), stream=stream0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf1; del buf1  # reuse
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten.addmm]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf6, (16, 64), (64, 1), 0), reinterpret_tensor(primals_14, (64, 4), (1, 64), 0), out=buf7)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.clone]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf3, buf7, primals_15, buf8, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf7; del buf7  # reuse
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.mm]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf8, (16, 4), (4, 1), 0), reinterpret_tensor(primals_16, (4, 4), (1, 4), 0), out=buf9)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf9, (4, 4, 4), (16, 4, 1), 0); del buf9  # reuse
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.add]
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_5.run(buf10, primals_17, 64, grid=grid(64), stream=stream0)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (4, 4, 4), (16, 1, 4), 0), primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(buf2, (4, 16, 1), (16, 1, 1), 0), reinterpret_tensor(buf4, (16, 4), (4, 1), 0), reinterpret_tensor(buf6, (16, 64), (64, 1), 0), reinterpret_tensor(buf8, (16, 4), (4, 1), 0), primals_16, primals_14, buf11, primals_12, buf12, )
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17])
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:58:52.458000 2300082 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:52.467000 2300082 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ny/cny7372bvwjgmz3yk6hmqyl7tjxwso34lsmrczcwvu5ow75ap4gq.py
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_forward']
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rl/crlbufqwgy3fkgn4ttr66jgjsbunvjq6yfb4kar7fv7eo76biwco.py
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.clone]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear => clone
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/l6/cl6fcfmwoymjkpolyoekalv3vg6ogvfius46u23gvoxqgbtnuza2.py
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear, x_temp_1], Original ATen: [aten.add, aten.relu, aten.threshold_backward]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear => add
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_temp_1 => relu
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_1, %primals_3), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add,), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_relu_threshold_backward_1 = async_compile.triton('triton_poi_fused_add_relu_threshold_backward_1', '''
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_relu_threshold_backward_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_relu_threshold_backward_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qn/cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, x_1, x_4], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_1
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_3, mul_1, mul_2, sub
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => add_5, mul_4, mul_5, sub_1
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %permute_2), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %unsqueeze), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_1), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_2), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_3), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %unsqueeze_4), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_5), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_6), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_7), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_2', '''
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, out_ptr0, out_ptr1, out_ptr2, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (y0), ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr4 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr6 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr8 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr9 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr10 + (x2 + 4*y0), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1, 1], 0, tl.int32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp4, tmp3)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 + tmp5
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-05
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1, 1], 1, tl.int32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp12
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1.0
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp10
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.sqrt(tmp25)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp13 / tmp26
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 * tmp15
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 * tmp28
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp6, xmask & ymask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2 + 4*y3), tmp21, xmask & ymask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2 + 4*y3), tmp33, xmask & ymask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sy/csyhmvcimd5lhcz7i7wawymc2mrftrd2rk45qkmbdna6g5xjukdz.py
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => relu_1
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%view_7,), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_3 = async_compile.triton('triton_poi_fused_relu_threshold_backward_3', '''
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_3(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z5/cz56zaqvzm5mcw2beeqwj6e3awcfzicquyfa3icwtmv5evks2gv6.py
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.clone]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_temp_4 => clone_4
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_5,), kwargs = {memory_format: torch.contiguous_format})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2 + 4*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 16*y1), tmp4, xmask & ymask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3a/c3anrul5uup5bqiibmvshyatu7xbkczmhauquanetjfsfbig46yd.py
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.add]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_temp_4 => add_7
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_11, %primals_17), kwargs = {})
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_5 = async_compile.triton('triton_poi_fused_add_5', '''
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_5(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17 = args
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (16, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (16, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (16, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, 4), (4, 1))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (64, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 64), (64, 1))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, 4), (4, 1))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.clone]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_1, buf0, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.mm]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), out=buf1)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear, x_temp_1], Original ATen: [aten.add, aten.relu, aten.threshold_backward]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_relu_threshold_backward_1.run(buf1, primals_3, buf12, 64, grid=grid(64), stream=stream0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 1), (16, 1, 1), torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, x_1, x_4], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_2.run(primals_1, buf1, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, buf2, buf3, buf4, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((16, 64), (64, 1), torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.addmm]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (16, 4), (4, 1), 0), reinterpret_tensor(primals_12, (4, 64), (1, 4), 0), out=buf5)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf5, (4, 4, 64), (256, 64, 1), 0); del buf5  # reuse
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 64), (256, 64, 1), torch.bool)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_3.run(buf6, primals_13, buf11, 1024, grid=grid(1024), stream=stream0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf1; del buf1  # reuse
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten.addmm]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf6, (16, 64), (64, 1), 0), reinterpret_tensor(primals_14, (64, 4), (1, 64), 0), out=buf7)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.clone]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf3, buf7, primals_15, buf8, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf7; del buf7  # reuse
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.mm]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf8, (16, 4), (4, 1), 0), reinterpret_tensor(primals_16, (4, 4), (1, 4), 0), out=buf9)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf9, (4, 4, 4), (16, 4, 1), 0); del buf9  # reuse
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_temp_4], Original ATen: [aten.add]
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_5.run(buf10, primals_17, 64, grid=grid(64), stream=stream0)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (4, 4, 4), (16, 1, 4), 0), primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(buf2, (4, 16, 1), (16, 1, 1), 0), reinterpret_tensor(buf4, (16, 4), (4, 1), 0), reinterpret_tensor(buf6, (16, 64), (64, 1), 0), reinterpret_tensor(buf8, (16, 4), (4, 1), 0), primals_16, primals_14, buf11, primals_12, buf12, )
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17])
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:48:09.569000 3857546 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:48:09.578000 3857546 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/pd/cpda3l356likugpon5fuhxhyg2di22uyopg56po66natp6a5jsfs.py
