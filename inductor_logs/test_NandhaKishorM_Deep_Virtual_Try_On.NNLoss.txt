V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_inference']
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7x/c7xzyrhnp6a6umj6lqd5bukboe6m4d5lh44cixu34orguthivmce.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-2) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-10) + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vz/cvz7kpqbgvfsrdzik55obs2iwuglmgxlxehrisla74pu6z6i6ekc.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-9) + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ph/cphzzqzus54bvt6xwn3zodzrwdfzlmhiwcsufjqi7ec5nq3uxo53.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-8) + x3), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2s/c2stokgki6jo2amz5nx6waraze7n5sbrwp5ad3ebmvmfpfbvsiuv.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-7) + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ml/cmlmc5ircmkostmhqoeozhxyu7lqfzo2d4sd2tdjpdqsvc4dx34m.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-6) + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = (-1) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = (-2) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 & tmp14
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 & tmp16
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 & tmp17
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + ((-6) + x4), tmp20 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (25*x4), tmp21, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wq/cwqmrpioffp5ibszqn4hqhm4cesmzvof6pjh453227yp7f3smspy.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_5 = async_compile.triton('triton_poi_fused_cat_5', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ex/cext3lyij3xukr33tgutgr4pyohesqmebaq55tjuqdir2rrikbwp.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_6 = async_compile.triton('triton_poi_fused_cat_6', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_6', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-4) + x3), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4t/c4topt53rkukoaqkinbipwgub2gnjoodpnwcanurmczudj6sbmkc.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_7 = async_compile.triton('triton_poi_fused_cat_7', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_7', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_7(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-3) + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lj/cljib6fe64qxr7ysjnojqotn3i6c6vfnnw6jw2edlyuzpqsjywsl.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_8 = async_compile.triton('triton_poi_fused_cat_8', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_8', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_8(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-2) + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = (-2) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 & tmp14
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 & tmp16
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 & tmp17
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + ((-2) + x4), tmp20 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (25*x4), tmp21, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qv/cqvbhn4xvau7sknxshaqxeqvrnpju75dqy5kuabbwy5l6q2kzifx.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_9 = async_compile.triton('triton_poi_fused_cat_9', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_9', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_9(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-1) + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/33/c33avqpewprxdoffmk34pfumlian2hgl6a62s2h6owlqpy2zncbc.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_10 = async_compile.triton('triton_poi_fused_cat_10', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_10', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_10(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (x3), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ng/cngynjomsqwoajwl3wwo4uj22bhsbko2n3oevcdn6inim5rbisnu.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_11 = async_compile.triton('triton_poi_fused_cat_11', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_11', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z4/cz4segd6fobiqzsnbh2cdjiu5kzdskrvubnnrqg7sfc5324b256h.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_12 = async_compile.triton('triton_poi_fused_cat_12', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_12', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_12(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (2 + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = (-2) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 & tmp14
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 & tmp16
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 & tmp17
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (2 + x4), tmp20 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (25*x4), tmp21, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6f/c6fhmn7corzwkx6fkkfwgt3lipzvc6j7xv7fzutretq6iij6jg7d.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_13 = async_compile.triton('triton_poi_fused_cat_13', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_13', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_13(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4d/c4diaayjbust6z3ren75c2m2lkjpw23n64xjujcbu5tvfe4kollo.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_14 = async_compile.triton('triton_poi_fused_cat_14', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_14', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_14(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (4 + x3), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bd/cbdploqyak6zlb2nuei3emiab3oefnnjrzzttpdn7zd45cuanptn.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_15 = async_compile.triton('triton_poi_fused_cat_15', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_15', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_15(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (5 + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tz/ctzvbooks7mh7pv7m36etuvowyrclrybndt2oxryfmktcmqcfllk.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_16 = async_compile.triton('triton_poi_fused_cat_16', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_16', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_16(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 2 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = (-2) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 & tmp14
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 & tmp16
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 & tmp17
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (6 + x4), tmp20 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (25*x4), tmp21, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wc/cwcrnnxqh3obntt5a66i77au2ju43zandrolk5hptfia73ir74z3.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_17 = async_compile.triton('triton_poi_fused_cat_17', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_17', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_17(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 2 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (7 + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ns/cnsq6fyjndjlnadfvss7ivsyq7u7dbk2h6hpwm5a7s5lctok3u7e.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_18 = async_compile.triton('triton_poi_fused_cat_18', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_18', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_18(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 2 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (8 + x3), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/au/caut65gbvebh6ioxaueksmijrfoq62wmnw4pyvsfsnnzze5pulja.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_19 = async_compile.triton('triton_poi_fused_cat_19', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_19', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_19(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 2 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (9 + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ml/cmlwcvjjsf255jmowaln5og3kpjjih5wrrrcrkamzk3vwjsdkrhs.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_20 = async_compile.triton('triton_poi_fused_cat_20', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_20', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_20(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 2 + x1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (10 + x4), tmp10 & xmask, other=-10000.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j3/cj3kpyfkc3u46cfbwlve2ggkj55b36r5tltaxutdhxbinrhfzoj4.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, abs_2, norms, min_1], Original ATen: [aten.sub, aten.abs, aten.sum, aten.min]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_2 => abs_1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_1 => min_1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norms => sum_1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat, %unsqueeze_26), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%abs_1, [1]), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_1 : [num_users=1] = call_function[target=torch.ops.aten.min.dim](args = (%sum_1, -1), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_abs_min_sub_sum_21 = async_compile.triton('triton_per_fused_abs_min_sub_sum_21', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 32},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_abs_min_sub_sum_21', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_abs_min_sub_sum_21(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 25
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + 25*x0 + 1600*x1), rmask & xmask, other=0.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x1), xmask, eviction_policy='evict_last')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (400 + r2 + 25*x0 + 1600*x1), rmask & xmask, other=0.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask, eviction_policy='evict_last')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (800 + r2 + 25*x0 + 1600*x1), rmask & xmask, other=0.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask, eviction_policy='evict_last')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (1200 + r2 + 25*x0 + 1600*x1), rmask & xmask, other=0.0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask, eviction_policy='evict_last')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.abs(tmp2)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.abs(tmp6)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.abs(tmp11)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 + tmp12
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 - tmp15
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl_math.abs(tmp16)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK, RBLOCK])
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(rmask & xmask, tmp19, float("inf"))
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.min2(tmp21, 1)[:, None]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp22, xmask)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6q/c6qjpxf7wxrvobe3bcvurub374adoehxo5wkln2kdnh3a4qdllnn.py
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [loss_1], Original ATen: [aten.mean]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => mean
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%getitem,), kwargs = {})
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_22 = async_compile.triton('triton_per_fused_mean_22', '''
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_22', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_22(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(tmp1, 1)[:, None]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 64.0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4, 4, 4, 25), (1600, 400, 100, 25, 1), torch.float32)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 0)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 1)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(arg0_1, buf1, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 2)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(arg0_1, buf2, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 3)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(arg0_1, buf3, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 4)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 5)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(arg0_1, buf4, buf5, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 6)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_5.run(arg0_1, buf6, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 7)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_6.run(arg0_1, buf7, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 8)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_7.run(arg0_1, buf8, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 9)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 10)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_8.run(arg0_1, buf9, buf10, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 11)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_9.run(arg0_1, buf11, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 12)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_10.run(arg0_1, buf12, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 13)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_11.run(arg0_1, buf13, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 14)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 15)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_12.run(arg0_1, buf14, buf15, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 16)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_13.run(arg0_1, buf16, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 17)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_14.run(arg0_1, buf17, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 18)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_15.run(arg0_1, buf18, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 19)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 20)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_16.run(arg0_1, buf19, buf20, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 21)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_17.run(arg0_1, buf21, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 22)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_18.run(arg0_1, buf22, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 23)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_19.run(arg0_1, buf23, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 24)  # alias
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_20.run(arg0_1, buf24, 256, grid=grid(256), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, abs_2, norms, min_1], Original ATen: [aten.sub, aten.abs, aten.sum, aten.min]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_abs_min_sub_sum_21.run(buf25, arg1_1, buf26, 64, 25, grid=grid(64), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf19
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf21
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf22
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf23
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf24
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((), (), torch.float32)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = buf28; del buf28  # reuse
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [loss_1], Original ATen: [aten.mean]
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_22.run(buf29, buf26, 1, 64, grid=grid(1), stream=stream0)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf29, )
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:41:20.587000 1922698 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:41:20.613000 1922698 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/h3/ch36l6izsci5kq2e4o772malv5kzx5vqc5ewpnf6mckn63p7i33c.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_inference']
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7x/c7xzyrhnp6a6umj6lqd5bukboe6m4d5lh44cixu34orguthivmce.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-2) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-10) + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vz/cvz7kpqbgvfsrdzik55obs2iwuglmgxlxehrisla74pu6z6i6ekc.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-9) + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ph/cphzzqzus54bvt6xwn3zodzrwdfzlmhiwcsufjqi7ec5nq3uxo53.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-8) + x3), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2s/c2stokgki6jo2amz5nx6waraze7n5sbrwp5ad3ebmvmfpfbvsiuv.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-7) + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ml/cmlmc5ircmkostmhqoeozhxyu7lqfzo2d4sd2tdjpdqsvc4dx34m.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-2) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-6) + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = (-1) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = (-2) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 & tmp14
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 & tmp16
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 & tmp17
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + ((-6) + x4), tmp20 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (25*x4), tmp21, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wq/cwqmrpioffp5ibszqn4hqhm4cesmzvof6pjh453227yp7f3smspy.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_5 = async_compile.triton('triton_poi_fused_cat_5', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ex/cext3lyij3xukr33tgutgr4pyohesqmebaq55tjuqdir2rrikbwp.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_6 = async_compile.triton('triton_poi_fused_cat_6', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_6', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-4) + x3), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4t/c4topt53rkukoaqkinbipwgub2gnjoodpnwcanurmczudj6sbmkc.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_7 = async_compile.triton('triton_poi_fused_cat_7', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_7', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_7(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-3) + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lj/cljib6fe64qxr7ysjnojqotn3i6c6vfnnw6jw2edlyuzpqsjywsl.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_8 = async_compile.triton('triton_poi_fused_cat_8', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_8', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_8(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-2) + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = (-2) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 & tmp14
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 & tmp16
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 & tmp17
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + ((-2) + x4), tmp20 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (25*x4), tmp21, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qv/cqvbhn4xvau7sknxshaqxeqvrnpju75dqy5kuabbwy5l6q2kzifx.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_9 = async_compile.triton('triton_poi_fused_cat_9', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_9', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_9(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-1) + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/33/c33avqpewprxdoffmk34pfumlian2hgl6a62s2h6owlqpy2zncbc.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_10 = async_compile.triton('triton_poi_fused_cat_10', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_10', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_10(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (x3), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ng/cngynjomsqwoajwl3wwo4uj22bhsbko2n3oevcdn6inim5rbisnu.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_11 = async_compile.triton('triton_poi_fused_cat_11', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_11', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z4/cz4segd6fobiqzsnbh2cdjiu5kzdskrvubnnrqg7sfc5324b256h.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_12 = async_compile.triton('triton_poi_fused_cat_12', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_12', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_12(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (2 + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = (-2) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 & tmp14
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 & tmp16
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 & tmp17
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (2 + x4), tmp20 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (25*x4), tmp21, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6f/c6fhmn7corzwkx6fkkfwgt3lipzvc6j7xv7fzutretq6iij6jg7d.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_13 = async_compile.triton('triton_poi_fused_cat_13', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_13', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_13(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4d/c4diaayjbust6z3ren75c2m2lkjpw23n64xjujcbu5tvfe4kollo.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_14 = async_compile.triton('triton_poi_fused_cat_14', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_14', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_14(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (4 + x3), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bd/cbdploqyak6zlb2nuei3emiab3oefnnjrzzttpdn7zd45cuanptn.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_15 = async_compile.triton('triton_poi_fused_cat_15', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_15', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_15(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (5 + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tz/ctzvbooks7mh7pv7m36etuvowyrclrybndt2oxryfmktcmqcfllk.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_16 = async_compile.triton('triton_poi_fused_cat_16', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_16', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_16(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 2 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = (-2) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 & tmp14
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 & tmp16
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 & tmp17
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (6 + x4), tmp20 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (25*x4), tmp21, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wc/cwcrnnxqh3obntt5a66i77au2ju43zandrolk5hptfia73ir74z3.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_17 = async_compile.triton('triton_poi_fused_cat_17', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_17', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_17(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 2 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (7 + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ns/cnsq6fyjndjlnadfvss7ivsyq7u7dbk2h6hpwm5a7s5lctok3u7e.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_18 = async_compile.triton('triton_poi_fused_cat_18', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_18', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_18(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 2 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (8 + x3), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x3), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/au/caut65gbvebh6ioxaueksmijrfoq62wmnw4pyvsfsnnzze5pulja.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_19 = async_compile.triton('triton_poi_fused_cat_19', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_19', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_19(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 2 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (9 + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ml/cmlwcvjjsf255jmowaln5og3kpjjih5wrrrcrkamzk3vwjsdkrhs.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reference => cat
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5, %unsqueeze_6, %unsqueeze_7, %unsqueeze_8, %unsqueeze_9, %unsqueeze_10, %unsqueeze_11, %unsqueeze_12, %unsqueeze_13, %unsqueeze_14, %unsqueeze_15, %unsqueeze_16, %unsqueeze_17, %unsqueeze_18, %unsqueeze_19, %unsqueeze_20, %unsqueeze_21, %unsqueeze_22, %unsqueeze_23, %unsqueeze_24], -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_20 = async_compile.triton('triton_poi_fused_cat_20', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_20', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_20(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 2 + x1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 2 + x0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (10 + x4), tmp10 & xmask, other=-10000.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (25*x4), tmp11, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/j3/cj3kpyfkc3u46cfbwlve2ggkj55b36r5tltaxutdhxbinrhfzoj4.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, abs_2, norms, min_1], Original ATen: [aten.sub, aten.abs, aten.sum, aten.min]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_2 => abs_1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_1 => min_1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norms => sum_1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat, %unsqueeze_26), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%abs_1, [1]), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_1 : [num_users=1] = call_function[target=torch.ops.aten.min.dim](args = (%sum_1, -1), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_abs_min_sub_sum_21 = async_compile.triton('triton_per_fused_abs_min_sub_sum_21', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 32},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_abs_min_sub_sum_21', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_abs_min_sub_sum_21(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 25
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + 25*x0 + 1600*x1), rmask & xmask, other=0.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x1), xmask, eviction_policy='evict_last')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (400 + r2 + 25*x0 + 1600*x1), rmask & xmask, other=0.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask, eviction_policy='evict_last')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (800 + r2 + 25*x0 + 1600*x1), rmask & xmask, other=0.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask, eviction_policy='evict_last')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (1200 + r2 + 25*x0 + 1600*x1), rmask & xmask, other=0.0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask, eviction_policy='evict_last')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.abs(tmp2)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.abs(tmp6)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.abs(tmp11)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 + tmp12
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 - tmp15
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl_math.abs(tmp16)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK, RBLOCK])
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(rmask & xmask, tmp19, float("inf"))
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.min2(tmp21, 1)[:, None]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp22, xmask)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6q/c6qjpxf7wxrvobe3bcvurub374adoehxo5wkln2kdnh3a4qdllnn.py
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [loss_1], Original ATen: [aten.mean]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => mean
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%getitem,), kwargs = {})
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_22 = async_compile.triton('triton_per_fused_mean_22', '''
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_22', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_22(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(tmp1, 1)[:, None]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 64.0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4, 4, 4, 25), (1600, 400, 100, 25, 1), torch.float32)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 0)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 1)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(arg0_1, buf1, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 2)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(arg0_1, buf2, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 3)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(arg0_1, buf3, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 4)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 5)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(arg0_1, buf4, buf5, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 6)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_5.run(arg0_1, buf6, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 7)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_6.run(arg0_1, buf7, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 8)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_7.run(arg0_1, buf8, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 9)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 10)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_8.run(arg0_1, buf9, buf10, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 11)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_9.run(arg0_1, buf11, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 12)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_10.run(arg0_1, buf12, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 13)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_11.run(arg0_1, buf13, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 14)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 15)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_12.run(arg0_1, buf14, buf15, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 16)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_13.run(arg0_1, buf16, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 17)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_14.run(arg0_1, buf17, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 18)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_15.run(arg0_1, buf18, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 19)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 20)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_16.run(arg0_1, buf19, buf20, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 21)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_17.run(arg0_1, buf21, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 22)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_18.run(arg0_1, buf22, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 23)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_19.run(arg0_1, buf23, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = reinterpret_tensor(buf25, (4, 4, 4, 4, 1), (1600, 400, 100, 25, 1), 24)  # alias
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reference], Original ATen: [aten.cat]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_20.run(arg0_1, buf24, 256, grid=grid(256), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, abs_2, norms, min_1], Original ATen: [aten.sub, aten.abs, aten.sum, aten.min]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_abs_min_sub_sum_21.run(buf25, arg1_1, buf26, 64, 25, grid=grid(64), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf19
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf21
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf22
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf23
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf24
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((), (), torch.float32)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = buf28; del buf28  # reuse
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [loss_1], Original ATen: [aten.mean]
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_22.run(buf29, buf26, 1, 64, grid=grid(1), stream=stream0)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf29, )
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:31:18.543000 30138 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:31:18.567000 30138 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/zv/czvjbzla25s7pfzxmkw7eknkftgbyoj6gf264jlu76hgmqp5tcfr.py
